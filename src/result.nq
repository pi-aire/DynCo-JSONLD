<https://api.github.com/repos/digitalbazaar/pyld/issues/100> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/100> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613840143> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/100> <http://schema.org/creator> <https://api.github.com/users/zwelz3> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/100> <http://schema.org/description> "The [JSON-LD 1.1 Spec has support for JSON Literals](https://w3c.github.io/json-ld-syntax/#json-literals). \r\n\r\nThe pyld processor does not have support for this keyword, and returns the error \r\n> JsonLdError: ('Invalid JSON-LD syntax; an @context @type value must be an absolute IRI.',)\r\nType: jsonld.SyntaxError\r\nCode: invalid type mapping\r\n\r\nThis minimal example from the spec recreates the error:\r\n```\r\nfrom pyld.jsonld import expand\r\n\r\ndocument = expand(\r\n  {\r\n    \"@context\": {\r\n      \"@version\": 1.1,\r\n      \"e\": {\"@id\": \"http://example.com/vocab/json\", \"@type\": \"@json\"}\r\n    },\r\n    \"e\": [  ]\r\n  }\r\n)\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/100> <http://schema.org/endDate> "2020-04-15T06:20:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/100> <http://schema.org/identifier> "507877889"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/100> <http://schema.org/startDate> "2019-10-16T14:09:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/100> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/100"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/100> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/101> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/101> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/550455939> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/101> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/714277478> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/101> <http://schema.org/ItemList> <https://api.github.com/repos/digitalbazaar/pyld/labels/performance> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/101> <http://schema.org/creator> <https://api.github.com/users/RinkeHoekstra> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/101> <http://schema.org/description> "I noticed very slow performance on the `to_rdf` procedure for a JSON-LD file with several tens of thousands of typed object values for a single property.\r\n\r\nRunning cProfiles, it turned out that there was an inordinate amount of type spent in the methods `compare_values` and `has_value`.\r\n\r\nThis pull request introduces the following changes:\r\n* Re-implemented `compare_values` with exception handling rather than if-then statements. Also changed the ordering and removed the boolean comparison between primitive values (It may need to return, but I couldn't understand the reason behind it)\r\n* Re-implemented the `has_value` method (which called `compare_values` so very frequently) to perform checks only once, and only compare values of the same type.\r\n\r\nThere's also a question on the way the `has_value` is implemented: it seems that if the `value` parameter that's passed is an array, it is completely ignored. Is that the correct behavior?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/101> <http://schema.org/identifier> "518532788"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/101> <http://schema.org/startDate> "2019-11-06T15:08:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/101> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/101"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/101> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/102> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/102> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/574810500> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/102> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/575033178> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/102> <http://schema.org/creator> <https://api.github.com/users/alegrm> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/102> <http://schema.org/description> "Hello, I wonder how would possible to compact a document with the following context:\r\n```\r\nCONTEXT =  [\r\n    \"https://json-ld.org/contexts/person.jsonld\",\r\n    \"https://json-ld.org/contexts/place.jsonld\",\r\n    {\r\n        \"title\": \"http://purl.org/dc/terms/title\", \r\n        \"Building\" : \"http://schema.org/Building\"\r\n    }\r\n]\r\n```\r\nbecause I'm getting this error:\r\n```\r\nJsonLdError: ('Could not process context before compaction.',)\r\nType: jsonld.CompactError\r\nCause: ('Invalid JSON-LD syntax; @context must be an object.',)\r\nType: jsonld.SyntaxError\r\nCode: invalid local context\r\nDetails: {'context': 'https://json-ld.org/contexts/person.jsonld'}\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/102> <http://schema.org/endDate> "2020-01-16T08:09:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/102> <http://schema.org/identifier> "548160530"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/102> <http://schema.org/startDate> "2020-01-10T16:04:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/102> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/102"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/102> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/103> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/103> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579407939> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/103> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579421613> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/103> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579428848> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/103> <http://schema.org/creator> <https://api.github.com/users/sanuann> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/103> <http://schema.org/description> "when the input json-ld data has remote context in it, jsonld.normalize throws error. \r\n\r\ninput json-ld:\r\n```\r\n{\r\n    \"@context\": [ \"https://raw.githubusercontent.com/ReproNim/reproschema/master/contexts/generic\",\r\n        \"https://raw.githubusercontent.com/ReproNim/reproschema/master/activities/PHQ-9/phq9_context\"\r\n    ],\r\n    \"@type\": \"reproschema:Activity\",\r\n    \"@id\": \"phq9_schema\",\r\n    \"skos:prefLabel\": \"PHQ-9 Assessment\",\r\n    \"skos:altLabel\": \"phq9_schema\",\r\n    \"schema:description\": \"PHQ-9 assessment schema\",\r\n    \"schema:schemaVersion\": \"0.0.1\",\r\n    \"schema:version\": \"0.0.1\",\r\n    \"schema:citation\": \"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1495268/\",\r\n    \"preamble\": \"Over the last 2 weeks, how often have you been bothered by any of the following problems?\",\r\n    \"scoringLogic\": {\r\n        \"phq9_total_score\": \"phq9_1 + phq9_2 + phq9_3 + phq9_4 + phq9_5 + phq9_6 + phq9_7 + phq9_8 + phq9_9\"\r\n    },\r\n    \"scoring_logic\": [\r\n        {\"variableName\": \"phq9_total_score\", \"jsExpression\": \"phq9_1 + phq9_2 + phq9_3 + phq9_4 + phq9_5 + phq9_6 + phq9_7 + phq9_8 + phq9_9\"}\r\n    ]\r\n}\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/103> <http://schema.org/endDate> "2020-01-28T20:01:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/103> <http://schema.org/identifier> "554847510"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/103> <http://schema.org/startDate> "2020-01-24T16:56:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/103> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/103"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/103> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/104> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/104> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/591573550> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/104> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/736825094> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/104> <http://schema.org/creator> <https://api.github.com/users/stuchalk> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/104> <http://schema.org/description> "I have a context that is split over many context files (https://stuchalk.github.io/scidata/contexts/scidata.jsonld) and as a result is getting an error on the JSON-LD playground that uses this package.  Can the value be increased to 30, as 10 seems too low?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/104> <http://schema.org/identifier> "570691784"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/104> <http://schema.org/startDate> "2020-02-25T16:43:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/104> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/104"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/104> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/105> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/105> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/638387844> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/105> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/639208842> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/105> <http://schema.org/creator> <https://api.github.com/users/sanuann> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/105> <http://schema.org/description> "I am trying to run pyld functions (expand, normalize) on the document below but it doesn't seem to get the context urls linked.\r\n```py\r\n    doc = {\r\n                \"@context\": [\r\n                    \"https://schema.repronim.org/rl/contexts/generic\",\r\n                    \"https://schema.repronim.org/rl/activities/PHQ-9/phq9_context\"\r\n                ],\r\n                \"@type\": \"reproschema:Activity\",\r\n                \"@id\": \"phq9_schema\",\r\n                \"skos:prefLabel\": \"PHQ-9 Assessment\",\r\n                \"schema:description\": \"PHQ-9 assessment schema\",\r\n                \"schema:citation\": \"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1495268/\",\r\n                \"preamble\": {\r\n                    \"en\": \"Over the last 2 weeks, how often have you been bothered by any of the following problems?\",\r\n                    \"es\": \"Durante las últimas 2 semanas, ¿con qué frecuencia le han molestado los siguintes problemas?\"\r\n                }\r\n    }\r\n    normalized_file = jsonld.normalize(doc, {'algorithm': 'URDNA2015', 'format': 'application/n-quads'})\r\n```\r\n\r\nThis doesn't work on the JSON-LD playground either.\r\nhow can I make this work? Does pyld support content negotiation/Is there a way to force accept-header? " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/105> <http://schema.org/identifier> "574969104"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/105> <http://schema.org/startDate> "2020-03-03T21:45:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/105> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/105"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/105> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596883164> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596901187> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597924892> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597933338> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600915365> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600932941> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604707156> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612478840> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://schema.org/description> "* **BREAKING**: Versions of Python before 3.4 are no longer supported.\r\n* Update conformance docs.\r\n* Add all keywords and update options.\r\n* Default processingMode to json-ld-1.1.\r\n* Implement logic for marking tests as pending, so that it will fail if a pending test passes.\r\n* Consolidate documentLoader option and defaults into a load_document method to also handle JSON (eventually HTML) parsing.\r\n* Add support for rel=alternate for non-JSON-LD docs.\r\n* Context processing:\r\n  * Support `@propagate` in context processing and propagate option.\r\n  * Support for `@import`. (Some issues confusing recursion errors for invalid contexts).\r\n  * Make `override_protected` and `propagate` optional arguments to `_create_term_definition` and `_process_context` instead of using option argument.\r\n  * Improve management of previous contexts.\r\n  * Imported contexts must resolve to an object.\r\n  * Do remote context processing from within _process_contexts, as logic is too complicated for pre-loading. Removes _find_context_urls and _retrieve_context_urls.\r\n* Create Term Definition:\r\n  * Allow `@type` as a term under certain circumstances.\r\n  * Reject and warn on keyword-like terms.\r\n  * Support protected term definitions.\r\n  * Look for keyword patterns and warn/return.\r\n  * Look for terms that are compact IRIs that don't expand to the same thing.\r\n  * Basic support for `@json` and `@none` as values of `@type`.\r\n  * If `@container` includes `@type`, `@type` must be `@id` or `@vocab`.\r\n  * Support `@index` and `@direction`.\r\n  * Corner-case checking for `@prefix`.\r\n  * Validate scoped contexts even if not used.\r\n  * Support relative vocabulary IRIs.\r\n  * Fix check that term has the form of an IRI.\r\n  * Delay adding mapping to end of _create_term_definition.\r\n  * If a scoped context is null, wrap it in an array so it doesn't seem to be undefined.\r\n* IRI Expansion:\r\n  * Find keyword patterns.\r\n  * Don't treat terms starting with a colon as IRIs.\r\n  * Only return a resulting IRI if it is absolute.\r\n  * Fix _is_absolute_iri to use a reasonable regular expression and some other _expand_iri issues.\r\n  * Fix to detecting relative IRIs.\r\n  * Fix special case where relative path should not have a leading '/'\r\n* Compaction:\r\n  * Compact `@direction`.\r\n  * Compact `@type`: `@none`.\r\n  * Compact `@included`.\r\n  * Honor `@container`: `@set` on `@type`.\r\n  * Lists of Lists.\r\n  * Improve handling of scoped contexts and propagate.\r\n  * Improve map compaction, including indexed properties.\r\n  * Catch Absolute IRI confused with prefix.\r\n* Expansion:\r\n  * Updates to expansion algorithm.\r\n  * _expand_value adds `@direction` from term definition.\r\n  * JSON Literals.\r\n  * support `@direction` when expanding.\r\n  * support lists of lists.\r\n  * support property indexes.\r\n  * improve graph container expansion.\r\n  * Order types when applying scoped contexts.\r\n  * Use type_scoped_ctx when expanding values of `@type`.\r\n  * Use propagate and override_protected properly when creating expansion contexts.\r\n* Flattening:\r\n  * Rewrite _create_node_map based on 1.1 algorithm.\r\n  * Flatten `@included`.\r\n  * Flatten lists of lists.\r\n  * Update merge_node_maps for `@type`.\r\n* ToRdf:\r\n  * Support for I18N direction.\r\n  * Support for Lists of Lists.\r\n  * Partial support for JSON canonicalization of JSON literals.\r\n    * Includes local copy of JCS library, but doesn't load.\r\n  * Lists of Lists.\r\n  * Text Direction 'i18n-datatype'.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://schema.org/endDate> "2020-04-13T05:13:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://schema.org/identifier> "577425048"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://schema.org/startDate> "2020-03-08T00:58:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/106"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/106> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/107> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/107> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600933232> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/107> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601299826> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/107> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601309466> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/107> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/107> <http://schema.org/description> "- Remove unrelated 'canonicalize' package from requirements.txt.\r\n- Fix package namespaces.\r\n- Incorrect fix for value type.\r\n\r\nThat str(..) thing is wrong, I forget the right way to do that, but this is a start." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/107> <http://schema.org/endDate> "2020-03-19T17:01:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/107> <http://schema.org/identifier> "584087771"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/107> <http://schema.org/startDate> "2020-03-19T00:47:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/107> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/107"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/107> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/108> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/108> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/602129749> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/108> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609875049> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/108> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/108> <http://schema.org/description> "* Use lxml.html to load HTML and parse in load_html.\r\n  * For HTML, the API base option can be updated from base element.\r\n\r\nNote this is a PRI into 1.1-expansion." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/108> <http://schema.org/endDate> "2020-04-13T03:56:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/108> <http://schema.org/identifier> "585613090"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/108> <http://schema.org/startDate> "2020-03-22T00:17:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/108> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/108"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/108> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/109> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/109> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/109> <http://schema.org/description> "* Compaction:\r\n  * Compact `@direction`.\r\n  * Compact `@type`: `@none`.\r\n  * Compact `@included`.\r\n  * Honor `@container`: `@set` on `@type`.\r\n  * Lists of Lists.\r\n  * Improve handling of scoped contexts and propagate.\r\n  * Improve map compaction, including indexed properties.\r\n  * Catch Absolute IRI confused with prefix.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/109> <http://schema.org/endDate> "2020-03-24T20:19:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/109> <http://schema.org/identifier> "587253856"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/109> <http://schema.org/startDate> "2020-03-24T20:18:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/109> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/109"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/109> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/10> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/10> <http://schema.org/creator> <https://api.github.com/users/jmandel> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/10> <http://schema.org/description> "I also submitted a pull request to the js repo with a test case to cover this.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/10> <http://schema.org/endDate> "2011-11-23T17:01:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/10> <http://schema.org/identifier> "2322752"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/10> <http://schema.org/startDate> "2011-11-22T20:39:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/10> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/10"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/10> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/110> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/110> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/110> <http://schema.org/description> "* Compaction:\r\n  * Compact `@direction`.\r\n  * Compact `@type`: `@none`.\r\n  * Compact `@included`.\r\n  * Honor `@container`: `@set` on `@type`.\r\n  * Lists of Lists.\r\n  * Improve handling of scoped contexts and propagate.\r\n  * Improve map compaction, including indexed properties.\r\n  * Catch Absolute IRI confused with prefix.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/110> <http://schema.org/endDate> "2020-03-24T20:31:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/110> <http://schema.org/identifier> "587254232"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/110> <http://schema.org/startDate> "2020-03-24T20:19:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/110> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/110"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/110> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/111> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/111> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604692534> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/111> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612316539> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/111> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/111> <http://schema.org/description> "* Framing:\r\n  * Change default for 'requireAll' from True to False.\r\n  * Change default for 'embed' from '@last' to '@once'.\r\n  * Add defaults for 'omitGraph' and 'pruneBlankNodeIdentifiers'\r\n    based on processing mode.\r\n  * Change _remove\\_preserve_ to _cleanup\\_preserve_ which happens before compaction.\r\n  * Add _cleanup\\_null_ which happens after compaction.\r\n  * Update frame matching to 1.1 spec.\r\n  * Support `@included`.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/111> <http://schema.org/endDate> "2020-04-11T03:48:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/111> <http://schema.org/identifier> "587314753"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/111> <http://schema.org/startDate> "2020-03-24T22:20:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/111> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/111"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/111> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273501> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273819> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606280634> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606701673> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606745797> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606775476> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606835638> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606896758> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606897734> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901171> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901869> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906034> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906366> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606918352> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606923952> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606949780> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607509965> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607512974> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607520508> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608153502> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608164478> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608169921> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608175944> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608199947> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610530901> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610532466> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610631201> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610635554> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612217386> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612258286> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612259939> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://schema.org/endDate> "2020-04-13T04:20:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://schema.org/identifier> "590624591"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://schema.org/startDate> "2020-03-30T21:58:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/112> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608710286> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608755160> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608858217> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608874305> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608875607> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609103636> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487508> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487865> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://schema.org/description> "Reduce deep copies by freezing the context and specifically enabling places that would have modified it after generation.\r\n\r\ncc/ @azaroth42 " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://schema.org/endDate> "2020-04-05T21:33:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://schema.org/identifier> "593665995"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://schema.org/startDate> "2020-04-03T22:07:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/113"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/113> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/114> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/114> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/114> <http://schema.org/description> "* Switched to argparse.\r\n* **BREAKING**: Removed `-d` and `-m` test runner options in favor of\r\n  just listing as arguments.\r\n* If no test manifests or directories are specified, default to sibling\r\n  directories for json-ld-api, json-ld-framing, and normalization.\r\n\r\nShould have done this a while ago.  Makes the default to just run all the tests as jsonld.js does.  Should make it easier to create EARL reports.  The test runner and doc loader code is a bit tricky, but it seems to be loading current test files." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/114> <http://schema.org/endDate> "2020-04-11T03:36:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/114> <http://schema.org/identifier> "598177904"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/114> <http://schema.org/startDate> "2020-04-11T03:15:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/114> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/114"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/114> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/115> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/115> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612919929> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/115> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612998633> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/115> <http://schema.org/ItemList> <https://api.github.com/repos/digitalbazaar/pyld/labels/docs> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/115> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/115> <http://schema.org/description> "The README needs ContextResolver docs.  Perhaps similar to:\r\nhttps://github.com/digitalbazaar/pyld/pull/112#issuecomment-606897734\r\n\r\ncc: @gkellogg @azaroth42" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/115> <http://schema.org/identifier> "598665340"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/115> <http://schema.org/startDate> "2020-04-13T04:26:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/115> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/115"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/115> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/116> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/116> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/116> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/116> <http://schema.org/endDate> "2020-04-15T04:20:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/116> <http://schema.org/identifier> "600007400"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/116> <http://schema.org/startDate> "2020-04-15T04:16:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/116> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/116"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/116> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/117> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/117> <http://schema.org/ItemList> <https://api.github.com/repos/digitalbazaar/pyld/labels/docs> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/117> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/117> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/117> <http://schema.org/endDate> "2020-04-15T18:40:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/117> <http://schema.org/identifier> "600509048"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/117> <http://schema.org/startDate> "2020-04-15T18:40:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/117> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/117"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/117> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/118> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/118> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/118> <http://schema.org/description> "Follow the report guidelines:\r\nhttps://w3c.github.io/json-ld-api/reports/\r\n\r\nIn particular, add language tag to description." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/118> <http://schema.org/identifier> "600628116"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/118> <http://schema.org/startDate> "2020-04-15T22:35:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/118> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/118"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/118> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615085998> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615092137> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615372795> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616343335> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://schema.org/ItemList> <https://api.github.com/repos/digitalbazaar/pyld/labels/bug> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://schema.org/assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://schema.org/creator> <https://api.github.com/users/Panaetius> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://schema.org/description> "Trying out PyLD 2.0.1 (Also happens with PyLD 2.0.0) on Python 3.6-3.8 and everything works great, performance improves significantly, but tests in our test suite started failing randomly.\r\n\r\nAfter a lot of trial and error, it seems like when expanding and compacting, at random, contexts aren't applied correctly.\r\n\r\nFor instance \r\n```\r\n{\r\n\"@context\": { \r\n    \"schema\": \"http://schema.org/\", \r\n    \"name\": \"schema:name\"\r\n},\r\n\"name\": \"test\"\r\n}\r\n```\r\n\r\nends up being \r\n\r\n```\r\n{\r\n\"@context\": { \r\n    \"schema\": \"http://schema.org/\", \r\n    \"name\": \"schema:name\"\r\n},\r\n\"schema:name\": \"test\"\r\n}\r\n```\r\n\r\nwhich breaks our processing down the line.\r\n\r\nI made a minimal example that showcases the issue. \r\n[pyld_reproduce_error.zip](https://github.com/digitalbazaar/pyld/files/4491421/pyld_reproduce_error.zip)\r\n\r\n\r\nThe example loads the attached jsonld file, expands it and compacts it again with the original context. This is repeated until the data after expansion&compaction does not match the output of the last iteration of the loop.\r\n\r\nThe problem crops up anywhere between iteration 1 and 32 (average 6.5) when I ran it 100 times, it seems completely random when it crops up (Which in our test suite caused tests to fail at random).\r\n\r\nAny idea what could be causing this?\r\n\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://schema.org/endDate> "2020-04-20T15:31:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://schema.org/identifier> "601748088"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://schema.org/startDate> "2020-04-17T06:58:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/119"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/119> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/11> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/11> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/11> <http://schema.org/description> "According to section 3.3 of JSON-LD (http://json-ld.org/spec/latest/json-ld-syntax/#specifying-the-type) , the value of the \"@type\" property should always be an IRI. So the following code\n\n``` python\n  pyld.jsonld.triples({\"@type\": \"http://example.com/Thing\"})\n```\n\nshould generate\n\n``` python\n  [{'o': {'@id': 'http://example.com/Thing'}, 'p': '@type', 's': '_:c14n0'}]\n```\n\nbut it generates\n\n``` python\n  [{'o': 'http://example.com/Thing', 'p': '@type', 's': '_:c14n0'}]\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/11> <http://schema.org/endDate> "2012-11-26T16:26:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/11> <http://schema.org/identifier> "3032847"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/11> <http://schema.org/startDate> "2012-01-31T08:59:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/11> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/11"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/11> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615407687> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616342830> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616676442> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://schema.org/ItemList> <https://api.github.com/repos/digitalbazaar/pyld/labels/bug> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://schema.org/description> "instead of the object id of the active context.\r\n\r\nFixes #119.\r\n\r\n@Panaetius, please see if using this branch solves the problem for you." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://schema.org/endDate> "2020-04-20T15:31:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://schema.org/identifier> "602167936"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://schema.org/startDate> "2020-04-17T18:50:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/120"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/120> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/121> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/121> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616812536> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/121> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616831574> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/121> <http://schema.org/creator> <https://api.github.com/users/rfm-bot> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/121> <http://schema.org/description> "👋 The user @sospedra marked this repo in **need for maintainers**.\n✅ If you're **looking for collaborators** no action is required\n👮🏻‍♂️ If this repo it's **well-supported please put a comment** here https://github.com/sospedra/rfm/issues/36" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/121> <http://schema.org/endDate> "2020-04-20T21:13:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/121> <http://schema.org/identifier> "603530197"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/121> <http://schema.org/startDate> "2020-04-20T20:56:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/121> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/121"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/121> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/122> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/122> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623596892> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/122> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623605443> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/122> <http://schema.org/creator> <https://api.github.com/users/James-Hudson3010> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/122> <http://schema.org/description> "I have the following python code:\r\n\r\n```\r\ngraph_data = \"\"\"\r\n{\r\n    \"@context\": {\r\n        \"ex\": \"http://example.com/\",\r\n        \"yyyy\": \"ex:yyyy\",\r\n        \"name\": \"ex:name\",\r\n        \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\r\n        \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n        \"sch\": \"http://schema.org/\",\r\n        \"xml\": \"http://www.w3.org/XML/1998/namespace\",\r\n        \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\r\n    },\r\n    \"@id\": \"ex:Bobe\",\r\n    \"@type\": \"ex:MyType\",\r\n    \"yyyy\": {\r\n        \"@type\": \"ex:XXXX\",\r\n        \"name\": \"my name\"\r\n    }\r\n}\r\n\"\"\"\r\nexpanded = jsonld.expand( graph_data )\r\n```\r\n\r\nThis generates the error:\r\n\r\n```\r\nJsonLdError: ('URL could not be dereferenced; only \"http\" and \"https\" URLs are supported.',)\r\nType: jsonld.InvalidUrl\r\nCode: loading document failed\r\nDetails: {'url': '\\n{\\n    \"@context\": {\\n        \"ex\": \"http://example.com/\",\\n        \"yyyy\": \"ex:yyyy\",\\n        \"name\": \"ex:name\",\\n        \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\\n        \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\\n        \"sch\": \"http://schema.org/\",\\n        \"xml\": \"http://www.w3.org/XML/1998/namespace\",\\n        \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\\n    },\\n    \"@id\": \"ex:Bobe\",\\n    \"@type\": \"ex:MyType\",\\n    \"yyyy\": {\\n        \"@type\": \"ex:XXXX\",\\n        \"name\": \"my name\"\\n    }\\n}\\n'}\r\n```\r\n\r\nAll of the URLs are valid as near as I can tell.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/122> <http://schema.org/endDate> "2020-05-04T17:42:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/122> <http://schema.org/identifier> "611984840"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/122> <http://schema.org/startDate> "2020-05-04T15:56:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/122> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/122"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/122> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/123> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/123> <http://schema.org/ItemList> <https://api.github.com/repos/digitalbazaar/pyld/labels/bug> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/123> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/123> <http://schema.org/description> "Scoped context regression. See:\r\n- https://github.com/w3c/json-ld-api/pull/490\r\n- https://github.com/digitalbazaar/jsonld.js/issues/394\r\n\r\nBisect shows failure started here:\r\n- https://github.com/digitalbazaar/pyld/commit/491d4b37e8c0e5ef48ff09578763d7e366270c7a" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/123> <http://schema.org/identifier> "618641781"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/123> <http://schema.org/startDate> "2020-05-15T01:54:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/123> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/123"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/123> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/124> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/124> <http://schema.org/creator> <https://api.github.com/users/MonkeyChap> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/124> <http://schema.org/description> "Hi\r\n\r\nNot sure if this is a bug, or just lack of documentation. I've been trying to get PyLD to embed linked nodes into a hierarchy. Searching through the issues, this seems to be a case of adding \"@embed\":\"@links\" to the @context, but that just raises an error when I call compact - \r\n\r\npyld.jsonld.JsonLdError: ('Could not process context before compaction.',)\r\nType: jsonld.CompactError\r\nCause: ('Invalid JSON-LD syntax; keywords cannot be overridden.',)\r\nType: jsonld.SyntaxError\r\nCode: keyword redefinition\r\n\r\nAny ideas ?\r\n\r\nAlso, nothing happens if I add an @reverse directive, but I guess that might be related to the lack of embedding due to the above problem ?\r\n\r\nThanks \r\n\r\nIan " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/124> <http://schema.org/endDate> "2020-05-20T14:01:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/124> <http://schema.org/identifier> "620948665"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/124> <http://schema.org/startDate> "2020-05-19T12:47:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/124> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/124"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/124> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/125> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/125> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/125> <http://schema.org/description> "There is a problem with `requests_document_loader`. When using custom headers like this `jsonld.set_document_loader(jsonld.requests_document_loader(headers=...))` the `headers=` argument is [repeated twice (here)](https://github.com/digitalbazaar/pyld/blob/master/lib/pyld/documentloader/requests.py#L63) and Python raises an error." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/125> <http://schema.org/identifier> "623729628"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/125> <http://schema.org/startDate> "2020-05-23T19:48:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/125> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/125"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/125> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/640972665> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642551159> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642876115> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/643225190> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/644506164> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://schema.org/description> "Let's say that I have a jsonld document that contains a property like\r\n\r\n    \"knows\": \"https://example.org/alice\"\r\n\r\nI would like to apply a frame to this context, such that `https://example.org/alice` is automatically fetched and inserted into the final document, that is:\r\n\r\n    \"knows\": {\r\n        \"@id\": \"https://example.org/alice\",\r\n        \"name\": \"Alice\"\r\n    }\r\n\r\nI've seen in the jsonld spec that it's possible to use `@embed`, but my question is: do I have to manually download the `https://example.org/alice` document, add it to the jsonld document, and only then apply the frame? Or can pyld automatically fetch the document if I use `@embed`?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://schema.org/endDate> "2020-06-17T11:57:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://schema.org/identifier> "633524781"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://schema.org/startDate> "2020-06-07T15:50:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/126"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/126> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/127> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/127> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646067285> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/127> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646076099> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/127> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/127> <http://schema.org/description> "Is it possible to normalize a document such that for example it always contains `@graph`, or such that a link is always contained in a list for example `\"knows\": \"_:alice\"` becomes `\"knows\": [ \"_:alice\" ]`? Flattening doesn't seem to help in this regard, because nodes are no longer nested which makes it more difficult to parse. `.normalize()` also doesn't seem to be what I'm looking for, since it outputs a list of tuples. My problem is that when I retrieve a jsonld document, it can contain `@graph` or not, and the object of a property can be a string, a list, or an object, depending how it was serialized. Parsing a jsonld object is not fun because of this variability, so it would be very useful to have a way to normalize a json object." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/127> <http://schema.org/identifier> "641137122"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/127> <http://schema.org/startDate> "2020-06-18T11:38:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/127> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/127"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/127> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/128> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/128> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415812> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/128> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415845> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/128> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/647192558> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/128> <http://schema.org/creator> <https://api.github.com/users/alpha-beta-soup> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/128> <http://schema.org/description> "Let's say I have this extremely minimal bit of JSON-LD to be expanded with pyld:\r\n\r\n```\r\n>>> import pyld\r\n>>> d = {\r\n...    \"@context\": \"https://schema.org\",\r\n...    \"@type\":\"Dataset\",\r\n...    \"@id\":\"http://localhost:5000/collections/obs\",\r\n...    \"url\":\"http://localhost:5000/collections/obs\"\r\n... }\r\n>>> pyld.expand(d)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: module 'pyld' has no attribute 'expand'\r\n>>> pyld.jsonld.expand(d)\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/documentloader/requests.py\", line 72, in loader\r\n    'document': response.json()\r\n  File \"/usr/local/lib/python3.8/dist-packages/requests/models.py\", line 898, in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n  File \"/usr/lib/python3.8/json/__init__.py\", line 357, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/usr/lib/python3.8/json/decoder.py\", line 337, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/usr/lib/python3.8/json/decoder.py\", line 355, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/context_resolver.py\", line 143, in _fetch_context\r\n    remote_doc = jsonld.load_document(url,\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/jsonld.py\", line 6583, in load_document\r\n    remote_doc = options['documentLoader'](url, options)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/documentloader/requests.py\", line 100, in loader\r\n    raise JsonLdError(\r\npyld.jsonld.JsonLdError: ('Could not retrieve a JSON-LD document from the URL.',)\r\nType: jsonld.LoadDocumentError\r\nCode: loading document failed\r\nCause: Expecting value: line 1 column 1 (char 0)  File \"/usr/local/lib/python3.8/dist-packages/pyld/documentloader/requests.py\", line 72, in loader\r\n    'document': response.json()\r\n  File \"/usr/local/lib/python3.8/dist-packages/requests/models.py\", line 898, in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n  File \"/usr/lib/python3.8/json/__init__.py\", line 357, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/usr/lib/python3.8/json/decoder.py\", line 337, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/usr/lib/python3.8/json/decoder.py\", line 355, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/jsonld.py\", line 163, in expand\r\n    return JsonLdProcessor().expand(input_, options)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/jsonld.py\", line 870, in expand\r\n    expanded = self._expand(active_ctx, None, document, options,\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/jsonld.py\", line 2302, in _expand\r\n    active_ctx = self._process_context(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/jsonld.py\", line 3049, in _process_context\r\n    resolved = options['contextResolver'].resolve(active_ctx, local_ctx, options.get('base', ''))\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/context_resolver.py\", line 58, in resolve\r\n    resolved = self._resolve_remote_context(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/context_resolver.py\", line 108, in _resolve_remote_context\r\n    context, remote_doc = self._fetch_context(active_ctx, url, cycles)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/context_resolver.py\", line 148, in _fetch_context\r\n    raise jsonld.JsonLdError(\r\npyld.jsonld.JsonLdError: ('Dereferencing a URL did not result in a valid JSON-LD object. Possible causes are an inaccessible URL perhaps due to a same-origin policy (ensure the server uses CORS if you are using client-side JavaScript), too many redirects, a non-JSON response, or more than one HTTP Link Header was provided for a remote context.',)\r\nType: jsonld.InvalidUrl\r\nCode: loading remote context failed\r\nDetails: {'url': 'https://schema.org', 'cause': JsonLdError('Could not retrieve a JSON-LD document from the URL.')}\r\n```\r\n\r\nIf I susbtitute \"https://schema.org\" with \"https://schema.org/docs/jsonldcontext.jsonld\", with the code otherwise unchanged, it will correctly print (as I expected):\r\n\r\n```\r\n>>> [{'@id': 'http://localhost:5000/collections/obs', '@type': ['http://schema.org/Dataset'], 'http://schema.org/url': [{'@id': 'http://localhost:5000/collections/obs'}]}]\r\n```\r\n\r\nHowever, that then seems to mess up other parsers, including the Google Structured Data Testing Tool.\r\n\r\nThe root issue seems to be with pyld's remote fetching of contexts, in that \"https://schema.org/\" does not now have an `application/ld+json` content-type, instead opting to use `Link` header with `rel=alternate` and `type=application/ld+json`. It seems that pyld needs to be updated to handle that case:\r\n\r\n```\r\n$ curl -I https://schema.org/ \r\nHTTP/2 200 \r\naccess-control-allow-credentials: true\r\naccess-control-allow-headers: Accept\r\naccess-control-allow-methods: GET\r\naccess-control-allow-origin: *\r\naccess-control-expose-headers: Link\r\nlink: </docs/jsonldcontext.jsonld>; rel=\"alternate\"; type=\"application/ld+json\"\r\ndate: Fri, 19 Jun 2020 03:17:19 GMT\r\nexpires: Fri, 19 Jun 2020 03:27:19 GMT\r\netag: \"G8zMyg\"\r\nx-cloud-trace-context: d2d5c536d73ce1590813f8e1018a2ad6\r\ncontent-type: text/html\r\nserver: Google Frontend\r\ncontent-length: 5100\r\nage: 73\r\ncache-control: public, max-age=600\r\nalt-svc: h3-28=\":443\"; ma=2592000,h3-27=\":443\"; ma=2592000,h3-25=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q049=\":443\"; ma=2592000,h3-Q048=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"\r\n```\r\n\r\nIf you do `curl https://schema.org/ -H \"Accept: application/ld+json\"` you will still get back an HTML response.\r\n\r\nPerhaps the cleanest way to implement this would be to check if a non-JSON-LD response is recieved, and if so, to look for an appropriate `Link` header and then make a request there.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/128> <http://schema.org/identifier> "641676022"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/128> <http://schema.org/startDate> "2020-06-19T03:21:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/128> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/128"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/128> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706078894> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706638876> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706666573> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706669764> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681362> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://schema.org/creator> <https://api.github.com/users/alpha-beta-soup> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://schema.org/description> "Ref #128 \r\n\r\nWith the following test cases defined:\r\n\r\n`context.jsonld`\r\n```\r\n{\r\n  \"@context\": {\r\n    \"@vocab\":   \"https://w3c.github.io/json-ld-api/tests/vocab#\",\r\n    \"dcterms\":       \"http://purl.org/dc/terms/\",\r\n    \"jld\":      \"https://w3c.github.io/json-ld-api/tests/vocab#\",\r\n    \"mf\":       \"http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#\",\r\n    \"rdfs\":     \"http://www.w3.org/2000/01/rdf-schema#\",\r\n    \"xsd\":      \"http://www.w3.org/2001/XMLSchema#\",\r\n\r\n    \"context\":         { \"@type\": \"@id\" },\r\n    \"expect\":          { \"@id\": \"mf:result\", \"@type\": \"@id\" },\r\n    \"expectErrorCode\": { \"@id\": \"mf:result\" },\r\n    \"frame\":           { \"@type\": \"@id\" },\r\n    \"input\":           { \"@id\": \"mf:action\", \"@type\": \"@id\" },\r\n    \"option\":          { \"@type\": \"@id\"},\r\n    \"sequence\":        { \"@id\": \"mf:entries\", \"@type\": \"@id\", \"@container\": \"@list\" },\r\n    \"redirectTo\":      { \"@type\": \"@id\"},\r\n\r\n    \"name\":                 \"mf:name\",\r\n    \"purpose\":              \"rdfs:comment\",\r\n    \"description\":          \"rdfs:comment\",\r\n    \"base\":                 { \"@type\": \"@id\" },\r\n    \"compactArrays\":        { \"@type\": \"xsd:boolean\" },\r\n    \"compactToRelative\":    { \"@type\": \"xsd:boolean\" },\r\n    \"contentType\":          { \"@type\": \"xsd:string\" },\r\n    \"expandContext\":        { \"@type\": \"@id\" },\r\n    \"extractAllScripts\":    { \"@type\": \"xsd:boolean\" },\r\n    \"httpLink\":             { \"@type\": \"xsd:string\", \"@container\": \"@set\" },\r\n    \"httpStatus\":           { \"@type\": \"xsd:integer\" },\r\n    \"normative\":            { \"@type\": \"xsd:boolean\" },\r\n    \"processingMode\":       { \"@type\": \"xsd:string\" },\r\n    \"processorFeature\":     { \"@type\": \"xsd:string\" },\r\n    \"produceGeneralizedRdf\":{ \"@type\": \"xsd:boolean\" },\r\n    \"specVersion\":          { \"@type\": \"xsd:string\" },\r\n    \"useNativeTypes\":       { \"@type\": \"xsd:boolean\" }\r\n  }\r\n}\r\n```\r\n\r\n`manifest.jsonld`\r\n```\r\n{\r\n  \"@context\": [\"context.jsonld\", {\"@base\": \"manifest\"}],\r\n  \"@id\": \"\",\r\n  \"@type\": \"mf:Manifest\",\r\n  \"name\": \"JSON-LD Test Suite\",\r\n  \"description\": \"This manifest loads some tests for resolving https://github.com/digitalbazaar/pyld/issues/128\",\r\n  \"sequence\": [{\r\n  \t\"@id\": \"#t1\",\r\n  \t\"@type\": [\"jld:PositiveEvaluationTest\", \"jld:ExpandTest\"],\r\n  \t\"name\": \"Test for JSON-LD via Link header\",\r\n  \t\"purpose\": \"Tests for correct retrieval of remote JSON-LD when it is present as a Link HTTP header\",\r\n  \t\"input\": \"/full/path/to/pyld/tests/sample.jsonld\",\r\n  \t\"expect\": \"/full/path/to/pyld/tests/output.jsonld\"\r\n  }, {\r\n    \"@id\": \"#t2\",\r\n    \"@type\": [\"jld:PositiveEvaluationTest\", \"jld:ExpandTest\"],\r\n    \"name\": \"Test for JSON-LD via direct JSON-LD URL\",\r\n    \"purpose\": \"Tests for correct retrieval of remote JSON-LD when it is given as a direct link within a context\",\r\n    \"input\": \"/full/path/to/pyld/tests/sample2.jsonld\",\r\n    \"expect\": \"/full/path/to/pyld/tests/output.jsonld\"\r\n  }]\r\n}\r\n```\r\n\r\n`sample.jsonld`\r\n```\r\n{\r\n\t\"@context\": \"https://schema.org\",\r\n\t\"@type\":\"Dataset\",\r\n\t\"@id\":\"http://localhost:5000/collections/obs\",\r\n\t\"url\":\"http://localhost:5000/collections/obs\"\r\n}\r\n```\r\n\r\n`sample2.jsonld`\r\n```\r\n{\r\n\t\"@context\": \"https://schema.org/docs/jsonldcontext.jsonld\",\r\n\t\"@type\":\"Dataset\",\r\n\t\"@id\":\"http://localhost:5000/collections/obs\",\r\n\t\"url\":\"http://localhost:5000/collections/obs\"\r\n}\r\n```\r\n\r\n`output.jsonld`\r\n```\r\n[\r\n  {\r\n    \"@id\": \"http://localhost:5000/collections/obs\",\r\n    \"@type\": [\r\n      \"http://schema.org/Dataset\"\r\n    ],\r\n    \"http://schema.org/url\": [\r\n      {\r\n        \"@id\": \"http://localhost:5000/collections/obs\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\n\r\nThe tests both fail before the changes. The tests both passs after the changes. Since all the test cases of this repository are remote, I am not sure whether or where to contribute these test cases.\r\n\r\nHowever, there is one regression, which I do not currently know how to resolve. This test does not have an error before the changes, and does have an error after the changes. The report is:\r\n\r\n```\r\n======================================================================\r\nERROR: Remote document: https://w3c.github.io/json-ld-api/tests/remote-doc-manifest#t0002: Document loader loads a JSON document.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests/runtests.py\", line 372, in runTest\r\n    raise e\r\n  File \"tests/runtests.py\", line 319, in runTest\r\n    result = getattr(jsonld, fn)(*params)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 163, in expand\r\n    return JsonLdProcessor().expand(input_, options)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 820, in expand\r\n    remote_doc = load_document(input_, options)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 6591, in load_document\r\n    code='loading document failed')\r\npyld.jsonld.JsonLdError: ('No remote document found at the given URL.',)\r\nType: jsonld.NullRemoteDocument\r\nCode: loading document failed\r\n```\r\n\r\nAll other tests are unaffected. However, as mentioned in #128, running the tests as described with no changes elicits 5 failures, 2 errors, and 34 skipped tests." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://schema.org/identifier> "644278699"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://schema.org/startDate> "2020-06-24T02:57:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/129"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/129> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/12> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/12> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269194> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/12> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269621> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/12> <http://schema.org/creator> <https://api.github.com/users/tristan> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/12> <http://schema.org/description> "[Line 128](https://github.com/digitalbazaar/pyld/blob/master/lib/pyld/jsonld.py#L128) on jsonld.py reads:\n`usedCtx[key] = iri`\nit should be\n`usedCtx[rval] = iri`\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/12> <http://schema.org/endDate> "2012-11-26T16:25:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/12> <http://schema.org/identifier> "3454736"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/12> <http://schema.org/startDate> "2012-03-01T14:17:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/12> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/12"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/12> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/649752775> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650097471> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650222922> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650247621> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://schema.org/creator> <https://api.github.com/users/mfrigerio17> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://schema.org/description> "Hi, I am new to JSON-LD so please excuse me if the question does not make much sense.\r\nConsider the following:\r\n\r\n```python\r\nimport json\r\nfrom pyld import jsonld\r\n\r\nc = jsonld.compact( {'key':'value'}, {'key':'http://whatever.org/key'} )\r\nprint(c)  # {'@context': {'key': 'http://whatever.org/key'}} ## 'key':'value' is gone\r\n```\r\n```python\r\nc = jsonld.compact( {'http://whatever.org/key':'value'}, {'key':'http://whatever.org/key'} )\r\nprint(c)  #{'@context': {'key': 'http://whatever.org/key'}, 'key': 'value'}\r\n```\r\nIn the first snippet, `key` is not matched with the term in the given context.\r\n\r\nWhy do I have to write the full IRI (`'http://whatever.org/key'`) explicitly _in the document_ ??\r\nThat kind of voids one of the advantages of having a context, doesn't it?\r\n\r\nI think this behaviour is not consistent with the JSON-LD playground, where the first example would result in a compacted document which includes the term `key:value`. See [here](https://json-ld.org/playground/#startTab=tab-compacted&json-ld=%7B%22%40context%22%3A%7B%22key%22%3A%22http%3A%2F%2Fwhatever.org%2Fkey%22%7D%2C%22key%22%3A%22value%22%7D&context=%7B%7D)\r\nThe specs say \"Term-to-IRI expansion occurs if the key matches a term defined within the active context\", but that does not seem to be happening in PyLD (see [example 11 of the specs](https://w3c.github.io/json-ld-syntax/#example-11-term-expansion-from-context-definition))\r\n\r\nThank you\r\n \r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://schema.org/endDate> "2020-06-29T11:10:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://schema.org/identifier> "645747458"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://schema.org/startDate> "2020-06-25T17:54:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/130"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/130> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/131> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/131> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/676707502> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/131> <http://schema.org/creator> <https://api.github.com/users/cgils> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/131> <http://schema.org/description> "This suggested fix adds headers to ```kwargs``` in ```documentloader.requests.loader()```. Feel free to not accept and close if there's a better way of doing this. AFAICT, mutating ```kwargs``` locally should be safe.\r\n\r\nFixes the problem described in issue #125 when supplying user-defined headers to ```jsonld.requests_document_loader```:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/dist-packages/pyld/documentloader/requests.py\", line 64, in loader\r\n    response = requests.get(url, headers=headers, **kwargs)\r\nTypeError: get() got multiple values for keyword argument 'headers'\r\n```\r\n\r\nCloses #125 \r\n\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/131> <http://schema.org/endDate> "2020-08-19T21:13:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/131> <http://schema.org/identifier> "658646665"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/131> <http://schema.org/startDate> "2020-07-16T23:02:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/131> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/131"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/131> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/132> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/132> <http://schema.org/creator> <https://api.github.com/users/tirkarthi> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/132> <http://schema.org/description> "Deprecation warnings are raised due to invalid escape sequences. This can be fixed by using raw strings or escaping the literals. pyupgrade also helps in automatic conversion : https://github.com/asottile/pyupgrade/\r\n\r\n```\r\nfind . -iname '*.py' | grep -Ev 'vendor|example|doc|tools|sphinx' | xargs -P4 -I{} python3.8 -Wall -m py_compile {}\r\n./lib/pyld/jsonld.py:5200: DeprecationWarning: invalid escape sequence \\?\r\n  bool(re.match('.*[:/\\?#\\[\\]@]$', id_)))\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/132> <http://schema.org/endDate> "2020-08-05T21:38:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/132> <http://schema.org/identifier> "667871428"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/132> <http://schema.org/startDate> "2020-07-29T14:03:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/132> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/132"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/132> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667496680> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667549956> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667553197> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667559225> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667564095> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667568036> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667799781> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667813722> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668376423> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668475068> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://schema.org/description> "For some reasons pyld is not able to fetch the context URL `https://www.w3.org/ns/activitystreams`. I was able to reduce the issue to the following basic example, which is not working:\r\n\r\n    import pyld\r\n    doc = {\r\n        \"@context\": [ 'https://www.w3.org/ns/activitystreams' ],\r\n        \"type\": \"Follow\" }\r\n    doc = pyld.jsonld.expand(doc)\r\n\r\n    [...]\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\n    [...]\r\n    Dereferencing a URL did not result in a valid JSON-LD object.\r\n    [...]\r\n    Type: jsonld.InvalidUrl\r\n    Code: loading remote context failed\r\n    Details: {'url': 'https://www.w3.org/ns/activitystreams', 'cause': JsonLdError('Could not retrieve a JSON-LD document from the URL.')}\r\n\r\nI could not debug the issue. It looks like pyld might be retrieving the context without the correct headers, but looking at the code I do see `headers = { 'Accept': ...}` defined in several places.\r\nCan you guys please help me understand if this is a bug or if I'm not using the library correctly? Thanks!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://schema.org/identifier> "670604596"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://schema.org/startDate> "2020-08-01T07:10:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/133"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/133> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/134> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/134> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/669656199> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/134> <http://schema.org/creator> <https://api.github.com/users/tirkarthi> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/134> <http://schema.org/description> "Fixes #132 " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/134> <http://schema.org/endDate> "2020-08-05T21:38:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/134> <http://schema.org/identifier> "672021990"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/134> <http://schema.org/startDate> "2020-08-03T11:54:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/134> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/134"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/134> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/135> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/135> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668012013> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/135> <http://schema.org/creator> <https://api.github.com/users/datadavev> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/135> <http://schema.org/description> "Addresses issue #128 for the requests document downloader. This adds an optional keyword parameter `max_link_follows` (defaults to 2) to `requests_document_loader` to avoid possible infinite recursion following link headers." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/135> <http://schema.org/endDate> "2020-08-03T13:06:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/135> <http://schema.org/identifier> "672047568"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/135> <http://schema.org/startDate> "2020-08-03T12:39:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/135> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/135"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/135> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/136> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/136> <http://schema.org/creator> <https://api.github.com/users/aucampia> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/136> <http://schema.org/description> "I'm processing many JSON files as JSON-LD, currently I'm going via nquads to RDFLib, a problem I'm facing however is that blank node identifiers gets re-used for every document, and when I ingest them into an RDFLib graph different blank nodes look to be the same.\r\n\r\nAs a workaround I am doing this:\r\n\r\n```python\r\nclass IdentifierIssuer:\r\n    existing: typ.ClassVar[typ.Dict[str, str]] = {}\r\n    order: typ.ClassVar[typ.List[str]] = []\r\n    prefix = '_:bu'\r\n\r\n    def __init__(self, prefix: str):\r\n        cls = self.__class__\r\n\r\n    def get_id(self, old: typ.Optional[str] = None) -> str:\r\n        cls = self.__class__\r\n        # return existing old identifier\r\n        if old and old in cls.existing:\r\n            return cls.existing[old]\r\n\r\n        # get next identifier\r\n        id_ = cls.prefix + str(uuid.uuid4().hex)\r\n\r\n        # save mapping\r\n        if old is not None:\r\n            cls.existing[old] = id_\r\n            cls.order.append(old)\r\n\r\n        return id_\r\n\r\n    def has_id(self, old: str) -> bool:\r\n        cls = self.__class__\r\n\r\n        return old in cls.existing\r\n\r\njsonld.IdentifierIssuer = IdentifierIssuer\r\n```\r\n\r\nWould be nice if I could just pass it in as an argument to `to_rdf`" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/136> <http://schema.org/identifier> "700627005"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/136> <http://schema.org/startDate> "2020-09-13T19:00:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/136> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/136"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/136> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/137> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/137> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692236085> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/137> <http://schema.org/creator> <https://api.github.com/users/aucampia> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/137> <http://schema.org/description> "When I run `to_rdf` on an object with an invalid `@id`:\r\n\r\n```python\r\nimport pyld.jsonld as jsonld\r\nresult = jsonld.to_rdf({\"@id\": \"http://example.com/some id\", \"@type\": \"http://example.com/some_type\"})\r\n```\r\nThe the value of `result` will be\r\n```\r\n{'@default': []}\r\n```\r\n\r\nIn contrast, if I fix the `@id` to be a valid URI\r\n\r\n```python\r\nimport pyld.jsonld as jsonld\r\nresult = jsonld.to_rdf({\"@id\": \"http://example.com/some_id\", \"@type\": \"http://example.com/some_type\"})\r\n```\r\nThe the value of `result` will be\r\n```\r\n{'@default': [{'subject': {'type': 'IRI', 'value': 'http://example.com/some_id'}, 'predicate': {'type': 'IRI', 'value': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type'}, 'object': {'type': 'IRI', 'value': 'http://example.com/some_type'}}]}\r\n```\r\n\r\nI expect that running `to_rdf` on JSON-LD with invalid IRIs error out instead of silently ignoring the invalid triples.\r\n\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/137> <http://schema.org/identifier> "701326562"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/137> <http://schema.org/startDate> "2020-09-14T18:26:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/137> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/137"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/137> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/138> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/138> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692251737> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/138> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692263880> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/138> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692264504> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/138> <http://schema.org/creator> <https://api.github.com/users/aucampia> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/138> <http://schema.org/description> "Currently invalid (i.e. non absolute) IRIs are ignored and tripples\r\ncontaining non absolute IRIs are omitted from the RDF resulting from\r\n`to_rdf`.\r\n\r\nThis patch changes this behaviour so that non absolute IRIs result in\r\nexceptions instead.\r\n\r\nSee https://github.com/digitalbazaar/pyld/issues/137\r\n\r\nI am not sure what to do about testing, it seems there are no general unit tests, but rather just some scaffolding to run the w3c tests (which fail).\r\n\r\nIf you want I can add some general unit tests for you, just need to agree on the framework I guess." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/138> <http://schema.org/identifier> "701349933"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/138> <http://schema.org/startDate> "2020-09-14T19:01:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/138> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/138"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/138> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/139> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/139> <http://schema.org/creator> <https://api.github.com/users/JulienPalard> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/139> <http://schema.org/description> "The README already documented the project needs Python >= 3.6, so I removed code related to Python 2.7, 3.4, and 3.5.\r\n\r\nNote that the removed `if sys.version_info[0] > 3 or sys.version_info[1] >= 6:` was strange, as it accepted Python 2.6.\r\n\r\nOh I added 3.9 to travis, hope travis already supports it and it's OK to add to the project: 3.9 has been released a few days ago." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/139> <http://schema.org/identifier> "717953611"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/139> <http://schema.org/startDate> "2020-10-09T08:20:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/139> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/139"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/139> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/13> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/13> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4629855> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/13> <http://schema.org/creator> <https://api.github.com/users/fconil> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/13> <http://schema.org/description> "We recently made a fork because we have troubles when we need to import multiple context.\n\nWe have slightly modified the mergeContexts() function called by Processor.expand().\n\nWe also have the same need for the framing process.\n\nRegards\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/13> <http://schema.org/endDate> "2012-03-21T23:51:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/13> <http://schema.org/identifier> "3710067"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/13> <http://schema.org/startDate> "2012-03-19T13:50:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/13> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/13"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/13> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/140> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/140> <http://schema.org/creator> <https://api.github.com/users/JulienPalard> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/140> <http://schema.org/description> "This fixes the following warning:\r\n\r\n    DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\r\n\r\nfrom the [unmaintained](https://github.com/slezica/python-frozendict/issues/25) frozendict dependency." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/140> <http://schema.org/identifier> "717960942"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/140> <http://schema.org/startDate> "2020-10-09T08:32:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/140> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/140"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/140> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/141> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/141> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681454> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/141> <http://schema.org/creator> <https://api.github.com/users/JulienPalard> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/141> <http://schema.org/description> "Trying myself at https://github.com/digitalbazaar/pyld/pull/129#issuecomment-706078894\r\n\r\nFixes #128 \r\nRef https://github.com/digitalbazaar/pyld/pull/129\r\n\r\nHighly inspired from #129, but trying myself at it.\r\n\r\nMaster before and after this PR has the same set of failing tests:\r\n```\r\nFAILED (failures=5, errors=2, skipped=30)\r\nOK (skipped=1)\r\nOK (skipped=3)\r\n```\r\n\r\nThe tests provided in #129 are passing, and:\r\n\r\n```python\r\nprint(\r\n    json.dumps(\r\n        jsonld.expand(\r\n            {\r\n                \"@context\": \"http://schema.org/\",\r\n                \"@type\": \"Person\",\r\n                \"name\": \"Jane Doe\",\r\n                \"jobTitle\": \"Professor\",\r\n                \"telephone\": \"(425) 123-4567\",\r\n                \"url\": \"http://www.janedoe.com\",\r\n            }\r\n        ),\r\n        indent=4,\r\n    )\r\n)\r\n```\r\n\r\nnow passes too." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/141> <http://schema.org/identifier> "718065222"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/141> <http://schema.org/startDate> "2020-10-09T11:18:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/141> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/141"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/141> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/142> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/142> <http://schema.org/creator> <https://api.github.com/users/calummackervoy> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/142> <http://schema.org/description> "I'm working on a project which uses PyLD as a dependency. Reviewing the [JSON-LD spec on value objects](https://www.w3.org/TR/json-ld/#value-objects), it reads\r\n\r\n> The value associated with the @value key MUST be either a string, a number, true, false or null. If the value associated with the @type key is @json, the value MAY be either an array or an object.\r\n\r\nBased on this I wrote a unit test\r\n```\r\ndef test_save_field_with_object_value_object(self):\r\n    invoice = Invoice.objects.create(title=\"title 3\")\r\n    post = {\r\n            'http://test-server/owl/#invoice': {\r\n                '@value': {'title': 'title', '@id': \"https://test-server/{}{}/\".format(Model.container_id(invoice), invoice.id)},\r\n                '@type': '@json'\r\n            }\r\n        }\r\n    response = self.client.post('/batchs/', data=json.dumps(post), content_type='application/ld+json')\r\n    self.assertEqual(response.status_code, 201)\r\n```\r\n\r\nThe endpoint uses `jsonld.compact` from PyLD, which in this test throws an error:\r\n\r\n```\r\npyld.jsonld.JsonLdError: ('Could not expand input before compaction.',)\r\nType: jsonld.CompactError\r\nCause: ('Invalid JSON-LD syntax; \"@value\" value must not be an object or an array.',)\r\n```\r\n\r\nThis is correct behaviour for the first part of the specification, but providing the `'@type': '@json'` should allow the value to be an array/object\r\n\r\nSorry that the example is so specific to my project.. let me know if I can improve the info given!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/142> <http://schema.org/identifier> "745739136"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/142> <http://schema.org/startDate> "2020-11-18T15:04:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/142> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/142"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/142> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/143> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/143> <http://schema.org/creator> <https://api.github.com/users/anatoly-scherbakov> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/143> <http://schema.org/description> "# Problem\r\n\r\nMy PyLD version is 2.0.3 from pypi.\r\n\r\nThe complete code for this issue is published at https://gist.github.com/anatoly-scherbakov/84a539d2f862d1792244168a3b970b57\r\n\r\nI am trying to `expand()` a JSON-LD document like this:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n    \"label\": \"rdfs:label\",\r\n    \"@vocab\": \"https://example.com/robotics/\",\r\n    \"@base\": \"https://example.com/robotics/\"\r\n  },\r\n  \"@graph\": [\r\n    {\r\n      \"@id\": \"Robot\",\r\n      \"@type\": \"rdfs:Class\"\r\n    },\r\n    ...\r\n  }\r\n}\r\n```\r\n\r\n# Expected output\r\n\r\n**I expect to see** `Robot` converted to https://example.com/robotics/Robot.\r\n\r\nThat is how JSON-LD playground works — which can be verified by pasting the content of `SERIALIZED_JSONLD_DOCUMENT` constant into https://json-ld.org/playground/\r\n\r\n# Actual output\r\n\r\n`pyld.jsonld.expand()` gives me\r\n\r\n```python\r\n        {\r\n            '@id': 'Robot',   # NOT EXPANDED\r\n            '@type': ['http://www.w3.org/2000/01/rdf-schema#Class'],\r\n        },\r\n        ...\r\n```\r\n\r\nIt only works if I'd provide `base` explicitly in the options:\r\n\r\n```python\r\n    jsonld.expand(\r\n        JSONLD_DOCUMENT,\r\n        options={\r\n            'base': 'https://example.com/robotics/',\r\n        },\r\n    )\r\n```\r\n\r\nShould it work this way? Thank you!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/143> <http://schema.org/identifier> "752875817"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/143> <http://schema.org/startDate> "2020-11-29T09:31:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/143> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/143"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/143> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/14> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/14> <http://schema.org/creator> <https://api.github.com/users/fconil> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/14> <http://schema.org/description> "Thanks for the information on pyld ongoing changes, I will check for modifications.\n\nI have made another little change to the compact() function.\n\nWe have also added 2 tests to a fork of json-ld.org to have unit testing for multiple contexts. I will soon make a pull request for this fork (https://github.com/ktbs/json-ld.org)\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/14> <http://schema.org/endDate> "2012-03-22T17:05:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/14> <http://schema.org/identifier> "3765921"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/14> <http://schema.org/startDate> "2012-03-22T16:21:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/14> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/14"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/14> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/15> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/15> <http://schema.org/creator> <https://api.github.com/users/justjulian> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/15> <http://schema.org/description> "I suggest changing\n\n``` python\nmd.update(''.join(nquads))\n```\n\nto\n\n``` python\nmd.update(''.join(nquads).encode('utf-8'))\n```\n\nin line 1919 (jsonld.py).\n\nhashlib doesn't accept unicode as argument and will convert it to str using ascii encoding by default. This will fail if there are non ascii characters in the argument. Adding .encode('utf-8') will prevent using the default encoding.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/15> <http://schema.org/endDate> "2012-11-26T16:24:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/15> <http://schema.org/identifier> "8651652"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/15> <http://schema.org/startDate> "2012-11-25T15:54:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/15> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/15"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/15> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/16> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/16> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/13861196> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/16> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570511> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/16> <http://schema.org/creator> <https://api.github.com/users/fconil> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/16> <http://schema.org/description> "Hi,\n\nIt would be great if pyld was on [PyPI](http://pypi.python.org/pypi/), _Python Package Index, the CPAN of Python_.\n\nIt could ease it's installation and the dependancy requirements of other projects.\n\nhttp://guide.python-distribute.org/quickstart.html\n\nBest regards\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/16> <http://schema.org/endDate> "2013-06-17T19:59:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/16> <http://schema.org/identifier> "10958068"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/16> <http://schema.org/startDate> "2013-02-13T15:33:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/16> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/16"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/16> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/17> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/17> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570477> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/17> <http://schema.org/creator> <https://api.github.com/users/fconil> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/17> <http://schema.org/description> "The following procedure should allow you to upload **pyld** to the Python Package index repository.\n\nCreate an account on [PyPI](https://pypi.python.org/pypi), then upload **pyld** to PyPI using the following commands\n\n``` bash\n$ python setup.py register\n$ python setup.py sdist upload\n```\n\nHere is the documentation if you want additional information http://guide.python-distribute.org/contributing.html\n\nBest regards\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/17> <http://schema.org/endDate> "2013-06-17T19:58:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/17> <http://schema.org/identifier> "11152384"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/17> <http://schema.org/startDate> "2013-02-19T13:01:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/17> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/17"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/17> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/18> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/18> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/16696208> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/18> <http://schema.org/creator> <https://api.github.com/users/rdhyee> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/18> <http://schema.org/description> "I tried installing pyld on both Mac OS X 10.6.8 and ubuntu 12.04 without success in either case.\n\nOn the Mac:\n\n```\n(epd1)Raymond-Yee-Computer:pyld raymondyee$ python setup.py install\n/Library/Frameworks/Python.framework/Versions/7.3/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'playforms'\n  warnings.warn(msg)\nrunning install\nrunning bdist_egg\nrunning egg_info\nwriting pyld.egg-info/PKG-INFO\nwriting top-level names to pyld.egg-info/top_level.txt\nwriting dependency_links to pyld.egg-info/dependency_links.txt\nfile pyld.py (for module pyld) not found\nreading manifest file 'pyld.egg-info/SOURCES.txt'\nwriting manifest file 'pyld.egg-info/SOURCES.txt'\ninstalling library code to build/bdist.macosx-10.5-i386/egg\nrunning install_lib\nrunning build_py\nfile pyld.py (for module pyld) not found\nfile pyld.py (for module pyld) not found\nwarning: install_lib: 'build/lib' does not exist -- no Python modules to install\n\ncreating build/bdist.macosx-10.5-i386/egg\ncreating build/bdist.macosx-10.5-i386/egg/EGG-INFO\ncopying pyld.egg-info/PKG-INFO -> build/bdist.macosx-10.5-i386/egg/EGG-INFO\ncopying pyld.egg-info/SOURCES.txt -> build/bdist.macosx-10.5-i386/egg/EGG-INFO\ncopying pyld.egg-info/dependency_links.txt -> build/bdist.macosx-10.5-i386/egg/EGG-INFO\ncopying pyld.egg-info/top_level.txt -> build/bdist.macosx-10.5-i386/egg/EGG-INFO\nzip_safe flag not set; analyzing archive contents...\ncreating 'dist/pyld-0.0.1-py2.7.egg' and adding 'build/bdist.macosx-10.5-i386/egg' to it\nremoving 'build/bdist.macosx-10.5-i386/egg' (and everything under it)\nProcessing pyld-0.0.1-py2.7.egg\nremoving '/Users/raymondyee/.virtualenvs/epd1/lib/python2.7/site-packages/pyld-0.0.1-py2.7.egg' (and everything under it)\ncreating /Users/raymondyee/.virtualenvs/epd1/lib/python2.7/site-packages/pyld-0.0.1-py2.7.egg\nExtracting pyld-0.0.1-py2.7.egg to /Users/raymondyee/.virtualenvs/epd1/lib/python2.7/site-packages\npyld 0.0.1 is already the active version in easy-install.pth\n\nInstalled /Users/raymondyee/.virtualenvs/epd1/lib/python2.7/site-packages/pyld-0.0.1-py2.7.egg\nProcessing dependencies for pyld==0.0.1\nFinished processing dependencies for pyld==0.0.1\n```\n\nThen:\n\n```\nPython 2.7.3 |CUSTOM| (default, Apr 12 2012, 11:28:34) \n[GCC 4.0.1 (Apple Inc. build 5493)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pyld\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nImportError: No module named pyld\n```\n\nOn Ubuntu, no error messages with\n\n   python setup.py install\n\nbut I could not import the module either.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/18> <http://schema.org/endDate> "2013-04-20T00:47:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/18> <http://schema.org/identifier> "13425563"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/18> <http://schema.org/startDate> "2013-04-19T23:37:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/18> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/18"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/18> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/19> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/19> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17704421> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/19> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17709234> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/19> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17723322> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/19> <http://schema.org/creator> <https://api.github.com/users/Kerrigan29a> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/19> <http://schema.org/description> "According to the nquad specification http://sw.deri.org/2008/07/n-quads/ context (or graph in your code) must have the following structure:\n\ncontextTriple    ::= subject ws+ predicate ws+ object ( ws+ context )? ws\\* '.' ws*\ncontext  ::= uriref | nodeID | literal\n\nAn example here:\nhttp://pythex.org/?regex=%5E%5B%20%5Ct%5D*(%3F%3A(%3F%3A%3C(%5B%5E%3A%5D%2B%3A%5B%5E%3E%5D*)%3E)%7C(_%3A(%3F%3A%5BA-Za-z%5D%5BA-Za-z0-9%5D*)))%5B%20%5Ct%5D%2B(%3F%3A%3C(%5B%5E%3A%5D%2B%3A%5B%5E%3E%5D*)%3E)%5B%20%5Ct%5D%2B(%3F%3A(%3F%3A%3C(%5B%5E%3A%5D%2B%3A%5B%5E%3E%5D*)%3E)%7C(_%3A(%3F%3A%5BA-Za-z%5D%5BA-Za-z0-9%5D*))%7C(%3F%3A%22(%5B%5E%22%5C%5C%5D*(%3F%3A%5C%5C.%5B%5E%22%5C%5C%5D*)*)%22(%3F%3A(%3F%3A%5C%5E%5C%5E(%3F%3A%3C(%5B%5E%3A%5D%2B%3A%5B%5E%3E%5D*)%3E))%7C(%3F%3A%40(%5Ba-z%5D%2B(%3F%3A-%5Ba-z0-9%5D%2B)*)))%3F))%5B%20%5Ct%5D*(%3F%3A%5C.%7C(%3F%3A(%3F%3A(%3F%3A%3C(%5B%5E%3A%5D%2B%3A%5B%5E%3E%5D*)%3E)%7C(_%3A(%3F%3A%5BA-Za-z%5D%5BA-Za-z0-9%5D*))%7C(%3F%3A%22(%5B%5E%22%5C%5C%5D*(%3F%3A%5C%5C.%5B%5E%22%5C%5C%5D*)*)%22(%3F%3A(%3F%3A%5C%5E%5C%5E(%3F%3A%3C(%5B%5E%3A%5D%2B%3A%5B%5E%3E%5D*)%3E))%7C(%3F%3A%40(%5Ba-z%5D%2B(%3F%3A-%5Ba-z0-9%5D%2B)*)))%3F))%5B%20%5Ct%5D*%5C.))%5B%20%5Ct%5D*%24&test_string=%3Chttp%3A%2F%2Fwww.w3.org%2FTR%2F2003%2FCR-owl-guide-20030818%2Fwine%23GaryFarrellMerlot%3E%20%3Chttp%3A%2F%2Fwww.w3.org%2FTR%2F2003%2FCR-owl-guide-20030818%2Fwine%23hasWineDescriptor%3E%20%3Chttp%3A%2F%2Fwww.w3.org%2FTR%2F2003%2FCR-owl-guide-20030818%2Fwine%23Dry%3E%20%22default-graph4294967295%22%20.&ignorecase=0&multiline=0&dotall=0&verbose=0\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/19> <http://schema.org/endDate> "2013-05-10T05:02:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/19> <http://schema.org/identifier> "14169769"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/19> <http://schema.org/startDate> "2013-05-09T22:37:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/19> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/19"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/19> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/1> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/1> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2007676> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/1> <http://schema.org/creator> <https://api.github.com/users/timClicks> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/1> <http://schema.org/description> "`jsonld.py` doesn't use docstrings. This makes it impossible to access the documentation interactively.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/1> <http://schema.org/endDate> "2011-09-06T00:34:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/1> <http://schema.org/identifier> "1506878"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/1> <http://schema.org/startDate> "2011-08-29T06:11:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/1> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/1"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20717373> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20909712> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20913409> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20915265> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20999796> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://schema.org/creator> <https://api.github.com/users/ericpeden> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://schema.org/description> "This approach is more direct, faster, and extends backwards compatibility from Python 2.7 to 2.6.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://schema.org/endDate> "2013-07-15T20:07:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://schema.org/identifier> "16548207"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://schema.org/startDate> "2013-07-09T21:21:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/20"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/20> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/21983221> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22021206> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22023488> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22032175> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22036033> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531722> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://schema.org/description> "I believe that line 2713 is incorrect, when recursing into lists.  The frame[prop] refers to the list, not to the objects within the list, and hence no further framing occurs as the objects do not match the list frame.\n\nThe fix is, if I understand the intent of the code and the framing spec correctly:\n\n```\n self._match_frame(\n         state, [o['@id']], frame[prop][0]['@list'],\n         list_, '@list')\n```\n\nThus, given the resources,\nFrame:\n\n```\n{\n    \"@context\" : \"http://www.shared-canvas.org/ns/context.json\",\n    \"@type\": \"sc:Manifest\",\n    \"structures\": {\n        \"@list\": [\n            {\n                \"@type\":\"sc:Range\",\n                \"@embed\": true,\n                \"canvases\": {\n                    \"@list\": [\n                        {\n                            \"@embed\":false\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}\n```\n\nInstance:\n\n```\n{\n  \"@context\":\"http://www.shared-canvas.org/ns/context.json\",\n  \"@type\":\"sc:Manifest\",\n  \"@id\":\"http://www.example.org/iiif/book1/manifest.json\",\n  // ... references to canvases objects here ...\n  \"structures\": [\n    {\n      \"@id\": \"http://www.example.org/iiif/book1/range/1.json\",\n        \"@type\":\"sc:Range\",\n        \"label\":\"Introduction\",\n        \"canvases\": [\n          \"http://www.example.org/iiif/book1/canvas/1.json\",\n          \"http://www.example.org/iiif/book1/canvas/2.json\",\n          \"http://www.example.org/iiif/book1/canvas/3.json#xywh=0,0,750,300\"\n        ]\n    }\n  ]\n}\n```\n\nWould embed the sc:Range object, but not the objects which are part of the \"canvases\" list.\n\nRob\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://schema.org/endDate> "2013-09-16T18:16:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://schema.org/identifier> "17482321"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://schema.org/startDate> "2013-07-31T23:05:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/21"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/21> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22192883> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22206077> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22224054> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22264661> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://schema.org/creator> <https://api.github.com/users/bollwyvl> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://schema.org/description> "hello lovely digitalbazaar folks!\n\nattached find some changes that start configuration for travis-ci for pyld... it looks like 2.5 support is kind of a non-starter at this point (even tried some **future** shenanigans, just to get it installing), 2.6 doesn't like cmp_to_key (and may not be well supported in 3.x as of some point), and 3.x is not into `print` (but we knew that). I'd take a whack at those if you'd like, and maybe tune up the test output to be more travis-friendly.\n\nit seems like the reference implementations of all the json-ld stuff should probably be tested a) individually, as they are developed and b) as a group when the spec changes... this kind of confidence is important for broader adoption, and will help highlight interoperability challenges! i am most comfortable in the python and javascript environments, and would happily add more testing capabilities in these places.\n\nhope this helps!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://schema.org/endDate> "2013-08-07T15:12:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://schema.org/identifier> "17640566"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://schema.org/startDate> "2013-08-05T15:26:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/22"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/22> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/23> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/23> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25114817> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/23> <http://schema.org/creator> <https://api.github.com/users/fconil> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/23> <http://schema.org/description> "Hi,\n\nIt would be great if you could upload a new release of PyLD on PyPI.\n\nThere has been a lot of changes in PyLD (@reverse for instance) that worth doing a new release.\n\nBest regards\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/23> <http://schema.org/endDate> "2013-09-25T18:58:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/23> <http://schema.org/identifier> "20049599"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/23> <http://schema.org/startDate> "2013-09-25T15:33:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/23> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/23"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/23> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639305> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639479> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25693396> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25695270> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://schema.org/creator> <https://api.github.com/users/dpjanes> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://schema.org/description> "When I run the following testcase, I get an exception \"ValueError: no path specified\". Our codebase is up-to-date as of 12:30p Eastern 3 October. I think you had a similar error about a week ago, but it was fixed.\n\n```\nimport pprint\nfrom pyld import jsonld\n\njsond = {\n    \"@context\": {\n        \"ns\": \"http://example.com/core#\",\n    },\n    \"ns:associated\": [\n        { \"@id\": \"#Light\", }\n    ]\n}\n\n\ncontextd = jsond.get(\"@contextd\") or {}\n\nresultd = jsonld.compact(jsond, contextd)\npprint.pprint(resultd)\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://schema.org/endDate> "2013-10-03T19:33:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://schema.org/identifier> "20469064"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://schema.org/startDate> "2013-10-03T16:59:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/24"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/24> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722631> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722907> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25724576> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742815> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754309> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://schema.org/creator> <https://api.github.com/users/dpjanes> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://schema.org/description> "Test code\n\n```\nimport pprint\n\nfrom pyld import jsonld\n\ncontextd = {\n    \"@base\": \"http://example.com/\",\n    \"iot\": \"http://example.com/core/#\",\n}\n\njsond = {\n    \"iot:associated\": [ { \"@id\": \"#Light\", } ]\n}\n\n\ncompactd = jsonld.compact(jsond, contextd)\nflattends = jsonld.flatten(compactd)\npprint.pprint(flattends)\n```\n\nResult\n\nIf @base is \"http://example.com/\", the @id for light is 'http://example.com//#Light' - note the double slash. I would expect it to be a single \"/\".\n\nIf you remove the trailing slash from example.com, no slash appears at all - this is expected. \n\nIf you have a path component beyond the single slash, e.g. \"http://example.com/bla/\" things work as expected also.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://schema.org/endDate> "2013-10-04T19:32:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://schema.org/identifier> "20519162"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://schema.org/startDate> "2013-10-04T12:52:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/25"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/25> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/26> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/26> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25741790> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/26> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742798> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/26> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754288> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/26> <http://schema.org/creator> <https://api.github.com/users/dpjanes> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/26> <http://schema.org/description> "Notice how when I compact and then flatten the JSON, the @id changes from 'http://example.com/api/things/1' -> 'http://example.com/api/things/'. I believe the same thing happens in the Javascript code. I don't have a good enough understanding of the spec to know what the proper behaviour is, though part of me expecting the least surprise thinks the @id should have became the empty string \"\" in the compacted form.\n\nSample code:\n\n```\njsond = {\n    '@id': 'http://example.com/api/things/1',\n    'http://example.com' : \"\",\n}\ncontextd = {\n    '@base': 'http://example.com/api/things/1',\n}\n\nfrom pyld import jsonld\nimport pprint\n\ncompactd = jsonld.compact(jsond, contextd)\nprint \"= compacted\"\npprint.pprint(compactd, width = 1)\n\nprint \"= flattened\"\nflattened = jsonld.flatten(compactd)\npprint.pprint(flattened, width = 1)\n```\n\nOutput:\n\n```\n= compacted\n{'@context': {'@base': 'http://example.com/api/things/1'},\n '@id': './',\n 'http://example.com': ''}\n= flattened\n[{'@id': 'http://example.com/api/things/',\n  'http://example.com': [{'@value': ''}]}]\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/26> <http://schema.org/endDate> "2013-10-05T04:18:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/26> <http://schema.org/identifier> "20553659"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/26> <http://schema.org/startDate> "2013-10-04T22:34:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/26> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/26"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/26> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/27> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/27> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/27> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/27> <http://schema.org/endDate> "2014-02-10T16:42:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/27> <http://schema.org/identifier> "27278748"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/27> <http://schema.org/startDate> "2014-02-10T16:21:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/27> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/27"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/27> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/28> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/28> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43216702> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/28> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43217248> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/28> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43221676> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/28> <http://schema.org/creator> <https://api.github.com/users/anarchivist> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/28> <http://schema.org/description> "I was testing pulling gist content from http://rawgit.com/ while working on developing something, and discovered that `pyld.jsonld.load_document()` is failing when the server returns a response that is compressed using gzip:\n\n```\n$ curl -I http://rawgit.com/anarchivist/efe97e78a98d2849bfba/raw/collection.json\nHTTP/1.1 200 OK\nServer: nginx\nDate: Thu, 15 May 2014 00:12:54 GMT\nContent-Type: application/json; charset=utf-8\nAccess-Control-Allow-Origin: *\nX-Content-Type-Options: nosniff\nX-Robots-Tag: none\nRawGit-Naughtiness: 0\nETag: \"0884db85d95531d7c71f675425a27f32\"\nCache-Control: max-age=300\nVary: Accept-Encoding\nContent-Encoding: gzip\nRawGit-Cache-Status: HIT\nConnection: keep-alive\n```\n\nTo reproduce:\n\n```\n>>> from pyld import jsonld\n>>> j = jsonld.to_rdf(\"http://rawgit.com/anarchivist/efe97e78a98d2849bfba/raw/collection.json\", {\"format\": \"application/nquads\"})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 225, in to_rdf\n    return JsonLdProcessor().to_rdf(input_, options)\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 946, in to_rdf\n    'RDF.', 'jsonld.RdfError', cause=cause)\npyld.jsonld.JsonLdError: 'Could not expand input before serialization to RDF.'\nType: jsonld.RdfError\nCause: 'Could not retrieve a JSON-LD document from the URL.'\nType: jsonld.LoadDocumentError\nCode: loading document failed\nCause: 'utf8' codec can't decode byte 0x8b in position 1: invalid start byte  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 312, in load_document\n    'document': handle.read().decode('utf8')\n  File \"/usr/local/Cellar/python/2.7.6_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 942, in to_rdf\n    expanded = self.expand(input_, options)\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 618, in expand\n    remote_doc = options['documentLoader'](input_)\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 338, in load_document\n    cause=cause)\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/28> <http://schema.org/endDate> "2014-05-15T15:08:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/28> <http://schema.org/identifier> "33545431"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/28> <http://schema.org/startDate> "2014-05-15T00:14:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/28> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/28"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/28> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/29> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/29> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46018804> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/29> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46019038> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/29> <http://schema.org/creator> <https://api.github.com/users/greut> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/29> <http://schema.org/description> "Hey,\n\nI'm reviving a closed pull request (#20) with this, we fixed the tests and enabled the build on Travis as well (where all the lights are green).\n\nIt'd be much appreciated if it could be integrated in the upstream version. Many thanks\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/29> <http://schema.org/endDate> "2014-06-13T14:36:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/29> <http://schema.org/identifier> "35655512"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/29> <http://schema.org/startDate> "2014-06-13T09:07:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/29> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/29"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/29> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/2> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/2> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/1995644> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/2> <http://schema.org/creator> <https://api.github.com/users/timClicks> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/2> <http://schema.org/description> "The project does not use an open source license. Could this please be changed?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/2> <http://schema.org/endDate> "2011-09-05T04:45:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/2> <http://schema.org/identifier> "1506896"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/2> <http://schema.org/startDate> "2011-08-29T06:14:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/2> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/2"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/2> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339046346> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124563> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124910> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229817> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229920> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64239900> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://schema.org/assignee> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://schema.org/creator> <https://api.github.com/users/gcarothers> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://schema.org/description> "```\nsys.path.append(os.path.join(os.path.dirname(__file__), 'lib'))\nfrom pyld import jsonld\n```\n\nIf you have pyld installed already it's version string will be used by setup.py this causes very odd behavior.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://schema.org/endDate> "2017-10-24T16:16:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://schema.org/identifier> "36488549"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://schema.org/startDate> "2014-06-25T15:02:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/30"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/30> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/31> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/31> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50648272> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/31> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50649819> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/31> <http://schema.org/creator> <https://api.github.com/users/RDProjekt> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/31> <http://schema.org/description> "Hi!\n\nWe noticed two bugs in your code. One is in the framing algorithm when the remote frame contains a context url (the \"if\" was never True and if/else branches were reversed), and the other is in the _remove_embed function (lack of \"enumerate\" while iterating embed['parent']).\n\nHere's a pull request with patches. We also added some unit-tests for the first bug. Because json-ld-org tests don't cover it, we had to come up with our own.\n\nBest regards,\nRD Projekt\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/31> <http://schema.org/identifier> "38636858"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/31> <http://schema.org/startDate> "2014-07-24T14:30:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/31> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/31"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/31> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/32> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/32> <http://schema.org/creator> <https://api.github.com/users/frewsxcv> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/32> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/32> <http://schema.org/endDate> "2014-09-23T01:05:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/32> <http://schema.org/identifier> "43576320"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/32> <http://schema.org/startDate> "2014-09-23T00:42:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/32> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/32"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/32> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58520515> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58558529> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58563085> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564283> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564454> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://schema.org/creator> <https://api.github.com/users/pekrau> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://schema.org/description> "See Example 28 in http://www.w3.org/TR/json-ld/ for the kind of JSON-LD that I am having trouble with.\n\nI have some code producing JSON-LD containing a sub-dictionary with a context of its own. It appears that PyLD does not process that context, while it handles the main context of the data structure just fine.\n\nThis apparent issue is independent of whether the scoped context is in-lined or not.\n\nMy service is not (yet) available externally, so I can't provide a link to the JSON-LD. \n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://schema.org/endDate> "2014-10-09T19:30:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://schema.org/identifier> "45336538"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://schema.org/startDate> "2014-10-09T07:36:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/33"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/33> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/34> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/34> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58685421> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/34> <http://schema.org/creator> <https://api.github.com/users/mhalle> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/34> <http://schema.org/description> "Minor oversight:  `JsonLdProcessor` is defined as an old-style Python class.  It should instead be defined as a new-style class:\n\n```\nclass JsonLdProcessor(object):\n    ...\n```\n\nThis code will work with both Python 2 and Python 3 (in Python 3 all classes are new-style).\n\nFor more information, see:\nhttp://stackoverflow.com/questions/54867/old-style-and-new-style-classes-in-python\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/34> <http://schema.org/endDate> "2014-10-10T17:09:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/34> <http://schema.org/identifier> "45498733"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/34> <http://schema.org/startDate> "2014-10-10T16:28:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/34> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/34"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/34> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/61996763> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62001357> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62014882> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314334> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314687> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://schema.org/creator> <https://api.github.com/users/faassen> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://schema.org/description> "I tried pyld with a context URL that was of the form '/foo/bar', but pyld refuses to load it. It wants a URL with netloc included. Is this a part of the standard I missed or a choice by pyld? What's the motivation?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://schema.org/endDate> "2015-07-03T18:03:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://schema.org/identifier> "47955184"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://schema.org/startDate> "2014-11-06T12:08:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/35"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/35> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63385481> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63386308> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63390523> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63411291> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://schema.org/creator> <https://api.github.com/users/edsu> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://schema.org/description> "I'm having trouble either understanding how to use pyld, or how framing works -- or both. In the hopes that it's just the former I was wondering why this doesn't work as I'm expecting:\n\n``` python\n\nimport json\nimport pyld\n\ncontext = {\n    \"@context\": {\n        \"sc\": \"http://www.shared-canvas.org/ns/\",\n        \"images\": {\n            \"@type\": \"@id\",\n            \"@id\": \"sc:hasImageAnnotations\",\n            \"@container\": \"@list\"\n        }\n    }\n}\n\ndescription = {\n    \"@id\": \"http://example.com/u1\",\n    \"http://www.shared-canvas.org/ns/hasImageAnnotations\": [\n      {\n        \"@id\": \"http://example.com/u3\"\n      },\n      {\n        \"@id\": \"http://example.com/u2\"\n      }\n    ]\n}\n\nframed_json = pyld.jsonld.frame(description, context)\nprint json.dumps(framed_json, indent=2)\n```\n\nThe result seems to ignore my `images` property I've defined in the context:\n\n``` javascript\n{\n  \"@context\": {\n    \"sc\": \"http://www.shared-canvas.org/ns/\",\n    \"images\": {\n      \"@id\": \"sc:hasImageAnnotations\",\n      \"@type\": \"@id\",\n      \"@container\": \"@list\"\n    }\n  },\n  \"@graph\": [\n    {\n      \"sc:hasImageAnnotations\": [\n        {\n          \"@id\": \"http://example.com/u3\"\n        },\n        {\n          \"@id\": \"http://example.com/u2\"\n        }\n      ],\n      \"@id\": \"http://example.com/u1\"\n    },\n    {\n      \"@id\": \"http://example.com/u2\"\n    },\n    {\n      \"@id\": \"http://example.com/u3\"\n    }\n  ]\n}\n```\n\nHowever if I comment out the `@container` in the context:\n\n``` python\ncontext = {\n    \"@context\": {\n        \"sc\": \"http://www.shared-canvas.org/ns/\",\n        \"images\": {\n            \"@type\": \"@id\",\n            \"@id\": \"sc:hasImageAnnotations\",\n           # \"@container\": \"@list\"\n        }\n    }\n}\n```\n\nit seems to work as I expect:\n\n``` javascript\n{\n  \"@context\": {\n    \"sc\": \"http://www.shared-canvas.org/ns/\",\n    \"images\": {\n      \"@id\": \"sc:hasImageAnnotations\",\n      \"@type\": \"@id\"\n    }\n  },\n  \"@graph\": [\n    {\n      \"images\": [\n        \"http://example.com/u3\",\n        \"http://example.com/u2\"\n      ],\n      \"@id\": \"http://example.com/u1\"\n    },\n    {\n      \"@id\": \"http://example.com/u2\"\n    },\n    {\n      \"@id\": \"http://example.com/u3\"\n    }\n  ]\n}\n```\n\nCan anyone help me understand what I'm doing wrong?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://schema.org/endDate> "2014-11-17T22:42:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://schema.org/identifier> "49143984"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://schema.org/startDate> "2014-11-17T20:54:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/36"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/36> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/37> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/37> <http://schema.org/creator> <https://api.github.com/users/westurner> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/37> <http://schema.org/description> "This is lacking actual tests from http://json-ld.org/test-suite/ \"Transform RDF to JSON-LD tests\", but does seem to work for the simple `--rdf-to-jsonld` case.\n\nI may have been a bit overeager in terms of adding commandline arguments for as-yet-untested CLI functionality (which is already appropriately tested at a lower-level, according to http://json-ld.org/test-suite/reports/ ).\n\nQuestions:\n- Would this be a useful addition to PyLD?\n- How should the tests be structured, in relation to the existing tests?\n- I've been testing with http://topbraid.org/schema/schema.ttl , which does take about a minute per test on this machine. (http://topbraid.org/schema/)\n- Eventually, I'd like to generate a proper `@context` file, rather than a direct transformation from RDF/TTL -> Quads -> JSON-LD.\n- Could there be an RDFLib document loader, with support for all of the formats which RDFLib supports?\n- DOC: How do I clone and run the existing tests?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/37> <http://schema.org/identifier> "51934163"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/37> <http://schema.org/startDate> "2014-12-14T22:20:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/37> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/37"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/37> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/38> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/38> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859032> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/38> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859515> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/38> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859716> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/38> <http://schema.org/creator> <https://api.github.com/users/faassen> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/38> <http://schema.org/description> "I only faintly understand how framing works, but from my reading of the discussion here:\n\nhttps://github.com/digitalbazaar/jsonld.js/pull/68\n\nthere are three embed options, `@never`, `@once` and `@always`. But in the pyld sources I can see `@last` instead of `@once`. Isn't that inconsistent with the latest state of jsonld.js?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/38> <http://schema.org/endDate> "2015-01-21T15:40:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/38> <http://schema.org/identifier> "55032434"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/38> <http://schema.org/startDate> "2015-01-21T15:23:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/38> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/38"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/38> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/39> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/39> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90076195> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/39> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90080282> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/39> <http://schema.org/creator> <https://api.github.com/users/Mec-iS> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/39> <http://schema.org/description> "I have a context like:\n\n```\n \"@context\": \n    {\"dbpedia\": \"http://dbpedia.org/ontology/\", \n     \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\", \n     \"owl\": \"http://www.w3.org/2002/07/owl#\", \n     \"@base\": \"<myurl>/astronomy\", \n     \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\", \n     \"skos\": \"http://www.w3.org/2004/02/skos/core#\", \n     \"schema\": \"https://schema.org/\", \n     \"defines\": {\"@reverse\": \"rdfs:isDefinedBy\"}, \n   } \n```\n\nand then in the same JSON-LD a \"defines\" to set classes and properties:\n\n```\n \"@id\": \"\",\n \"@type\": ['http://www.w3.org/2002/07/owl#Ontology']\n \"defines\" : [{\n     \"@id\": <some_url>\n },...\n ]\n```\n\nI can correctly convert this same JSON-LD in the [playground](http://json-ld.org/playground), but there is no way of making PyLD to print out in compacted or expanded mode the very same.\n\n```\ncompacted = jsonld.compact(body, context)\n```\n\nreturns only @id and @type of the ontology but anything else.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/39> <http://schema.org/identifier> "60851654"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/39> <http://schema.org/startDate> "2015-03-12T16:51:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/39> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/39"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/39> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/3> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/3> <http://schema.org/creator> <https://api.github.com/users/timClicks> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/3> <http://schema.org/description> "The README doesn't explain how to use the library. Could some documentation please be added about how to use 'pyld'\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/3> <http://schema.org/endDate> "2013-09-16T18:06:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/3> <http://schema.org/identifier> "1574012"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/3> <http://schema.org/startDate> "2011-09-05T23:20:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/3> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/3"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/3> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/40> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/40> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/241025301> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/40> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/82500626> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/40> <http://schema.org/creator> <https://api.github.com/users/lexruee> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/40> <http://schema.org/description> "The example output of an expanded document is not correct.\n\nAccording the readme the output is a dictionary:\n\n``` python\nprint(json.dumps(expanded, indent=2))\n# Output:\n# {\n#   \"http://schema.org/image\": [{\"@id\": \"http://manu.sporny.org/images/manu.png\"}],\n#   \"http://schema.org/name\": [{\"@value\": \"Manu Sporny\"}],\n#   \"http://schema.org/url\": [{\"@id\": \"http://manu.sporny.org/\"}]\n# }\n```\n\nI guess this should be changed to:\n\n``` python\nprint(json.dumps(expanded, indent=2))\n# Output:\n# [ {\n#   \"http://schema.org/image\": [{\"@id\": \"http://manu.sporny.org/images/manu.png\"}],\n#   \"http://schema.org/name\": [{\"@value\": \"Manu Sporny\"}],\n#   \"http://schema.org/url\": [{\"@id\": \"http://manu.sporny.org/\"}]\n# } ]\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/40> <http://schema.org/endDate> "2015-03-17T18:01:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/40> <http://schema.org/identifier> "62431243"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/40> <http://schema.org/startDate> "2015-03-17T15:33:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/40> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/40"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/40> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/41> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/41> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/101670612> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/41> <http://schema.org/creator> <https://api.github.com/users/kal> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/41> <http://schema.org/description> "I found a couple of minor issues when running pyld under Python 3.4.2 which I fixed locally with this PR. I've tried to write the fixes so that they won't break under Python 2.x.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/41> <http://schema.org/endDate> "2015-05-13T13:54:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/41> <http://schema.org/identifier> "75948832"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/41> <http://schema.org/startDate> "2015-05-13T11:16:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/41> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/41"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/41> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/112810350> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113264988> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113285115> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113290304> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://schema.org/creator> <https://api.github.com/users/wladston> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://schema.org/description> "Hello,\n\nWhen I try the following code:\n\n```\n from pyld import jsonld\n doc = {\"@type\": \"Movie\",\n       \"actor\": [{\"name\": \"Myers Clark\",\n             \"sameAs\": \"http://akas.imdb.com/name/nm2072773/\"},\n            {\"name\": \"Kimberly Ridgeway\",\n             \"sameAs\": \"http://akas.imdb.com/name/nm2064470/\"}]}\n print jsonld.compact(doc, \"http://schema.org/\")\n```\n\nI get this as a respose:\n\n```\n{'@context': 'http://schema.org/', '@type': 'Movie'}\n```\n\nHowever, when I try this equivalent code in http://json-ld.org/playground/, \n\n```\n {\"@context\": \"http://schema.org\",\n   \"@type\": \"Movie\",\n  \"actor\": [{\"name\": \"Myers Clark\",\n             \"sameAs\": \"http://akas.imdb.com/name/nm2072773/\"},\n            {\"name\": \"Kimberly Ridgeway\",\n             \"sameAs\": \"http://akas.imdb.com/name/nm2064470/\"}]}\n```\n\nI get the expected json-ld in the compacted view:\n\n```\n {\n   \"@type\": \"http://schema.org/Movie\",\n   \"http://schema.org/actor\": [\n     {\n       \"http://schema.org/name\": \"Myers Clark\",\n       \"http://schema.org/sameAs\": {\n         \"@id\": \"http://akas.imdb.com/name/nm2072773/\"\n       }\n     },\n     {\n       \"http://schema.org/name\": \"Kimberly Ridgeway\",\n      \"http://schema.org/sameAs\": {\n         \"@id\": \"http://akas.imdb.com/name/nm2064470/\"\n       }\n     }\n   ]\n }\n```\n\nAny idea why jsonld.compact is ignoring the actors in this example?\n\nThanks :)\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://schema.org/endDate> "2015-06-18T19:24:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://schema.org/identifier> "88990211"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://schema.org/startDate> "2015-06-17T11:30:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/42"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/43> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/43> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141698183> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/43> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141755752> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/43> <http://schema.org/creator> <https://api.github.com/users/mt-digital> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/43> <http://schema.org/description> "I've run into an issue where I get a different result from `pyld` that's different from what the JSON-LD playground produces.\n\nOn the JSON-LD playground I changed the \"Event\" example to this:\n\n``` json\n{\n  \"@context\": {\n    \"ical\": \"http://www.w3.org/2002/12/cal/ical#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"ical:dtstart\": {\n      \"@type\": \"xsd:dateTime\"\n    }\n  },\n  \"ical\": \"Lady Gaga Concert\",\n  \"ical:location\": \"New Orleans Arena, New Orleans, Louisiana, USA\",\n  \"ical:dtstart\": \"2011-04-09T20:00Z\"\n}\n```\n\nAnd the compact result is\n\n``` json\n{\n  \"@context\": {\n    \"ical\": \"http://www.w3.org/2002/12/cal/ical#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"ical:dtstart\": {\n      \"@type\": \"xsd:dateTime\"\n    }\n  },\n  \"ical\": \"Lady Gaga Concert\",\n  \"ical:dtstart\": \"2011-04-09T20:00Z\",\n  \"ical:location\": \"New Orleans Arena, New Orleans, Louisiana, USA\"\n}\n```\n\nHowever in Python 2.7.10\n\n``` python\nfrom pyld import jsonld\nimport json\n\ndoc =  {  \"ical\": \"Lady Gaga Concert\", \"ical:dtstart\": \"2011-04-09T20:00Z\",  \"ical:location\": \"New Orleans Arena, New Orleans, Louisiana, USA\"}\n\ncontext = {\"ical\": \"http://www.w3.org/2002/12/cal/ical#\",  \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",    \"ical:dtstart\": { \"@type\": \"xsd:dateTime\"}}\n\nprint json.dumps(jsonld.compact(doc, context))\n```\n\nprints\n\n``` json\n{\n  \"@context\": {\n    \"ical:dtstart\": {\n      \"@type\": \"xsd:dateTime\"\n    },\n    \"ical\": \"http://www.w3.org/2002/12/cal/ical#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n  },\n  \"ical:location\": \"New Orleans Arena, New Orleans, Louisiana, USA\",\n  \"ical:dtstart\": \"2011-04-09T20:00Z\"\n}\n```\n\nThe `\"ical\": \"Lady Gaga Concert\",` line is now missing.\n\nThis may seem pointless, but I am developing \"normalized\" metadata where I want the synonyms from different vocabularies to be used interchangeably, and I want this to happen at the context level, for example,\n\n``` python\ndoc = dict(start_datetime='2014-01-01T13:00:00', ...)\ncontext_one = dict(start_datetime='http://vocabulary-one.com/start_date', ...)\ncontext_two = dict(start_datetime='http://vocabulary-two.com/coverage_start_datetime', ...)\n```\n\nThen depending on which context is used, different linked data is produced.  Is there perhaps an alternative, more correct way of approaching this?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/43> <http://schema.org/endDate> "2015-09-20T07:38:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/43> <http://schema.org/identifier> "107346996"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/43> <http://schema.org/startDate> "2015-09-19T17:44:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/43> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/43"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/43> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/44> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/44> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/553770884> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/44> <http://schema.org/creator> <https://api.github.com/users/kacarstensen-shift> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/44> <http://schema.org/description> "If `ActiveContextCache.set` is called multiple times during processing with a particular combination of `activeCtx` and `localCtx`, `ActiveContextCache.order` gets out of sync with `ActiveContextCache.cache` (i.e., multiple copies of a particular key combination can exist in `order` even though only one copy can be cached at any given time). This causes issues later in the cache's lifecycle when it begins to evict previously set elements. The first instance of a given (`activeCtx`, `localCtx`) found in `ActiveContextCache.order` will be evicted from `ActiveContextCache.cache` successfully, but subsequent copies will cause in a `KeyError`. To resolve this, I made inclusion in `ActiveContextCache.order` conditional on the (`activeCtx`, `localCtx`) combination not already existing in `ActiveContextCache.cache`. This keeps the two data structures are in sync and prevents the `KeyErrors`.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/44> <http://schema.org/identifier> "117242046"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/44> <http://schema.org/startDate> "2015-11-16T23:17:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/44> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/44"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/44> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/45> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/45> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/182664801> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/45> <http://schema.org/assignee> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/45> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/45> <http://schema.org/description> "Line 4465 of jsonld.py (JsonLdError.**str**) reads \"rval = repr(self.message)\".  The Exception class doesn't have a 'message' attribute so this throws a second exception.  Changing the line to \"rval = repr(self)\" seems to solve the problem.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/45> <http://schema.org/endDate> "2016-02-11T01:09:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/45> <http://schema.org/identifier> "132819694"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/45> <http://schema.org/startDate> "2016-02-10T21:17:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/45> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/45"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/45> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/46> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/46> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/218823116> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/46> <http://schema.org/assignee> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/46> <http://schema.org/creator> <https://api.github.com/users/coffindragger> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/46> <http://schema.org/description> "When attempting to load a document that returned Content-Encoding: deflate, a utf8 decode error exception was thrown.\n\nThis patch uses the zlib library to inflate the binary bytes before before decoding\n\n```\nDetails: {'url': u'https://w3id.org/openbadges/legacy-v1'}\nCause: ('Could not retrieve a JSON-LD document from the URL.',)\nType: jsonld.LoadDocumentError\nCode: loading document failed\nCause: 'utf8' codec can't decode byte 0x9c in position 1: invalid start byte  \n  File \"xxxxx/lib/python2.7/site-packages/pyld/jsonld.py\", line 399, in load_document\n    'document': data.decode('utf8')\n  File \"xxxxx/lib/python2.7/encodings/utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\n  File \"xxxxx/lib/python2.7/site-packages/pyld/jsonld.py\", line 4066, in _retrieve_context_urls\n    remote_doc = load_document(url)\n  File \"xxxxx/lib/python2.7/site-packages/pyld/jsonld.py\", line 425, in load_document\n    cause=cause)\n  File \"xxxxx/lib/python2.7/site-packages/pyld/jsonld.py\", line 1177, in process_context\n    local_ctx, {}, options['documentLoader'], options['base'])\n  File \"xxxxx/lib/python2.7/site-packages/pyld/jsonld.py\", line 4105, in _retrieve_context_urls\n    self._retrieve_context_urls(ctx, cycles_, load_document, url)\n  File \"xxxxx/lib/python2.7/site-packages/pyld/jsonld.py\", line 4073, in _retrieve_context_urls\n    code='loading remote context failed', cause=cause)\n  File \"xxxxx/lib/python2.7/site-packages/pyld/jsonld.py\", line 683, in compact\n    active_ctx = self.process_context(active_ctx, ctx, options)\n  File \"xxxxx/lib/python2.7/site-packages/pyld/jsonld.py\", line 1181, in process_context\n    'jsonld.ContextError', cause=cause)\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/46> <http://schema.org/endDate> "2016-05-12T17:11:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/46> <http://schema.org/identifier> "153043917"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/46> <http://schema.org/startDate> "2016-05-04T15:37:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/46> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/46"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/46> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/47> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/47> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237908301> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/47> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911031> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/47> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911251> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/47> <http://schema.org/creator> <https://api.github.com/users/mih> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/47> <http://schema.org/description> "Taking the example data from the README:\n\n```\n>>> doc = {\n    \"http://schema.org/name\": \"Manu Sporny\",\n    \"http://schema.org/url\": {\"@id\": \"http://manu.sporny.org/\"},\n    \"http://schema.org/image\": {\"@id\": \"http://manu.sporny.org/images/manu.png\"}\n}\n\n>>> from pyld import jsonld\n>>> open('/tmp/test.nt', 'w+').write(jsonld.to_rdf(doc, options={'format':\"application/nquads\"}))\n>>> jsonld.from_rdf('/tmp/test.nt', {'format':\"application/nquads\"})\n....\n   1485                 raise JsonLdError(\n   1486                     'Error while parsing N-Quads invalid quad.',\n-> 1487                     'jsonld.ParseError', {'line': line_number})\n   1488             match = match.groups()\n   1489 \n\nJsonLdError: ('Error while parsing N-Quads invalid quad.',)\nType: jsonld.ParseError\nDetails: {'line': 1}\n```\n\nRDF data look legit:\n\n```\n% cat /tmp/test.nt\n_:b0 <http://schema.org/image> <http://manu.sporny.org/images/manu.png> .\n_:b0 <http://schema.org/name> \"Manu Sporny\" .\n_:b0 <http://schema.org/url> <http://manu.sporny.org/> .\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/47> <http://schema.org/endDate> "2016-08-05T17:26:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/47> <http://schema.org/identifier> "169653025"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/47> <http://schema.org/startDate> "2016-08-05T17:07:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/47> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/47"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/47> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238680436> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238697889> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238700763> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238710930> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://schema.org/creator> <https://api.github.com/users/ViktorHaag> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://schema.org/description> "Using pip 8.1.2 with Python 3.5, PyLD 0.7.1 is not installable (but is installable with Python2):\n\n```\n~/src/devsite/client-libraries-dev/python/tests : [master x] pip3.5 install PyLD==0.7.1\nCollecting PyLD==0.7.1\nInstalling collected packages: PyLD\nSuccessfully installed PyLD-0.7.0\n~/src/devsite/client-libraries-dev/python/tests : [master x] pip install PyLD==0.7.1 \nCollecting PyLD==0.7.1\nInstalling collected packages: PyLD\nSuccessfully installed PyLD-0.7.1\n~/src/devsite/client-libraries-dev/python/tests : [master x] \n```\n\nNote that despite seeing 0.7.1 is there (it doesn't error that no such version exists), it actually collects and installs 0.7.0 for Python3.\n\n(Workaround is to download the *.tar.gz and install with `pip install -e`, but I'm not sure that's a great long term plan.)\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://schema.org/endDate> "2016-08-09T22:22:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://schema.org/identifier> "170161988"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://schema.org/startDate> "2016-08-09T13:11:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/48"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/48> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/49> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/49> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/248476999> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/49> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/49> <http://schema.org/description> "Behavior Encountered:\n\nWhen compacting a context with a language map, when the data does not have languages assigned, the key specified in the context is not used.  When the context specifies a default language, this is also not used when the input format is nquads, but IS used when the input is JSON-LD.  This should at least be consistent, and preferably the default language assigned.\n\nBehavior Expected:\n\nWhen compacting data, the default language specified in the context should be used.\n\nSpecification Reference:\n  https://www.w3.org/TR/json-ld/#string-internationalization\n\nPlayground Example:\n    http://tinyurl.com/hr7rwl8\n\nTest Case:\n  [test-langmap.zip](https://github.com/digitalbazaar/pyld/files/480742/test-langmap.zip)\n\nRelated Issues:\n  https://github.com/digitalbazaar/jsonld.js/issues/151\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/49> <http://schema.org/endDate> "2016-09-21T00:32:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/49> <http://schema.org/identifier> "177852916"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/49> <http://schema.org/startDate> "2016-09-19T17:55:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/49> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/49"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/49> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/4> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/4> <http://schema.org/creator> <https://api.github.com/users/timClicks> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/4> <http://schema.org/description> " `pyld/lib/jsonld.py`  uses the following several \n\n``` python\nisinstance(var, (str, unicode))\n```\n\nThese should be replaced with\n\n``` python\nisinstance(var, basestring)\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/4> <http://schema.org/endDate> "2011-09-06T00:31:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/4> <http://schema.org/identifier> "1574060"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/4> <http://schema.org/startDate> "2011-09-05T23:29:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/4> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/4"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/4> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/50> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/50> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/254126980> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/50> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259160530> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/50> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259166066> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/50> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259183193> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/50> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/50> <http://schema.org/description> "Consider the following code:\n\n``` python\n    CTX={ \"foo\": \"http://example.com/foo\"}\n    expanded = jsonld.expand({\"fooo\":\"bar\"}, {'expandContext': CTX})\n```\n\nThe result is an empty list, because \"fooo\" is not recognized by CTX. The fact that it is _silently_ ignore can be relevant in some situations, but in not in others. In this example, it is probably a typo, which the user would probably like to be detected.\n\nSo I think there should be a way to be notified when some JSON attributes were ignored.\n\nThe simplest (but not flexible) way to do it would be to have a `strict` option, defaulting to False. When set to True, an exception would be raised whenever a JSON key could not be converted to a IRI. In my application, I would rather fail than silently drop some data submitted by the user.\n\nA more flexible solution would be to have a `droppedKeys` option, expecting a set, and populating this set with every key that could not be converted to an IRI.\n\n``` python\n    CTX={ \"foo\": \"http://example.com/foo\"}\n    dropped = set()\n    expanded = jsonld.expand({\"fooo\":\"bar\"}, {'expandContext': CTX, 'droppedKeys': dropped})\n    if dropped:\n        # print some warning message to the user\n    # but still process expended\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/50> <http://schema.org/identifier> "182981030"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/50> <http://schema.org/startDate> "2016-10-14T07:25:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/50> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/50"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/50> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/51> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/51> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/253740386> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/51> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/51> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/51> <http://schema.org/identifier> "182991821"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/51> <http://schema.org/startDate> "2016-10-14T08:28:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/51> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/51"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/51> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/52> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/52> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258210641> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/52> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258214870> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/52> <http://schema.org/creator> <https://api.github.com/users/rspeer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/52> <http://schema.org/description> "I wanted to try using this package with my new JSON-LD API, with URLs such as http://api.conceptnet.io/c/en/example .\r\n\r\nIt seems to be able to do simple transformations of the data, but it fails when I ask it to convert to N-Quads format:\r\n\r\n```python\r\n>>> from pyld import jsonld\r\n>>> jsonld.to_rdf('http://api.conceptnet.io/c/en/example', options={'format': 'application/nquads'})\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/rspeer/.virtualenvs/lum/lib/python3.5/site-packages/pyld/jsonld.py\", line 295, in to_rdf\r\n    return JsonLdProcessor().to_rdf(input_, options)\r\n  File \"/home/rspeer/.virtualenvs/lum/lib/python3.5/site-packages/pyld/jsonld.py\", line 1147, in to_rdf\r\n    return self.to_nquads(dataset)\r\n  File \"/home/rspeer/.virtualenvs/lum/lib/python3.5/site-packages/pyld/jsonld.py\", line 1562, in to_nquads\r\n    quads.append(JsonLdProcessor.to_nquad(triple, graph_name))\r\n  File \"/home/rspeer/.virtualenvs/lum/lib/python3.5/site-packages/pyld/jsonld.py\", line 1617, in to_nquad\r\n    if o['language']:\r\nKeyError: 'language'\r\n```\r\n\r\nChanging this to `o.get('language')` seems to fix the problem, so that's what this patch does.\r\n\r\nThis patch passes the tests in `normalization/tests`. It doesn't pass `json-ld.org/test-suite`, but it seems the master branch doesn't either." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/52> <http://schema.org/identifier> "186942754"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/52> <http://schema.org/startDate> "2016-11-02T23:00:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/52> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/52"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/52> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/53> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/53> <http://schema.org/creator> <https://api.github.com/users/pacificleo> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/53> <http://schema.org/description> "For the ld+json on this page:\r\nhttp://io9.gizmodo.com/war-for-the-planet-of-the-apes-is-expanding-its-world-b-1789898134\r\n\r\nCompaction fails with exception \"argument of type 'bool' is not iterable\"\r\n\r\ncompacted = jsonld.compact(doc, \"http://schema.org\")\r\n\r\nThe ld+json is copied below. It works fone on the ld_json playgrond (http://json-ld.org/playground/)\r\n\r\n```json\r\n{\r\n  \"@context\":\"http://schema.org\",\r\n  \"@type\":\"Article\",\r\n  \"url\":\"http://io9.gizmodo.com/war-for-the-planet-of-the-apes-is-expanding-its-world-b-1789898134\",\r\n  \"author\":{\r\n    \"@type\":\"Person\",\r\n    \"name\":\"Katharine Trendacosta\"\r\n  },\r\n  \"headline\":\"War for the Planet of the Apes Is Expanding Its World Beyond Caesar\",\r\n  \"datePublished\":\"2016-12-09T11:23:00-05:00\",\r\n  \"mainEntityOfPage\":true,\r\n  \"image\":{\r\n    \"@list\":[\r\n      {\r\n        \"@type\":\"ImageObject\",\r\n        \"url\":\"https://i.kinja-img.com/gawker-media/image/upload/s--Hqn2havm--/c_scale,f_auto,fl_progressive,q_80,w_800/puk3lhu2eradznb76suk.png\",\r\n        \"width\":800,\r\n        \"height\":449\r\n      },\r\n      {\r\n        \"@type\":\"ImageObject\",\r\n        \"url\":\"https://i.kinja-img.com/gawker-media/image/upload/s--roBh1JKD--/c_scale,f_auto,fl_progressive,q_80,w_800/vrkerqbl9obklfbw34tl.png\",\r\n        \"width\":800,\r\n        \"height\":86\r\n      },\r\n      {\r\n        \"@type\":\"ImageObject\",\r\n        \"url\":\"https://i.kinja-img.com/gawker-media/image/upload/s--ky3BF80O--/c_scale,f_auto,fl_progressive,q_80,w_800/st48cto6bgc3l2xalbdl.png\",\r\n        \"width\":800,\r\n        \"height\":335\r\n      },\r\n      {\r\n        \"@type\":\"ImageObject\",\r\n        \"url\":\"https://i.kinja-img.com/gawker-media/image/upload/s--WarNmwdk--/c_scale,f_auto,fl_progressive,q_80,w_800/ljzzdte47tqh1rxwymti.png\",\r\n        \"width\":800,\r\n        \"height\":334\r\n      },\r\n      {\r\n        \"@type\":\"ImageObject\",\r\n        \"url\":\"https://i.kinja-img.com/gawker-media/image/upload/s--34F0OaZJ--/c_scale,f_auto,fl_progressive,q_80,w_800/h9yzgozhc7eqlvvzd3hv.png\",\r\n        \"width\":800,\r\n        \"height\":335\r\n      },\r\n      {\r\n        \"@type\":\"ImageObject\",\r\n        \"url\":\"https://i.kinja-img.com/gawker-media/image/upload/s--f6efnWre--/c_scale,f_auto,fl_progressive,q_80,w_800/vgyj2esofblnovpsqs2x.png\",\r\n        \"width\":800,\r\n        \"height\":335\r\n      },\r\n      {\r\n        \"@type\":\"ImageObject\",\r\n        \"url\":\"https://i.kinja-img.com/gawker-media/image/upload/s--_xSyT253--/c_scale,f_auto,fl_progressive,q_80,w_800/gtzfjztsemdtcl0pwnyx.png\",\r\n        \"width\":800,\r\n        \"height\":368\r\n      }\r\n    ]\r\n  },\r\n  \"thumbnailUrl\":\"https://i.kinja-img.com/gawker-media/image/upload/s--RXoSFT-B--/eh1hvjxamru5z6aobgwc.png\",\r\n  \"dateCreated\":\"2016-12-09T11:23:00-05:00\",\r\n  \"articleSection\":\"io9.gizmodo.com\",\r\n  \"creator\":[\r\n    \"Katharine Trendacosta\"\r\n  ],\r\n  \"keywords\":[\r\n    \"war for the planet of the apes\",\r\n    \"movies\"\r\n  ],\r\n  \"publisher\":{\r\n    \"@type\":\"Organization\",\r\n    \"name\":\"io9.gizmodo.com\",\r\n    \"logo\":{\r\n      \"@type\":\"ImageObject\",\r\n      \"url\":\"https://i.kinja-img.com/gawker-media/image/upload/s--ZrPeeUzw--/veoxklw8coulpkai27fa.png\"\r\n    }\r\n  }\r\n}\r\n```\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/53> <http://schema.org/identifier> "203308566"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/53> <http://schema.org/startDate> "2017-01-26T07:35:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/53> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/53"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/53> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290573746> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290574092> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290580628> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293962288> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://schema.org/description> "The code below errors:\r\n```\r\n  ...\r\n  File \"/Library/Python/2.7/site-packages/pyld/jsonld.py\", line 3320, in remove_dependents\r\n    embeds[next]['parent']['@id'] == id_):\r\nKeyError: '@id'\r\n```\r\n\r\nWhen the `ref` keys are present. \r\nExpected behavior would be to produce the same result as the input document.\r\nVersion: 0.7.1\r\n\r\n```python\r\n\r\nfrom pyld.jsonld import frame\r\n\r\nctxtjs = {\r\n\t\"@context\": {\r\n\t\t\"ns\": \"http://example.com/ns/\",\r\n\t\t\"hasList\": {\"@id\": \"ns:hasList\", \"@type\": \"@id\", \"@container\":\"@list\"},\r\n\t\t\"ref\": {\"@id\": \"ns:ref\", \"@type\": \"@id\"}\r\n\t}\t\r\n}\r\n\r\ndoc = {\r\n\t\"@context\": ctxtjs['@context'],\r\n\t\"@id\": \"http://top/1\",\r\n\t\"@type\": \"ns:A\",\r\n\t\"hasList\": [\r\n\t\t{\r\n\t\t\t\"@id\": \"http://child/1\", \r\n\t\t \t\"@type\": \"ns:B\", \r\n\t\t \t\"ref\": \"ns:something\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"@id\": \"http://child/2\", \r\n\t\t \t\"@type\": \"ns:B\", \r\n\t\t \t\"ref\": \"ns:something\"\r\n\t\t}\r\n\t]\r\n}\r\n\r\nframejs = {\r\n\t\"@context\": ctxtjs['@context'],\r\n\t\"@type\": \"ns:A\",\r\n\t\"hasList\": [{\r\n\t\t\"@type\": \"ns:B\"\r\n\t}]\r\n}\r\n\r\nframed = frame(doc, framejs)\r\n```\r\n\r\n\r\n(/cc @zimeon, @jpstroop, re IIIF/iiif.io#1117)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://schema.org/endDate> "2017-04-13T17:02:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://schema.org/identifier> "218352959"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://schema.org/startDate> "2017-03-30T23:04:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/54"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/54> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/55> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/55> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293958516> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/55> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293964312> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/55> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/55> <http://schema.org/description> "\r\nIf the parent resource is an `@list`, it does not have `@id`, therefore line 3321 fails with the `KeyError`. This patch adds in a check that `@id` is indeed in the parent keys.\r\n\r\nCloses #54, but it would be good to add the code from the issue as a test case.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/55> <http://schema.org/endDate> "2017-04-13T17:02:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/55> <http://schema.org/identifier> "218361593"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/55> <http://schema.org/startDate> "2017-03-30T23:59:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/55> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/55"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/55> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/56> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/56> <http://schema.org/creator> <https://api.github.com/users/jakubartory> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/56> <http://schema.org/description> "This enables passing one `options` dict to different jsonld functions, for example:\r\n\r\n``` python\r\nmy_options = {'documentLoader': my_document_loader}\r\nframed = jsonld.frame(doc, frame, options=options)\r\ncompacted = jsonld.compact(framed, ctx, options=options)\r\n```\r\n\r\nMinimal example of use case that was failing:\r\n\r\n``` python\r\n#!/usr/bin/env python\r\n\r\nfrom lib.pyld import jsonld\r\n\r\n\r\ndef my_document_loader(url):\r\n    return jsonld.load_document(url)\r\n\r\n\r\ndoc = {\r\n    'http://schema.org/name': 'Manu Sporny',\r\n    'http://schema.org/url': {'@id': 'http://manu.sporny.org/'},\r\n    'http://schema.org/image':\r\n    {'@id': 'http://manu.sporny.org/images/manu.png'},\r\n}\r\nframe = {\r\n    '@context': 'http://schema.org/',\r\n}\r\noptions_orig = {'documentLoader': my_document_loader}\r\noptions_new = options_orig.copy()\r\n\r\nframed = jsonld.frame(doc, frame, options=options_new)\r\nassert options_orig == options_new\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/56> <http://schema.org/endDate> "2017-06-20T17:14:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/56> <http://schema.org/identifier> "236945837"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/56> <http://schema.org/startDate> "2017-06-19T16:20:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/56> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/56"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/56> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/57> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/57> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/57> <http://schema.org/description> "The tests that access https://json-ld.org/ have \"SSL: CERTIFICATE_VERIFY_FAILED\" failures.  Perhaps due to the local VerifiedHTTPSHandler not supporting SNI?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/57> <http://schema.org/identifier> "237342262"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/57> <http://schema.org/startDate> "2017-06-20T20:54:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/57> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/57"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/57> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/58> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/58> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/312908630> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/58> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/363642661> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/58> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371024600> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/58> <http://schema.org/creator> <https://api.github.com/users/kevinxin90> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/58> <http://schema.org/description> "Hi,\r\n\r\nI'm wondering is there any plan to make the PyLD compatible with the current JSON-LD version 1.1.\r\n\r\nThanks!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/58> <http://schema.org/endDate> "2018-03-07T05:09:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/58> <http://schema.org/identifier> "240450975"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/58> <http://schema.org/startDate> "2017-07-04T15:25:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/58> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/58"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/58> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/59> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/59> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423357534> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/59> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423388946> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/59> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423766916> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/59> <http://schema.org/creator> <https://api.github.com/users/rknLA> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/59> <http://schema.org/description> "I've traced this down to https://github.com/digitalbazaar/pyld/blob/master/lib/pyld/jsonld.py#L4132\r\n\r\nThe original symptoms that I observed were that various `Date` fields that should be compacted to keys like `birthDate` were actually including a `schema:` prefix.\r\n\r\nIt looks like the core problem is that the default inverse dictionary for `@language` is not getting populated correctly (perhaps due to a change in the published `@context` from schema.org?)\r\n\r\nDate field specifications include both `@id` and `@type`, but not language, and are still expected to be pure strings ([according to schema.org's documentation](http://schema.org/Date)).  When the compactor attempts to find the correct term, `[_select_term]()` returns None. \r\n\r\nThe inverse dictionary winds up looking something like this:\r\n\r\n```python\r\n{\r\n    'http://schema.org/birthDate': {'@none': {'@language': {},\r\n                                              '@type': {'http://schema.org/Date': 'birthDate'}}},\r\n    # etc\r\n}\r\n```\r\n\r\nInstead of containing a `{'@none': 'birthDate'}` for `@language`, there's just an empty dict.\r\n\r\nSome other non-date fields also seem to exhibit this issue, but I don't know enough about the library or json-ld to know if these symptoms are actually problems, or if they're by design.\r\n\r\n\r\nMinimum-reproducible sample:\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nfrom pyld import jsonld\r\n\r\ndoc = {\r\n    'http://schema.org/name': 'Buster the Cat',\r\n    'http://schema.org/birthDate': '2012',\r\n    'http://schema.org/deathDate': '2015-02-25'\r\n}\r\n\r\nframe = {\r\n    '@context': 'http://schema.org/'\r\n}\r\n\r\nframed = jsonld.frame(doc, frame)\r\ncontents = framed['@graph'][0]\r\nprint(framed)\r\nassert 'name' in contents  # fine\r\nassert 'birthDate' in contents  # not fine, schema:birthDate instead\r\nassert 'deathDate' in contents  # not fine, schema:deathDate instead\r\n```\r\n\r\nMy proposal to fix this would be to apply https://github.com/Artory/pyld/commit/faaa1394dc32ecfdd6fd875f45e4fdbc931fa7cc, to attempt to set these defaults regardless of the outcome of the conditionals there." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/59> <http://schema.org/identifier> "243792094"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/59> <http://schema.org/startDate> "2017-07-18T17:29:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/59> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/59"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/59> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/5> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/5> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/10722716> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/5> <http://schema.org/creator> <https://api.github.com/users/timClicks> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/5> <http://schema.org/description> "The source does not comply with [PEP8](http://www.python.org/dev/peps/pep-0008/) coding standards. Some examples\n\n```\n=======         =============\ncurrent         suggested fix\n=======        =============\nusedCtx         used_ctx\nparentProperty  parent_property\nexpandSubjects  expanded_subjects\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/5> <http://schema.org/endDate> "2012-11-26T16:42:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/5> <http://schema.org/identifier> "1574088"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/5> <http://schema.org/startDate> "2011-09-05T23:37:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/5> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/5"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/5> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/60> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/60> <http://schema.org/creator> <https://api.github.com/users/rknLA> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/60> <http://schema.org/description> "Fixes #59\r\n\r\nIn cases where @type was set, but not @language, one or the other would end up being an empty dictionary.\r\n\r\nI have not run any tests on this, or added test cases, so that might need to be addressed before merging." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/60> <http://schema.org/identifier> "243795509"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/60> <http://schema.org/startDate> "2017-07-18T17:41:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/60> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/60"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/60> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/61> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/61> <http://schema.org/creator> <https://api.github.com/users/sx5640> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/61> <http://schema.org/description> "I running into the issue where I'm calling `jsonld.compact` with `'compactArrays': False`, and the result I'm getting always returns a graph and convert string value to list.\r\n\r\nThe json structure I'm using is:\r\n```\r\n{\r\n  \"@context\": ...,\r\n  \"key1\": \"abc\",\r\n  \"key2\": [\"abc\", \"def\"]\r\n}\r\n```\r\nwhere the value of `key2` can be single value or multiple values.\r\n\r\nI can't use `jsonld.compact` without `'compactArrays': False` when `key2` has single value, it will convert it into string.\r\n\r\nIt seems that during the `compact` function the code will call `expand` first, which will expand everything into array, and `'compactArrays': False` will skip all of them. `skipExpansion` wouldn't work either since it convert the value of`key1` into list of chars.\r\n\r\nI would suggest to restructure the code so that it will not do a full `expand` before `_compact`" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/61> <http://schema.org/identifier> "248114874"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/61> <http://schema.org/startDate> "2017-08-04T20:54:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/61> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/61"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/61> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/320846875> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362398099> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362404503> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362421142> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/632938536> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://schema.org/creator> <https://api.github.com/users/tony> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://schema.org/description> "Despite this being the premier JSON-LD library for python, the examples are sparse and leave a lot to the imagination. Or maybe it's just me. In frustration I ended up resorting to dicts and json for now, but wanted to see if we could get some more examples and documentation up.\r\n\r\nHere are examples of outputting jsonld Google's way:\r\n\r\nhttps://developers.google.com/search/docs/guides/\r\n\r\nBreadcrumbs: https://developers.google.com/search/docs/data-types/breadcrumbs \r\n\r\n```html\r\n<script type=\"application/ld+json\">\r\n{\r\n  \"@context\": \"http://schema.org\",\r\n  \"@type\": \"WebSite\",\r\n  \"url\": \"https://www.example.com/\",\r\n  \"potentialAction\": [{\r\n    \"@type\": \"SearchAction\",\r\n    \"target\": \"https://query.example.com/search?q={search_term_string}\",\r\n    \"query-input\": \"required name=search_term_string\"\r\n  },{\r\n    \"@type\": \"SearchAction\",\r\n    \"target\": \"android-app://com.example/https/query.example.com/search/?q={search_term_string}\",\r\n    \"query-input\": \"required name=search_term_string\"\r\n  }]\r\n}\r\n</script>\r\n```\r\n\r\nhttps://developers.google.com/search/docs/data-types/logo\r\n\r\n```json\r\n{\r\n  \"@context\": \"http://schema.org\",\r\n  \"@type\": \"Organization\",\r\n  \"url\": \"http://www.example.com\",\r\n  \"logo\": \"http://www.example.com/images/logo.png\"\r\n}\r\n```\r\n\r\nhttps://developers.google.com/search/docs/data-types/articles\r\n\r\n```json\r\n{\r\n  \"@context\": \"http://schema.org\",\r\n  \"@type\": \"NewsArticle\",\r\n  \"mainEntityOfPage\": {\r\n    \"@type\": \"WebPage\",\r\n    \"@id\": \"https://google.com/article\"\r\n  },\r\n  \"headline\": \"Article headline\",\r\n  \"image\": {\r\n    \"@type\": \"ImageObject\",\r\n    \"url\": \"https://google.com/thumbnail1.jpg\",\r\n    \"height\": 800,\r\n    \"width\": 800\r\n  },\r\n  \"datePublished\": \"2015-02-05T08:00:00+08:00\",\r\n  \"dateModified\": \"2015-02-05T09:20:00+08:00\",\r\n  \"author\": {\r\n    \"@type\": \"Person\",\r\n    \"name\": \"John Doe\"\r\n  },\r\n   \"publisher\": {\r\n    \"@type\": \"Organization\",\r\n    \"name\": \"Google\",\r\n    \"logo\": {\r\n      \"@type\": \"ImageObject\",\r\n      \"url\": \"https://google.com/logo.jpg\",\r\n      \"width\": 600,\r\n      \"height\": 60\r\n    }\r\n  },\r\n  \"description\": \"A most wonderful article\"\r\n}\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://schema.org/identifier> "248556707"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://schema.org/startDate> "2017-08-07T23:12:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/62"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/62> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/63> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/63> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329264706> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/63> <http://schema.org/creator> <https://api.github.com/users/bpow> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/63> <http://schema.org/description> "The variable `frame` was masking scope of jsonld.frame. Also, `input` was being passed to jsonld.frame instead of the parameter `input_`." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/63> <http://schema.org/endDate> "2017-09-13T18:47:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/63> <http://schema.org/identifier> "256893615"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/63> <http://schema.org/startDate> "2017-09-12T02:00:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/63> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/63"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/63> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/64> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/64> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329266417> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/64> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/330669987> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/64> <http://schema.org/creator> <https://api.github.com/users/bpow> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/64> <http://schema.org/description> "Framing with \"@embed\": \"@link\" has been proposed as one way to create an in-memory representation of a graph (as discussed in json-ld/json-ld.org#140 ).\r\n\r\njsonld.js does this in a way that handles circular references, but when I try to use pyld to frame:\r\n\r\n```json\r\n{\r\n  \"@context\": \"http://schema.org/\",\r\n  \"@type\": \"Person\",\r\n  \"name\": \"Jane Doe\",\r\n  \"jobTitle\": \"Professor\",\r\n  \"telephone\": \"(425) 123-4567\",\r\n  \"@id\": \"http://www.janedoe.com\",\r\n  \"knows\": {\r\n    \"name\": \"John Smith\",\r\n    \"@type\": \"Person\",\r\n    \"@id\": \"http://www.johnsmith.me\",\r\n    \"knows\": {\r\n      \"@id\": \"http://www.janedoe.com\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nwith a frame like:\r\n```json\r\n{\r\n  \"@context\": \"http://schema.org\",\r\n  \"@embed\": \"@link\"\r\n}\r\n```\r\n\r\n... I get a RuntimeError from exceeding the recursion limit.\r\n\r\nI also demonstrate this in [a gist](https://gist.github.com/bpow/b3af1e454c51fae7b7c2d1e4980da408)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/64> <http://schema.org/identifier> "256896156"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/64> <http://schema.org/startDate> "2017-09-12T02:17:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/64> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/64"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/64> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329104285> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329268246> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329420576> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335649387> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335809199> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339049308> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://schema.org/creator> <https://api.github.com/users/jkreft-usgs> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://schema.org/description> "this is related to #57 \r\nRunning on python 2.7.11 and attempting to load a remote context url hosted on github.io.  It seems that the HTTPS handler that was included in this package is circumventing the native HTTPS handling backported into python past 2.7.9.  \r\n\r\nThis is the stacktrace:\r\n```JsonLdError: ('Could not process context before compaction.',)\r\nType: jsonld.CompactError\r\nCause: ('Could not process JSON-LD context.',)\r\nType: jsonld.ContextError\r\nCause: ('Dereferencing a URL did not result in a valid JSON-LD context.',)\r\nType: jsonld.ContextUrlError\r\nCode: loading remote context failed\r\nDetails: {'url': <github.io url>}\r\nCause: ('Could not retrieve a JSON-LD document from the URL.',)\r\nType: jsonld.LoadDocumentError\r\nCode: loading document failed\r\nCause: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:590)>  File \"/Users/user/venvs/env/lib/python2.7/site-packages/pyld/jsonld.py\", line 390, in load_document\r\n    with closing(url_opener.open(url)) as handle:\r\n  File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 431, in open\r\n    response = self._open(req, data)\r\n  File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 449, in _open\r\n    '_open', req)\r\n  File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 409, in _call_chain\r\n    result = func(*args)\r\n  File \"/Users/user/venvs/env/lib/python2.7/site-packages/pyld/jsonld.py\", line 5135, in https_open\r\n    return self.do_open(self.specialized_conn_class, req)\r\n  File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 1197, in do_open\r\n    raise URLError(err)\r\n  File \"/Users/user/venvs/env/lib/python2.7/site-packages/pyld/jsonld.py\", line 4072, in _retrieve_context_urls\r\n    remote_doc = load_document(url)\r\n  File \"/Users/user/venvs/env/lib/python2.7/site-packages/pyld/jsonld.py\", line 430, in load_document\r\n    cause=cause)\r\n  File \"/Users/user/venvs/env/lib/python2.7/site-packages/pyld/jsonld.py\", line 1182, in process_context\r\n    local_ctx, {}, options['documentLoader'], options['base'])\r\n  File \"/Users/user/venvs/env/lib/python2.7/site-packages/pyld/jsonld.py\", line 4079, in _retrieve_context_urls\r\n    code='loading remote context failed', cause=cause)\r\n  File \"/Users/user/venvs/env/lib/python2.7/site-packages/pyld/jsonld.py\", line 688, in compact\r\n    active_ctx = self.process_context(active_ctx, ctx, options)\r\n  File \"/Users/user/venvs/env/lib/python2.7/site-packages/pyld/jsonld.py\", line 1186, in process_context\r\n    'jsonld.ContextError', cause=cause)\r\n```\r\n\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://schema.org/endDate> "2017-10-24T16:26:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://schema.org/identifier> "257299181"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://schema.org/startDate> "2017-09-13T08:34:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/65"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/65> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/66> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/66> <http://schema.org/creator> <https://api.github.com/users/bpow> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/66> <http://schema.org/description> "An empty dict is not truthy in python, so cannot just check\r\nfor \"if options['link']\"\r\n\r\nFixes #64" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/66> <http://schema.org/identifier> "258951513"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/66> <http://schema.org/startDate> "2017-09-19T20:21:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/66> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/66"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/66> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335648776> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/337052472> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338291587> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338302684> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://schema.org/description> "Looking for feedback on the doc loader API:\r\n-  Should it more closely match the jsonld.js one?  (ie, a documentLoader.requests object or similar)\r\n-  This one doesn't have to support web and servers but it's still a similar pattern that allows using custom loaders.  There might be a use case for changing things to support the old API vs requests lib.\r\n- Is it worth the trouble to made 'requests' optional and provide a simpler (though maybe broken) loader like the old code?\r\n\r\nThe path futzing changes pass the tests now but it's unclear how correct or optimal it is.  I just moved closer to what jsonld.js does." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://schema.org/endDate> "2017-10-20T19:35:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://schema.org/identifier> "264422854"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://schema.org/startDate> "2017-10-11T00:45:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/67"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/67> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338978544> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339012554> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339047869> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339083366> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339093650> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://schema.org/creator> <https://api.github.com/users/frague59> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://schema.org/description> "Hi, \r\n\r\nI'm installing PyLD into a (almost empty) docker container, for a django project.\r\n\r\nI've added PyLD into a requirement file, and I've the following error when installing the requirements: \r\n\r\n```python \r\n...\r\nCollecting PyLD (from -r requirements/common.txt (line 42))\r\n  Downloading PyLD-0.8.0.tar.gz (44kB)\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-0b391b8m/PyLD/setup.py\", line 17, in <module>\r\n        from pyld import jsonld\r\n      File \"/tmp/pip-build-0b391b8m/PyLD/lib/pyld/__init__.py\", line 2, in <module>\r\n        from . import jsonld\r\n      File \"/tmp/pip-build-0b391b8m/PyLD/lib/pyld/jsonld.py\", line 19, in <module>\r\n        import requests\r\n    ImportError: No module named 'requests'\r\n```\r\nLooking in the setup.py file, I can see at line 17:\r\n```python \r\nfrom pyld import jsonld\r\n```\r\nwhere an attempt to load the current installing module, which needs requests, which is not installled because it is a requirement of the current installing module...\r\n\r\nI think you shouldn't try to load the _currently installing_ module, the setup.py file is used both to create the package (sdist) and install it.\r\n\r\nThanks for upgrading the pypi package !" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://schema.org/endDate> "2017-10-24T16:21:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://schema.org/identifier> "267687865"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://schema.org/startDate> "2017-10-23T14:22:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/68"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/68> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/69> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/69> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339193989> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/69> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197196> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/69> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197267> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/69> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/69> <http://schema.org/description> "just a question:  couldn't there remain some  `load_document` adapter to use flashy new `requests_document_loader` so projects using previous API could still use it? (sorry -- I didn't look in detail inside etc to see if that is feasible or not, decided just to ask)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/69> <http://schema.org/endDate> "2017-10-25T02:47:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/69> <http://schema.org/identifier> "268231573"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/69> <http://schema.org/startDate> "2017-10-25T00:42:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/69> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/69"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/69> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/6> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/6> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531927> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/6> <http://schema.org/creator> <https://api.github.com/users/timClicks> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/6> <http://schema.org/description> "The code currently implements comparison functions without making use of Python's idioms. This breaches PEP8 and means that the code is less re-usable:\n\n> When implementing ordering operations with rich comparisons, it is best to\n>       implement all six operations (`__eq__`, `__ne__`, `__lt__`, `__le__`, `__gt__`,\n>       `__ge__`) rather than relying on other code to only exercise a particular\n>       comparison.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/6> <http://schema.org/endDate> "2013-09-16T18:18:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/6> <http://schema.org/identifier> "1574097"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/6> <http://schema.org/startDate> "2011-09-05T23:40:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/6> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/6"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/6> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/70> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/70> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/348728895> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/70> <http://schema.org/creator> <https://api.github.com/users/origliante> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/70> <http://schema.org/description> "I suggest to add some caching because if the library is called many times it's painfully slow" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/70> <http://schema.org/identifier> "278727227"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/70> <http://schema.org/startDate> "2017-12-02T23:25:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/70> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/70"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/70> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359103064> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359112642> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359183088> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367110974> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://schema.org/creator> <https://api.github.com/users/oohlaf> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://schema.org/description> "Hi,\r\n\r\nThe testsuite fails on (Python3.5):\r\n```\r\n\r\nExpansion: #t0088: Value Expansion does not expand native values, such as booleans, to a node object ...\r\n\r\nTraceback (most recent call last):\r\n  File \"tests/runtests.py\", line 228, in runTest\r\n    result = getattr(jsonld, fn)(*params)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 158, in expand\r\n    return JsonLdProcessor().expand(input_, options)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 876, in expand\r\n    expanded = self._expand(active_ctx, None, document, options, False)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 2173, in _expand\r\n    active_ctx, key, value, options, inside_list=False)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 1974, in _expand\r\n    active_ctx, active_property, e, options, inside_list)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 1998, in _expand\r\n    return self._expand_value(active_ctx, active_property, element)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 2667, in _expand_value\r\n    return {'@id': self._expand_iri(active_ctx, value, base=True)}\r\n  File \"tests/../lib/pyld/jsonld.py\", line 3998, in _expand_iri\r\n    if ':' in value:\r\nTypeError: argument of type 'bool' is not iterable\r\nERROR\r\n\r\n======================================================================\r\nERROR: Expansion: https://json-ld.org/test-suite/tests/expand-manifest.jsonld#t0088: Value Expansion does not expand native values, such as booleans, to a node object\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests/runtests.py\", line 240, in runTest\r\n    raise e\r\n  File \"tests/runtests.py\", line 228, in runTest\r\n    result = getattr(jsonld, fn)(*params)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 158, in expand\r\n    return JsonLdProcessor().expand(input_, options)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 876, in expand\r\n    expanded = self._expand(active_ctx, None, document, options, False)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 2173, in _expand\r\n    active_ctx, key, value, options, inside_list=False)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 1974, in _expand\r\n    active_ctx, active_property, e, options, inside_list)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 1998, in _expand\r\n    return self._expand_value(active_ctx, active_property, element)\r\n  File \"tests/../lib/pyld/jsonld.py\", line 2667, in _expand_value\r\n    return {'@id': self._expand_iri(active_ctx, value, base=True)}\r\n  File \"tests/../lib/pyld/jsonld.py\", line 3998, in _expand_iri\r\n    if ':' in value:\r\nTypeError: argument of type 'bool' is not iterable\r\n\r\n----------------------------------------------------------------------\r\nRan 565 tests in 9.384s\r\n\r\nFAILED (errors=1, skipped=142)\r\n```\r\n\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://schema.org/endDate> "2018-02-20T20:37:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://schema.org/identifier> "290121454"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://schema.org/startDate> "2018-01-19T22:06:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/71"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/71> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/72> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/72> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004774> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/72> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/72> <http://schema.org/description> "Similar to https://github.com/digitalbazaar/jsonld.js/issues/141:\r\n\r\n> According to the W3C Recommendation, the standard MIME type for N-Quads is \"application/n-quads\" (see https://www.w3.org/TR/n-quads/#h2_sec-mediaReg), while jsonld currently requires \"application/nquads\" in .normalize(), .toRDF() and fromRDF().\r\n> I propose it should accept both \"application/n-quads\" and \"application/nquads\", returning N-Quads in both cases.\r\n> " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/72> <http://schema.org/endDate> "2018-03-07T02:50:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/72> <http://schema.org/identifier> "291755090"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/72> <http://schema.org/startDate> "2018-01-25T23:42:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/72> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/72"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/72> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360935678> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360938936> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360940471> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/361194665> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362103879> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366824826> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367116478> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371003204> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://schema.org/creator> <https://api.github.com/users/oohlaf> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://schema.org/endDate> "2018-03-07T02:40:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://schema.org/identifier> "292059234"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://schema.org/startDate> "2018-01-26T23:10:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/73"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/73> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/74> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/74> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370621520> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/74> <http://schema.org/creator> <https://api.github.com/users/IllDepence> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/74> <http://schema.org/description> "must a → must be a" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/74> <http://schema.org/endDate> "2018-03-07T02:33:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/74> <http://schema.org/identifier> "295030693"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/74> <http://schema.org/startDate> "2018-02-07T07:16:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/74> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/74"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/74> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/75> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/75> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/75> <http://schema.org/description> "This brings pyld support for JSON-LD 1.1 up to par with jsonld.js. Given that the json-ld-1.1 branch is (AFAIK) unreviewed, this arguably doesn't make the reviewing situation any worse, so it could just be merged into the json-ld-1.1 branch, but it would be good to have more critical eyes on both of these branches at some point." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/75> <http://schema.org/endDate> "2018-02-28T22:05:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/75> <http://schema.org/identifier> "296943469"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/75> <http://schema.org/startDate> "2018-02-14T01:13:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/75> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/75"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/75> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620089> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620421> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370643316> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370978624> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371007997> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://schema.org/endDate> "2018-03-07T02:50:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://schema.org/identifier> "296952754"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://schema.org/startDate> "2018-02-14T02:08:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/76"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/76> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/77> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/77> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366822196> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/77> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004950> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/77> <http://schema.org/creator> <https://api.github.com/users/oohlaf> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/77> <http://schema.org/description> "This branch should have a working test suite." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/77> <http://schema.org/endDate> "2018-03-07T02:51:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/77> <http://schema.org/identifier> "298414346"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/77> <http://schema.org/startDate> "2018-02-19T22:11:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/77> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/77"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/77> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371633287> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371635833> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371654236> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371694497> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371961130> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371981111> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://schema.org/description> "Our @datalad testing build bots started to puke a new error which we haven't seen before:\r\n```\r\n======================================================================\r\nERROR: datalad.metadata.tests.test_search.test_our_metadataset_search\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/nose/case.py\", line 133, in run\r\n    self.runTest(result)\r\n  File \"/usr/lib/python2.7/dist-packages/nose/case.py\", line 151, in runTest\r\n    test(result)\r\n  File \"/usr/lib/python2.7/unittest/case.py\", line 393, in __call__\r\n    return self.run(*args, **kwds)\r\n  File \"/usr/lib/python2.7/unittest/case.py\", line 353, in run\r\n    result.addError(self, sys.exc_info())\r\n  File \"/usr/lib/python2.7/dist-packages/nose/proxy.py\", line 128, in addError\r\n    formatted = plugins.formatError(self.test, err)\r\n  File \"/usr/lib/python2.7/dist-packages/nose/plugins/manager.py\", line 99, in __call__\r\n    return self.call(*arg, **kw)\r\n  File \"/usr/lib/python2.7/dist-packages/nose/plugins/manager.py\", line 141, in chain\r\n    result = meth(*arg, **kw)\r\n  File \"/usr/lib/python2.7/dist-packages/nose/plugins/logcapture.py\", line 237, in formatError\r\n    return (ec, self.addCaptureToErr(ev, records), tb)\r\n  File \"/usr/lib/python2.7/dist-packages/nose/plugins/logcapture.py\", line 244, in addCaptureToErr\r\n    records + \\\r\n  File \"/usr/lib/python2.7/dist-packages/nose/util.py\", line 652, in safe_str\r\n    return str(val)\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/venv-ci/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 4923, in __str__\r\n    rval += '\\nCause: ' + str(self.cause)\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/venv-ci/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 4923, in __str__\r\n    rval += '\\nCause: ' + str(self.cause)\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/venv-ci/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 4923, in __str__\r\n    rval += '\\nCause: ' + str(self.cause)\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/venv-ci/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 4917, in __str__\r\n    rval += '\\nType: ' + self.type\r\nTypeError: cannot concatenate 'str' and 'dict' objects\r\n```\r\nwhich when I went into that environment to troubleshoot showed us another face:\r\n```\r\n======================================================================\r\nERROR: datalad.metadata.tests.test_search.test_our_metadataset_search\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/datalad/tests/utils.py\", line 840, in newfunc\r\n    return func(*args, **kwargs)\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/datalad/tests/utils.py\", line 627, in newfunc\r\n    return t(*(arg + (filename,)), **kw)\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/datalad/metadata/tests/test_search.py\", line 123, in test_our_metadataset_search\r\n    assert list(ds.search('.', report='*', regex=True))\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/datalad/metadata/search.py\", line 219, in __call__\r\n    meta = flatten_metadata_graph(meta)\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/datalad/metadata/__init__.py\", line 285, in flatten_metadata_graph\r\n    return jsonld.flatten(obj, ctx={\"@context\": \"http://schema.org/\"})\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/venv-ci/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 178, in flatten\r\n    return JsonLdProcessor().flatten(input_, ctx, options)\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/venv-ci/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 885, in flatten\r\n    'jsonld.FlattenError', cause=cause)\r\nJsonLdError: <unprintable JsonLdError object>\r\n```\r\nyet to figure out what is going on, but I feel that it relates to having recent 1.0.{0,1} releases of pyld out ;)\r\nattn: @mih " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://schema.org/endDate> "2018-03-09T21:36:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://schema.org/identifier> "303635570"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://schema.org/startDate> "2018-03-08T21:19:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/78"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/78> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/79> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/79> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371653387> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/79> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/79> <http://schema.org/description> "Addresses a part of #78 forbidding proper error msg to be displayed" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/79> <http://schema.org/endDate> "2018-03-08T22:55:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/79> <http://schema.org/identifier> "303643883"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/79> <http://schema.org/startDate> "2018-03-08T21:46:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/79> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/79"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/79> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/7> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/7> <http://schema.org/creator> <https://api.github.com/users/timClicks> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/7> <http://schema.org/description> "The source makes use of the following keywords or global functions as variables: `input`, `type`, `id`, `dir`. They should probably be renamed to avoid clashing.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/7> <http://schema.org/endDate> "2012-11-26T16:40:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/7> <http://schema.org/identifier> "1574116"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/7> <http://schema.org/startDate> "2011-09-05T23:45:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/7> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/7"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/7> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/80> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/80> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371901695> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/80> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371952668> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/80> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/80> <http://schema.org/description> "exception might be defined (now) above in the same file.\r\nWithout this it was causing me\r\n\r\n```\r\n(Pdb) p requests_document_loader()\r\n*** ImportError: ImportError('cannot import name JsonLdError',)\r\n```\r\neven though I do have requests installed.  It feels that some additional testing is due\r\n\r\nCloses #78 " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/80> <http://schema.org/endDate> "2018-03-09T21:36:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/80> <http://schema.org/identifier> "303703219"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/80> <http://schema.org/startDate> "2018-03-09T02:34:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/80> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/80"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/80> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/81> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/81> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394832620> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/81> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394861149> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/81> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/401506093> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/81> <http://schema.org/creator> <https://api.github.com/users/pjohnston-wiley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/81> <http://schema.org/description> "When framing a JSON-LD document with at least one named graph, the current graph (`state['graph']`) was not being reset after recursing through the named graphs. Since the code iterates in alphabetical order, this only manifested for objects in the default graph that had `@id`s greater than the `@id` of the first named graph. This would be a good test to put into the overall JSON-LD framing test suite, please let me know if you want a formal example.   " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/81> <http://schema.org/identifier> "318517853"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/81> <http://schema.org/startDate> "2018-04-27T19:08:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/81> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/81"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/81> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/82> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/82> <http://schema.org/creator> <https://api.github.com/users/Fak3> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/82> <http://schema.org/description> "```python\r\nprint(jsonld.compact(\r\n    {'name': 'Bob'}, \r\n    {\"@vocab\": \"http://example.org#\"}\r\n))\r\n```\r\nI would expect this to return\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"http://example.org#\"\r\n  },\r\n  \"name\": \"Bob\"\r\n}\r\n```\r\nBut instead i got just context:\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"http://example.org#\"\r\n  }\r\n}\r\n```\r\n\r\nI checked https://json-ld.org/playground/ - it handles this case correctly." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/82> <http://schema.org/identifier> "330978641"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/82> <http://schema.org/startDate> "2018-06-10T15:38:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/82> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/82"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/82> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/83> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/83> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400026507> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/83> <http://schema.org/creator> <https://api.github.com/users/Fak3> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/83> <http://schema.org/description> "```python\r\nfrom pprint import pprint\r\nctx = {'@vocab': 'http://ex.org/#', 'path': {'@type': '@id'}}\r\ndata = {\r\n    'http://ex.org/#maxCount': 1,\r\n    'http://ex.org/#path': 'http://ex.org/#shortname'\r\n}\r\npprint(jsonld.compact(data, ctx))\r\n# {\r\n#   '@context': {'@vocab': 'http://ex.org/#', 'path': {'@type': '@id'}},\r\n#    # NOTE: maxCount: not declared in context => compacted OK\r\n#   'maxCount': 1\r\n#    # NOTE: path: declared in context => compacting FAILED\r\n#   'http://ex.org/#path': 'http://ex.org/#shortname',\r\n# }\r\n\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/83> <http://schema.org/identifier> "335206186"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/83> <http://schema.org/startDate> "2018-06-24T19:47:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/83> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/83"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/83> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/84> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/84> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400369867> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/84> <http://schema.org/creator> <https://api.github.com/users/Fak3> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/84> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/84> <http://schema.org/endDate> "2018-06-26T16:09:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/84> <http://schema.org/identifier> "335811052"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/84> <http://schema.org/startDate> "2018-06-26T13:08:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/84> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/84"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/84> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/85> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/85> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/85> <http://schema.org/description> "Adapt changes from jsonld.js:\r\nhttps://github.com/digitalbazaar/jsonld.js/pull/259" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/85> <http://schema.org/identifier> "351360365"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/85> <http://schema.org/startDate> "2018-08-16T20:40:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/85> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/85"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/85> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/86> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/86> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446305074> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/86> <http://schema.org/creator> <https://api.github.com/users/apeters> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/86> <http://schema.org/description> "For example this nquad line will fail to parse\r\n```\r\n'<http://www.test.org> <http://purl.org/dc/terms/identifier> \"http://www.test.org/id1\"@en-US <http://test.org/test> .'\r\n```\r\n\r\nnotice the use of `@en-US` \r\nthe line will parse just fine if `@en-us` is used\r\n\r\ngenerally, it seems that the region subtag (the `US` part) is usually displayed as uppercase.\r\nsee: https://www.w3.org/International/articles/language-tags/#region\r\n\r\nBut more importantly, the case of the entire language tag should be ignored (at least as far as parsing is concerned).\r\n\r\nPer: https://tools.ietf.org/html/rfc5646#section-2.1.1\r\n```\r\n At all times, language tags and their subtags, including private use\r\n and extensions, are to be treated as case insensitive: there exist\r\n conventions for the capitalization of some of the subtags, but these\r\n MUST NOT be taken to carry meaning.\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/86> <http://schema.org/endDate> "2018-12-11T18:16:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/86> <http://schema.org/identifier> "352806971"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/86> <http://schema.org/startDate> "2018-08-22T05:21:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/86> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/86"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/86> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/87> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/87> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446290011> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/87> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446297679> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/87> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446303403> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/87> <http://schema.org/creator> <https://api.github.com/users/apeters> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/87> <http://schema.org/description> "re #86" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/87> <http://schema.org/endDate> "2018-12-11T17:55:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/87> <http://schema.org/identifier> "352810277"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/87> <http://schema.org/startDate> "2018-08-22T05:41:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/87> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/87"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/87> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/88> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/88> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/88> <http://schema.org/description> "\r\n**Summary:**\r\n\r\nWhen processing scoped contexts, PyLD errors when a remote context has already been seen at a higher scope, when this is not an error in JSON-LD 1.1.\r\nSee: https://github.com/w3c/json-ld-api/issues/14#issuecomment-432695248\r\nAnd playground link demonstrating it working in Javascript: http://tinyurl.com/yayh6e74\r\n\r\n**Current Behavior:**\r\n\r\nExhibited in: https://raw.githubusercontent.com/w3c/json-ld-api/recursive-test/tests/recursive/process.py\r\n\r\nWhen context A refers to context B within a scope, and context B refers to context A in a scope, then processing terminates with the error:\r\n```\r\nType: jsonld.ExpandError\r\nCause: ('Cyclical @context URLs detected.',)\r\n```\r\nThese are not actually cyclical, as the scoping behaves as if the `@context` definition was inline in the instance data.\r\n\r\n**Expected Behavior:**\r\n\r\nThe scoped contexts should be processed without the Cyclical error.\r\n\r\n**Test Data:**\r\n\r\n* Instance: https://raw.githubusercontent.com/w3c/json-ld-api/recursive-test/tests/recursive/manifest-1.json\r\n* Context A: https://rawgit.com/w3c/json-ld-api/recursive-test/tests/recursive/presentation.json\r\n* Context B: https://raw.githubusercontent.com/w3c/json-ld-api/recursive-test/tests/recursive/image.json \r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/88> <http://schema.org/identifier> "373547007"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/88> <http://schema.org/startDate> "2018-10-24T15:38:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/88> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/88"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/88> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/89> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/89> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/89> <http://schema.org/description> "Can this library be used from the CLI, for example to convert a file from XML to JSON-LD?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/89> <http://schema.org/identifier> "379027766"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/89> <http://schema.org/startDate> "2018-11-09T05:24:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/89> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/89"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/89> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/8> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/8> <http://schema.org/creator> <https://api.github.com/users/jmandel> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/8> <http://schema.org/description> "I'm looking to populate an RDF graph from a JSON-LD source, and needed a triples() method as per the JSON-LD Spec.  I just translated the triples method from jsonld.js, and it seems to work fine.\n\nPlease feel free to use this commit or something like it!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/8> <http://schema.org/endDate> "2011-09-19T20:39:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/8> <http://schema.org/identifier> "1627016"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/8> <http://schema.org/startDate> "2011-09-12T19:28:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/8> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/8"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/8> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/90> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/90> <http://schema.org/creator> <https://api.github.com/users/satra> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/90> <http://schema.org/description> "in the example below, i'm trying to change the graph into an index by node type. but the current pyld processor doesn't appear to do so:\r\n\r\n```\r\n{\r\n  \"@context\": [\r\n    {\r\n      \"@version\": 1.1,\r\n      \"schema\": \"https://schema.org/\",\r\n      \"records\": {\r\n        \"@id\": \"@graph\",\r\n        \"@container\": \"@type\"\r\n      }\r\n    },\r\n    \"https://openprovenance.org/prov.jsonld\",\r\n    {\r\n      \"pydra\": \"https://s.pydra.org/\",\r\n      \"uuid\": \"pydra:uuid/\",\r\n      \"task\": {\r\n        \"@id\": \"prov:activity\",\r\n        \"@type\": \"@vocab\"\r\n      },\r\n      \"monitor\": {\r\n        \"@id\": \"prov:activity\",\r\n        \"@type\": \"@vocab\"\r\n      },\r\n      \"runtime\": {\r\n        \"@id\": \"prov:entity\",\r\n        \"@type\": \"@vocab\"\r\n      },\r\n      \"prov:wasGeneratedBy\": {\r\n        \"@id\": \"prov:wasGeneratedBy\",\r\n        \"@type\": \"@vocab\"\r\n      },\r\n      \"rss_peak_gb\": {\r\n        \"@id\": \"pydra:rss_peak_gb\",\r\n        \"@type\": \"xsd:float\"\r\n      },\r\n      \"vms_peak_gb\": {\r\n        \"@id\": \"pydra:vms_peak_gb\",\r\n        \"@type\": \"xsd:float\"\r\n      },\r\n      \"cpu_peak_percent\": {\r\n        \"@id\": \"pydra:cpu_peak_percent\",\r\n        \"@type\": \"xsd:float\"\r\n      }\r\n    }\r\n  ],\r\n  \"@graph\": [\r\n    {\r\n      \"@id\": \"uuid:589d99d613484aba8c360b72b7c3415f\",\r\n      \"@type\": \"activity\",\r\n      \"endedAtTime\": \"2018-12-09T06:01:42.166760\",\r\n      \"startedAtTime\": \"2018-12-09T06:01:41.926344\"\r\n    },\r\n    {\r\n      \"@id\": \"uuid:6d86eec440344c8ebc5a84dd7230494b\",\r\n      \"@type\": \"entity\",\r\n      \"prov:wasGeneratedBy\": \"uuid:9b0f825246554e57a1646f647c3fec4c\",\r\n      \"cpu_peak_percent\": \"1.017E2\",\r\n      \"rss_peak_gb\": \"2.693176269531250E-02\",\r\n      \"vms_peak_gb\": \"4.11656951953125E0\"\r\n    },\r\n    {\r\n      \"@id\": \"uuid:9b0f825246554e57a1646f647c3fec4c\",\r\n      \"@type\": \"activity\",\r\n      \"endedAtTime\": \"2018-12-09T06:01:42.165476\",\r\n      \"startedAtTime\": \"2018-12-09T06:01:42.151908\"\r\n    }\r\n  ],\r\n  \"@id\": \"uuid:e64db211f6f8421989d32b2f99e93df0\"\r\n}\r\n```\r\n\r\nwas expecting the output to look like:\r\n```\r\n...\r\n  \"records\": {\r\n    \"activity\": [\r\n      {\r\n        \"@id\": \"uuid:589d99d613484aba8c360b72b7c3415f\"\r\n      \"endedAtTime\": \"2018-12-09T06:01:42.166760\",\r\n      \"startedAtTime\": \"2018-12-09T06:01:41.926344\"\r\n      },\r\n      {\r\n        \"@id\": \"uuid:9b0f825246554e57a1646f647c3fec4c\",\r\n      \"endedAtTime\": \"2018-12-09T06:01:42.165476\",\r\n      \"startedAtTime\": \"2018-12-09T06:01:42.151908\"\r\n      }\r\n    ],\r\n    \"entity\": {\r\n      \"@id\": \"uuid:6d86eec440344c8ebc5a84dd7230494b\",\r\n      \"cpu_peak_percent\": \"1.017E2\",\r\n      \"rss_peak_gb\": \"2.693176269531250E-02\",\r\n      \"vms_peak_gb\": \"4.11656951953125E0\",\r\n      \"prov:wasGeneratedBy\": \"uuid:9b0f825246554e57a1646f647c3fec4c\"\r\n    }\r\n  },\r\n  \"@id\": \"uuid:e64db211f6f8421989d32b2f99e93df0\"\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/90> <http://schema.org/identifier> "388991525"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/90> <http://schema.org/startDate> "2018-12-09T06:14:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/90> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/90"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/90> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/91> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/91> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/454954519> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/91> <http://schema.org/creator> <https://api.github.com/users/ProgVal> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/91> <http://schema.org/description> "Hi,\r\n\r\nI noticed the following error in PyLD 1.0.3:\r\n\r\n```\r\n$ python3\r\nPython 3.5.3 (default, Sep 27 2018, 17:25:39)\r\n[GCC 6.3.0 20170516] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from pyld import jsonld\r\n>>> jsonld.compact({'http://schema.org/codeRepository': {'@id': 'http:'}}, {})\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/dev/.local/lib/python3.5/site-packages/pyld/jsonld.py\", line 145, in compact\r\n    return JsonLdProcessor().compact(input_, ctx, options)\r\n  File \"/home/dev/.local/lib/python3.5/site-packages/pyld/jsonld.py\", line 693, in compact\r\n    compacted = self._compact(active_ctx, None, expanded, options)\r\n  File \"/home/dev/.local/lib/python3.5/site-packages/pyld/jsonld.py\", line 1694, in _compact\r\n    e = self._compact(active_ctx, active_property, e, options)\r\n  File \"/home/dev/.local/lib/python3.5/site-packages/pyld/jsonld.py\", line 1895, in _compact\r\n    inner_ if (is_list or is_graph) else expanded_item, options)\r\n  File \"/home/dev/.local/lib/python3.5/site-packages/pyld/jsonld.py\", line 1726, in _compact\r\n    active_ctx, active_property, element)\r\n  File \"/home/dev/.local/lib/python3.5/site-packages/pyld/jsonld.py\", line 4271, in _compact_value\r\n    active_ctx, value['@id'], vocab=(type_ == '@vocab'))\r\n  File \"/home/dev/.local/lib/python3.5/site-packages/pyld/jsonld.py\", line 4190, in _compact_iri\r\n    return remove_base(active_ctx['@base'], iri)\r\n  File \"/home/dev/.local/lib/python3.5/site-packages/pyld/jsonld.py\", line 506, in remove_base\r\n    rel = parse_url(iri)\r\n  File \"/home/dev/.local/lib/python3.5/site-packages/pyld/jsonld.py\", line 594, in parse_url\r\n    (g[0] == 'http' and g[1].endswith(':80'))):\r\nAttributeError: 'NoneType' object has no attribute 'endswith'\r\n```\r\n\r\nIs it expected for PyLD to raise an exception on this kind of (possibly invalid) input?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/91> <http://schema.org/identifier> "399907097"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/91> <http://schema.org/startDate> "2019-01-16T17:04:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/91> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/91"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/91> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/92> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/92> <http://schema.org/creator> <https://api.github.com/users/reece> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/92> <http://schema.org/description> "The `jsonld.compact()` example in README.rst raises an exception during json decoding. \r\n\r\nIf this example was intended to be a template for how to call `compact()` (i.e., not a working example), then perhaps clarification is warranted. (I'm new to json-ld and pyld, so I didn't know what to expect.)\r\n\r\n\r\nReproduction below:\r\n\r\n```\r\nsnafu$ python3 -m venv pyld\r\n\r\nsnafu$ source pyld/bin/activate\r\n\r\n(pyld) snafu$ python --version\r\nPython 3.6.7\r\n\r\n(pyld) snafu$ pip install pyld[requests]\r\n[...]\r\nSuccessfully installed pyld-1.0.4\r\n\r\n(pyld) snafu$ pip freeze\r\ncertifi==2018.11.29\r\nchardet==3.0.4\r\nidna==2.8\r\npkg-resources==0.0.0\r\nPyLD==1.0.4\r\nrequests==2.21.0\r\nurllib3==1.24.1\r\n\r\n(pyld) snafu$ python\r\nPython 3.6.7 (default, Oct 22 2018, 11:32:17) \r\n[GCC 8.2.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from pyld import jsonld\r\n>>> jsonld.compact('https://example.org/doc', 'https://example.org/context')\r\nTraceback (most recent call last):\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/pyld/documentloader/requests.py\", line 68, in loader\r\n    'document': response.json()\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/requests/models.py\", line 897, in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n  File \"/usr/lib/python3.6/json/__init__.py\", line 354, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/usr/lib/python3.6/json/decoder.py\", line 339, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/usr/lib/python3.6/json/decoder.py\", line 357, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/pyld/jsonld.py\", line 677, in compact\r\n    expanded = self.expand(input_, options)\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/pyld/jsonld.py\", line 775, in expand\r\n    remote_doc = options['documentLoader'](input_)\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/pyld/documentloader/requests.py\", line 92, in loader\r\n    cause=cause)\r\npyld.jsonld.JsonLdError: ('Could not retrieve a JSON-LD document from the URL.',)\r\nType: jsonld.LoadDocumentError\r\nCode: loading document failed\r\nCause: Expecting value: line 1 column 1 (char 0)  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/pyld/documentloader/requests.py\", line 68, in loader\r\n    'document': response.json()\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/requests/models.py\", line 897, in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n  File \"/usr/lib/python3.6/json/__init__.py\", line 354, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/usr/lib/python3.6/json/decoder.py\", line 339, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/usr/lib/python3.6/json/decoder.py\", line 357, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/pyld/jsonld.py\", line 145, in compact\r\n    return JsonLdProcessor().compact(input_, ctx, options)\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/pyld/jsonld.py\", line 681, in compact\r\n    'jsonld.CompactError', cause=cause)\r\npyld.jsonld.JsonLdError: ('Could not expand input before compaction.',)\r\nType: jsonld.CompactError\r\nCause: ('Could not retrieve a JSON-LD document from the URL.',)\r\nType: jsonld.LoadDocumentError\r\nCode: loading document failed\r\nCause: Expecting value: line 1 column 1 (char 0)  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/pyld/documentloader/requests.py\", line 68, in loader\r\n    'document': response.json()\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/requests/models.py\", line 897, in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n  File \"/usr/lib/python3.6/json/__init__.py\", line 354, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/usr/lib/python3.6/json/decoder.py\", line 339, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/usr/lib/python3.6/json/decoder.py\", line 357, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/pyld/jsonld.py\", line 677, in compact\r\n    expanded = self.expand(input_, options)\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/pyld/jsonld.py\", line 775, in expand\r\n    remote_doc = options['documentLoader'](input_)\r\n  File \"/home/reece/projects/biocommons/pyld/lib/python3.6/site-packages/pyld/documentloader/requests.py\", line 92, in loader\r\n    cause=cause)\r\n\r\n>>> \r\n\r\n```\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/92> <http://schema.org/identifier> "403474830"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/92> <http://schema.org/startDate> "2019-01-26T19:36:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/92> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/92"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/92> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/93> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/93> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491013855> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/93> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491024739> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/93> <http://schema.org/creator> <https://api.github.com/users/jevans97utk> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/93> <http://schema.org/description> "Many more tests fail when running the normalization test suite on Python\r\n3.7 than on 2.7, 3.5, or 3.6.  The reason is PEP 479, which introduces a\r\nchange in behavior when raising StopIteration inside a generator.  The\r\nnew behavior is to silently turn this into a RuntimeError.\r\n\r\nThe PEP also states the way to deal with this, i.e.\r\n\r\n    Finally, the proposal also clears up the confusion about how\r\n    to terminate a generator: the proper way is return, not raise\r\n    StopIteration." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/93> <http://schema.org/endDate> "2019-05-09T18:42:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/93> <http://schema.org/identifier> "442355446"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/93> <http://schema.org/startDate> "2019-05-09T17:47:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/93> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/93"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/93> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/94> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/94> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/94> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/94> <http://schema.org/endDate> "2019-05-09T18:16:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/94> <http://schema.org/identifier> "442366734"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/94> <http://schema.org/startDate> "2019-05-09T18:16:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/94> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/94"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/94> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/95> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/95> <http://schema.org/creator> <https://api.github.com/users/tisdall> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/95> <http://schema.org/description> "I'm still trying to understand many aspects of JSON-LD so I apologize for my ignorance...\r\n\r\nI'm trying to restructure JSON-LD documents to simplify processing and have chosen to use `frame`.  I noticed that when I use it that it uses `request` to make calls to fetch https://schema.org/docs/jsonldcontext.jsonld (and it does it twice and seems to be redirected to that from http://schema.org/ which is the @context for the 2 objects).  Why does it need to fetch that file to do the framing?  Also, is there a way to prevent the call by providing my own context or something else?\r\n\r\nThe frame I'm using is simply `{}`.  I found #70 and #85 so I suppose I'll just define my own method to use a local copy, but I'd still like to understand " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/95> <http://schema.org/identifier> "450414361"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/95> <http://schema.org/startDate> "2019-05-30T17:16:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/95> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/95"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/95> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/96> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/96> <http://schema.org/creator> <https://api.github.com/users/tisdall> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/96> <http://schema.org/description> "The exception goes away if I either remove the `@id` or the `url` in the `ListItem`.  I'm new to this so maybe the format is wrong, but it seems like pyld should raise a `JsonLdError` if that were the case and not a `KeyError`.\r\n\r\nI'm running pyld 1.0.5 on Python 2.7.15 .\r\n\r\n```python\r\nfrom pyld import jsonld\r\nx = jsonld.frame(\r\n  {\r\n    \"@context\": \"http://schema.org\",\r\n    \"@graph\": [\r\n      {\r\n        \"@type\": \"BreadcrumbList\",\r\n        \"itemListElement\": [\r\n          {\r\n            \"@type\": \"ListItem\",\r\n            \"item\": {\r\n              \"@id\": \"https://example.com/\",\r\n              \"@type\": \"WebPage\",\r\n              \"url\": \"https://example.com/\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {}\r\n)\r\n```\r\nOutput:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 15, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 201, in frame\r\n    return JsonLdProcessor().frame(input_, frame, options)\r\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 982, in frame\r\n    framed = self._frame(expanded, expanded_frame, options)\r\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 2545, in _frame\r\n    state, sorted(state['subjects'].keys()), frame, framed, None)\r\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 3516, in _match_frame\r\n    state, [o['@id']], subframe, output, prop)\r\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 3516, in _match_frame\r\n    state, [o['@id']], subframe, output, prop)\r\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 3434, in _match_frame\r\n    self._remove_embed(state, id_)\r\n  File \"/usr/local/lib/python2.7/site-packages/pyld/jsonld.py\", line 3784, in _remove_embed\r\n    use_array = _is_array(embed['parent'][property])\r\nKeyError: u'http://schema.org/item'\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/96> <http://schema.org/identifier> "450848019"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/96> <http://schema.org/startDate> "2019-05-31T15:12:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/96> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/96"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/96> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/97> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/97> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/528456295> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/97> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/97> <http://schema.org/description> "https://github.com/RDFLIB/rdflib-jsonld/issues/68 has issued a call for maintainers of the rdflib-jsonld library.  @gkellogg, @dlongley, @davidlehn, @BigBlueHat  -- any suggestions on how to proceed?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/97> <http://schema.org/identifier> "489816472"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/97> <http://schema.org/startDate> "2019-09-05T14:51:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/97> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/97"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/97> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/98> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/98> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596010365> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/98> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596031979> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/98> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/98> <http://schema.org/description> "Work in progress, mostly functional at skipping hundreds of newer tests.\r\n- [x] Fix normalization test skipping to skip failing tests.\r\n- [ ] Port over jsonld.js test runner logic fixes." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/98> <http://schema.org/endDate> "2020-03-07T01:54:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/98> <http://schema.org/identifier> "497290286"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/98> <http://schema.org/startDate> "2019-09-23T19:42:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/98> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/98"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/98> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/99> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/99> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/535983448> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/99> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/536012509> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/99> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613841052> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/99> <http://schema.org/creator> <https://api.github.com/users/amarts> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/99> <http://schema.org/description> "I was trying to run sign/verify on the same jsonld samples from https://github.com/digitalbazaar/vc-demo/blob/master/credentials/alumni.jsonld in python.\r\n\r\nWhile trying to run jsonld.normalize() I am getting errors. \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/amar/work/test/certapp-test/jsonld.py\", line 1134, in to_rdf\r\n    expanded = self.expand(input_, options)\r\n  File \"/home/amar/work/test/certapp-test/jsonld.py\", line 835, in expand\r\n    expanded = self._expand(active_ctx, None, document, options, False)\r\n  File \"/home/amar/work/test/certapp-test/jsonld.py\", line 2090, in _expand\r\n    active_ctx, element['@context'], options)\r\n  File \"/home/amar/work/test/certapp-test/jsonld.py\", line 2833, in _process_context\r\n    self._create_term_definition(rval, ctx, k, defined)\r\n  File \"/home/amar/work/test/certapp-test/jsonld.py\", line 4345, in _create_term_definition\r\n    {'context': local_ctx}, code='invalid term definition')\r\njsonld.JsonLdError: ('Invalid JSON-LD syntax; @context property values must be strings or objects.',)\r\nType: jsonld.SyntaxError\r\nCode: invalid term definition\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/99> <http://schema.org/identifier> "499489279"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/99> <http://schema.org/startDate> "2019-09-27T14:47:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/99> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/99"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/99> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/9> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/9> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2137513> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/9> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2174485> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/9> <http://example.com/ns#comments> <https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2180858> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/9> <http://schema.org/creator> <https://api.github.com/users/jmandel> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/9> <http://schema.org/description> "omitOn was referenced before it was assigned a value (line 1637).    This fix follows the JSON-LD spec section 6.10.2 by assigning an initial value to omitOn (cleared; then overridden by options if any are provided).\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/9> <http://schema.org/endDate> "2011-09-23T17:26:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/9> <http://schema.org/identifier> "1628096"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/9> <http://schema.org/startDate> "2011-09-12T21:23:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/9> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/9"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/9> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/101670612> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/101670612> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/101670612> <http://schema.org/description> "Thanks @kal!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/101670612> <http://schema.org/identifier> "101670612"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/101670612> <http://schema.org/startDate> "2015-05-13T13:54:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/101670612> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/41#issuecomment-101670612"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/10722716> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/10722716> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/10722716> <http://schema.org/description> "This was fixed in a rewrite a while back. Thanks!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/10722716> <http://schema.org/identifier> "10722716"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/10722716> <http://schema.org/startDate> "2012-11-26T16:42:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/10722716> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/5#issuecomment-10722716"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/112810350> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/112810350> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/112810350> <http://schema.org/description> "You're giving the playground different input. The input (`doc`) you're passing to pyld doesn't have a `@context`, so terms like `name` and `actor` get dropped during processing, as they are undefined. Make sure you're including the context, which looks like it should be `http://schema.org`, just like in your playground example:\n\n``` python\ndoc = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"Movie\",\n    \"actor\": [{\n        \"name\": \"Myers Clark\",\n        \"sameAs\": \"http://akas.imdb.com/name/nm2072773/\"\n    }, {\n        \"name\": \"Kimberly Ridgeway\",\n        \"sameAs\": \"http://akas.imdb.com/name/nm2064470/\"\n    }]\n}\n```\n\nThere may also be some misunderstanding over what `compact` does; as your input is already using the schema.org context and you're trying to compact it to that same context. The primary reason to use `compact` is to change an input document from one context to another (different one).\n\nIf your document is already using the `schema.org` context, there's generally no need to `compact` it to that same context. That isn't always the case (compaction can make some other minor changes to the output, as it may more effectively apply the context, eg: if you had some full URLs as properties it would compact them using the context), but it looks like it's unnecessary here.\n\nLooking at the output you said you want, it sounds like you actually want to do expansion, not compaction. Expansion will remove context from an input document. That output you pasted from the playground looks like it came from the expansion tab, not the compaction tab. In that case, make sure you've got `@context` on your input doc (like above) and call `jsonld.expand` instead. That should give you what you want.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/112810350> <http://schema.org/identifier> "112810350"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/112810350> <http://schema.org/startDate> "2015-06-17T13:57:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/112810350> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/42#issuecomment-112810350"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113264988> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113264988> <http://schema.org/creator> <https://api.github.com/users/wladston> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113264988> <http://schema.org/description> "Thanks a lot for the very detailed response. Now that I've slept over it, and with your help, I can finally understand why the program was outputting something different then what I was expecting.\n\nI've managed to make it work now.\n\nFor now, my interest was really only to check if the json-ld document is valid and if all properties I specify in the document are being correctly identified according to the context. An \"easy\" way to do this is to compact the file against its own context, and check if the resulting document is the same as the original one. Don't you agree?\n\nThanks once more,\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113264988> <http://schema.org/identifier> "113264988"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113264988> <http://schema.org/startDate> "2015-06-18T19:24:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113264988> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/42#issuecomment-113264988"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113285115> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113285115> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113285115> <http://schema.org/description> "> Thanks a lot for the very detailed response.\n\nSure!\n\n> An \"easy\" way to do this is to compact the file against its own context, and check if the resulting document is the same as the original one. Don't you agree?\n\nSure, that's probably an ok way to do a quick de facto validation.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113285115> <http://schema.org/identifier> "113285115"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113285115> <http://schema.org/startDate> "2015-06-18T20:50:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113285115> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/42#issuecomment-113285115"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113290304> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113290304> <http://schema.org/creator> <https://api.github.com/users/wladston> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113290304> <http://schema.org/description> ":thumbsup: :smile:\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113290304> <http://schema.org/identifier> "113290304"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113290304> <http://schema.org/startDate> "2015-06-18T21:07:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/113290304> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/42#issuecomment-113290304"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/13861196> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/13861196> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/13861196> <http://schema.org/description> "We're going to be updating pyld fairly soon to come in line with all of the spec changes made to JSON-LD. We'll look into this once the update is complete.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/13861196> <http://schema.org/identifier> "13861196"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/13861196> <http://schema.org/startDate> "2013-02-20T22:34:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/13861196> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/16#issuecomment-13861196"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141698183> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141698183> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141698183> <http://schema.org/description> "The inputs are different. The input you're providing to the playground includes an `@context` which allows the processor to interpret the data. The input you're providing to pyld doesn't have any `@context` so the processor drops the \"ical\" property (it has no mapping) and it interprets the other properties as full URIs with the \"ical\" scheme (not CURIEs) and keeps them.\n\nInstead, provide a context along with your input. You can do this either by injecting an `@context` property into the input, or you may use the `expandContext` option in the API:\n\n``` python\njsonld.compact(doc, context, {'expandContext': context});\n```\n\nNote that compaction is typically used to convert a document from one context to a different one, but here you're compacting to the same context. Depending on your use case, you may just be able to attach an `@context` property to the dictionary and be done. If you do really require some processing to be done, however, the above seems to be what you're looking for.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141698183> <http://schema.org/identifier> "141698183"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141698183> <http://schema.org/startDate> "2015-09-19T19:00:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141698183> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/43#issuecomment-141698183"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141755752> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141755752> <http://schema.org/creator> <https://api.github.com/users/mt-digital> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141755752> <http://schema.org/description> "Ok, thanks for your quick reply.  It's a little confusing for me, I was expecting the second argument to `compact`, described as \"the JSON-LD context to compact with\" in the docstring, to be identical to the `@context` field of a JSON-LD document.  In other words, it's strange to me that one has to pass `context` twice to get the context to work like in the jsonld.org examples.  But then again I'm pretty ignorant of what common use cases of JSON-LD are, so maybe that's why it doesn't make sense to me.\n\nIn any case, this gives me something I can work with, thanks again!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141755752> <http://schema.org/identifier> "141755752"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141755752> <http://schema.org/startDate> "2015-09-20T07:38:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/141755752> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/43#issuecomment-141755752"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/16696208> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/16696208> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/16696208> <http://schema.org/description> "We haven't tested the `setup.py` code much if at all.  The \"playforms\" typo was clearly wrong though. Thanks for catching it.  If there are more problems with `setup.py` you can reopen this issue or create new ones.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/16696208> <http://schema.org/identifier> "16696208"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/16696208> <http://schema.org/startDate> "2013-04-20T00:50:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/16696208> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/18#issuecomment-16696208"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17704421> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17704421> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17704421> <http://schema.org/description> "Thank you for the PR! However, omitting literals in the graph position is actually intentional; the N-Quads note should be considered out-of-date. Literals are not supported in the named graph position by the RDF data model (see [RDF11-CONCEPTS](http://www.w3.org/TR/rdf11-concepts/#dfn-named-graph)). There's an ongoing debate over whether blank nodes are supported in that position and the [JSON-LD data model](http://json-ld.org/spec/latest/json-ld/#dfn-json-ld-data-model) (on which pyld is based) does support them.\n\nFor the above reasons, I'm going to close this issue; if there's a good reason you need support for this, it can be reopened to see if there's a workable solution.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17704421> <http://schema.org/identifier> "17704421"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17704421> <http://schema.org/startDate> "2013-05-10T05:02:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17704421> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/19#issuecomment-17704421"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17709234> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17709234> <http://schema.org/creator> <https://api.github.com/users/Kerrigan29a> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17709234> <http://schema.org/description> "I just had the problem translating n-Quads from an AllegroGraph. In fact these contexts are not literals, because they are not surrounded by quotation marks. Maybe I'm missing something or I have a misconception (very probably because I'm very newbie in these topics)\n\nMaybe a comment explaining that issue in the code to give the users the chance to change by hand the regexp? I understand your point of view but a lot of times we (the users of this and other libraries) have to deal with not so standard data and spend a lot of hours trying to make it work for our projects, so a simple comment can save a lot of hours to other programmers.\n\nAnyway, thanks for your time.\n;-P\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17709234> <http://schema.org/identifier> "17709234"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17709234> <http://schema.org/startDate> "2013-05-10T08:17:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17709234> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/19#issuecomment-17709234"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17723322> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17723322> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17723322> <http://schema.org/description> "@Kerrigan29a, I added a comment about it in the source. However, I'm a bit reluctant to put the above line in the comment because it wouldn't sufficiently solve the problem for people that need to parse literals. The code below that point assumes that the graph will not be a literal and does no extra parsing (as it does for the object position) to properly handle the individual parts of the literal (value, type/language). So the solution for parsing literals in that position is a bit more complicated. Furthermore, other code may be effected because it always assumes that graph names are strictly _not_ literals -- so some other checks would be needed there as well for this special case.\n\nI did a quick search on AllegroGraph to see if there was any insight into what's going on with their data in the \"context\" position. It seems like data that is in the default graph may be expressed using a proprietary syntax (no angled brackets but is supposed to be a URI, however, your example \"default-graph4294967295\" doesn't look like one):\n\n**context**\nCan be passed zero or more times. Sets the graph name, or list of graph names, that will be used by this query (as in FROM). When no context is given, all graphs are used. The string null can be used to refer to the default graph of the store.\n\n**namedContext**\nAlso can be given multiple times. Behaves like context, except that the named graphs retain their names (as in FROM NAMED).\n\n**default-graph-uri**\nCan be passed any number of times. Works like context except that plain-URI values should be given, without wrapping < and > characters.\n\n**named-graph-uri**\nWorks like default-graph-uri, except that this specifies the named graphs to be used.\n\nhttp://www.franz.com/agraph/support/documentation/current/http-protocol.html\n\nHopefully that's helpful to you in some way.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17723322> <http://schema.org/identifier> "17723322"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17723322> <http://schema.org/startDate> "2013-05-10T14:30:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/17723322> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/19#issuecomment-17723322"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/182664801> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/182664801> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/182664801> <http://schema.org/description> "Thanks for the report.  Fixed and released 0.7.0.  Used `str(self.args)` which seems to be in line with what was there before.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/182664801> <http://schema.org/identifier> "182664801"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/182664801> <http://schema.org/startDate> "2016-02-11T01:09:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/182664801> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/45#issuecomment-182664801"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570477> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570477> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570477> <http://schema.org/description> "Thanks for the patch.  I modified things a bit and it's now uploaded: https://pypi.python.org/pypi/PyLD\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570477> <http://schema.org/identifier> "19570477"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570477> <http://schema.org/startDate> "2013-06-17T19:58:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570477> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/17#issuecomment-19570477"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570511> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570511> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570511> <http://schema.org/description> "Uploaded: https://pypi.python.org/pypi/PyLD\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570511> <http://schema.org/identifier> "19570511"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570511> <http://schema.org/startDate> "2013-06-17T19:59:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/19570511> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/16#issuecomment-19570511"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/1995644> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/1995644> <http://schema.org/creator> <https://api.github.com/users/timClicks> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/1995644> <http://schema.org/description> "The `LICENSE` file does indicate the new BSD license, even though the files have All Rights Reserved in them. \n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/1995644> <http://schema.org/identifier> "1995644"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/1995644> <http://schema.org/startDate> "2011-09-05T04:45:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/1995644> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/2#issuecomment-1995644"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2007676> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2007676> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2007676> <http://schema.org/description> "Merged your commit. Also added just the few public functions to **all** so it's more clear what APIs should be used.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2007676> <http://schema.org/identifier> "2007676"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2007676> <http://schema.org/startDate> "2011-09-06T00:34:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2007676> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/1#issuecomment-2007676"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20717373> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20717373> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20717373> <http://schema.org/description> "The code changes cause a crash when running against the JSON-LD test suite. This line needs to be fixed:\n\nhttps://github.com/ericpeden/pyld/blob/6a62eaa704d527690bf0c30698e8497031b18b0e/lib/pyld/jsonld.py#L3314\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20717373> <http://schema.org/identifier> "20717373"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20717373> <http://schema.org/startDate> "2013-07-10T01:56:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20717373> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/20#issuecomment-20717373"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20909712> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20909712> <http://schema.org/creator> <https://api.github.com/users/ericpeden> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20909712> <http://schema.org/description> "Embarrassing: I managed to miss the notes on running the test suite in the README. Thank you for pointing that out.\n\nI've fixed that bug, although now one of the compact tests--\"Round-trip relative URLs\"--is returning unexpected results on Python 2.6 (although it works fine in 2.7). I've tracked the problem down to `remove_base()`: `posixpath.relpath()` is returning different results depending on the Python version.\n\n```\n>>> import posixpath\n>>> posixpath.relpath('/foo', '/')\n```\n\nyields (the problematic) `../foo` on 2.6 and the (\"correct\") `/foo` on 2.7. This is tracked in Python [Issue5117](http://bugs.python.org/issue5117), but I'm not sure how best to workaround it here. Maybe 2.6 support isn't worth the trouble...\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20909712> <http://schema.org/identifier> "20909712"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20909712> <http://schema.org/startDate> "2013-07-12T23:22:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20909712> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/20#issuecomment-20909712"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20913409> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20913409> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20913409> <http://schema.org/description> "> Maybe 2.6 support isn't worth the trouble...\n\nThat's my vote. @davidlehn, @msporny?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20913409> <http://schema.org/identifier> "20913409"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20913409> <http://schema.org/startDate> "2013-07-13T02:37:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20913409> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/20#issuecomment-20913409"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20915265> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20915265> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20915265> <http://schema.org/description> "If there are people running 2.6 who run into this problem, then apply that patch. Otherwise, yeah, it seems 2.6 is a bit outdated and not worth the trouble.  FWIW, I wish we could drop all 2.x support and just do 3.x. :-)\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20915265> <http://schema.org/identifier> "20915265"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20915265> <http://schema.org/startDate> "2013-07-13T05:50:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20915265> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/20#issuecomment-20915265"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20999796> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20999796> <http://schema.org/creator> <https://api.github.com/users/ericpeden> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20999796> <http://schema.org/description> "Understood; I'll close this pull request.\n\nThanks for your patience!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20999796> <http://schema.org/identifier> "20999796"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20999796> <http://schema.org/startDate> "2013-07-15T20:07:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/20999796> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/20#issuecomment-20999796"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2137513> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2137513> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2137513> <http://schema.org/description> "The patch has two \"defualt\" typos.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2137513> <http://schema.org/identifier> "2137513"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2137513> <http://schema.org/startDate> "2011-09-19T19:35:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2137513> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/9#issuecomment-2137513"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2174485> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2174485> <http://schema.org/creator> <https://api.github.com/users/jmandel> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2174485> <http://schema.org/description> "typos fixed.  Thanks, David!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2174485> <http://schema.org/identifier> "2174485"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2174485> <http://schema.org/startDate> "2011-09-23T01:32:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2174485> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/9#issuecomment-2174485"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2180858> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2180858> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2180858> <http://schema.org/description> "Patches merged in since code is more correct than before but we obviously need tests that exercise these features and code paths.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2180858> <http://schema.org/identifier> "2180858"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2180858> <http://schema.org/startDate> "2011-09-23T17:28:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/2180858> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/9#issuecomment-2180858"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/218823116> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/218823116> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/218823116> <http://schema.org/description> "Thanks for the patch.  In the future please just squash code commits as appropriate and leave out the release process commits.  In this case it's fine since I'll just publish the package right away but would be harder to merge if other code was going to be released too.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/218823116> <http://schema.org/identifier> "218823116"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/218823116> <http://schema.org/startDate> "2016-05-12T17:11:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/218823116> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/46#issuecomment-218823116"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/21983221> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/21983221> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/21983221> <http://schema.org/description> "Would changing the frame to the following solve your problem?\n\n``` js\n{\n    \"@context\" : \"http://www.shared-canvas.org/ns/context.json\",\n    \"@type\": \"sc:Manifest\",\n    \"structures\": [\n        {\n            \"@type\":\"sc:Range\",\n            \"@embed\": true,\n            \"canvases\": [\n                {\n                    \"@embed\":false\n                }\n            ]\n        }\n    ]\n}\n```\n\nI didn't look too closely, but it looked incorrect/unnecessarry to be using \"@list\" in a frame. You also can't \"filter\" lists -- it changes the data, not just its structure.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/21983221> <http://schema.org/identifier> "21983221"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/21983221> <http://schema.org/startDate> "2013-08-02T02:34:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/21983221> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/21#issuecomment-21983221"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22021206> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22021206> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22021206> <http://schema.org/description> "No, I tried that.  The issue is that the object of the canvases predicate\nis an rdf:List, which has members that should not be embedded.\n\nI'll build a test case.\n\nRob\n\nOn Thu, Aug 1, 2013 at 8:34 PM, Dave Longley notifications@github.comwrote:\n\n> Would changing the frame to the following solve your problem?\n> \n> {\n>     \"@context\" : \"http://www.shared-canvas.org/ns/context.json\",\n>     \"@type\": \"sc:Manifest\",\n>     \"structures\": [\n>         {\n>             \"@type\":\"sc:Range\",\n>             \"@embed\": true,\n>             \"canvases\": [\n>                 {\n>                     \"@embed\":false\n>                 }\n>             ]\n>         }\n>     ]}\n> \n> I didn't look too closely, but it looked incorrect/unnecessarry to be\n> using \"@list https://github.com/list\" in a frame.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/digitalbazaar/pyld/issues/21#issuecomment-21983221\n> .\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22021206> <http://schema.org/identifier> "22021206"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22021206> <http://schema.org/startDate> "2013-08-02T17:34:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22021206> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/21#issuecomment-22021206"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22023488> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22023488> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22023488> <http://schema.org/description> "The frame, using the above style, is: \n  http://www.shared-canvas.org/ns/frame/manifest.json\n\nAn example instance is:\n  http://www.shared-canvas.org/ns/frame/metadata-eg.json\n\nAnd the script I use:\n  http://www.shared-canvas.org/ns/frame/framer.py\n\nWhen framing the instance, the Canvas objects get embedded into the \"structures\" block, and not in the \"sequences\" block even though the frame explicitly states otherwise.\n\nHope that helps, or at least illustrates the problem! :)\n\nRob\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22023488> <http://schema.org/identifier> "22023488"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22023488> <http://schema.org/startDate> "2013-08-02T18:13:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22023488> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/21#issuecomment-22023488"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22032175> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22032175> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22032175> <http://schema.org/description> "@azaroth42, I don't have much time to look further into this issue at the moment, unfortunately, but your fix seems like it implements the correct behavior so I've added it. I've got to update list processing, in general, in pyld to comply with recent changes to the spec before I can confirm that there aren't other side effects as a result of this change.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22032175> <http://schema.org/identifier> "22032175"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22032175> <http://schema.org/startDate> "2013-08-02T20:18:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22032175> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/21#issuecomment-22032175"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22036033> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22036033> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22036033> <http://schema.org/description> "Thanks Dave! Happy to help if there's anything else I can contribute.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22036033> <http://schema.org/identifier> "22036033"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22036033> <http://schema.org/startDate> "2013-08-02T21:10:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22036033> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/21#issuecomment-22036033"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22192883> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22192883> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22192883> <http://schema.org/description> "Hi @bollwyvl, thanks for the PR! We're a bit swamped at the moment, but we'll be looking into this when we can. We definitely agree with your testing comments.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22192883> <http://schema.org/identifier> "22192883"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22192883> <http://schema.org/startDate> "2013-08-06T16:41:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22192883> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/22#issuecomment-22192883"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22206077> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22206077> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22206077> <http://schema.org/description> "I added most of this patch with two changes:\n- 2.5 and 2.6 support got dropped since they are rather old at this point. It was decided to not bother with 2.6 support in #20 but patches would be accepted.\n- The buld image URL was switched to digitalbazaar/pyld.\n\nI'm not sure how to properly support both 2.x and 3.x. 2to3 has a handful of url\\* lib changes to jsonld.py. If someone wants to look into this, please do.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22206077> <http://schema.org/identifier> "22206077"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22206077> <http://schema.org/startDate> "2013-08-06T19:52:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22206077> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/22#issuecomment-22206077"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22224054> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22224054> <http://schema.org/creator> <https://api.github.com/users/bollwyvl> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22224054> <http://schema.org/description> "Understood. Glad to be of  whatever help i can. I'll see what kinds of\nthings i can nibble around the edges... the 3x stuff is not super high on\nmy list, but we have needed 2.6 in RHEL environments, so maybe I'll work on\nthat.\nOn Aug 6, 2013 1:13 PM, \"Dave Longley\" notifications@github.com wrote:\n\n> Hi @bollwyvl https://github.com/bollwyvl, thanks for the PR! We're a\n> bit swamped at the moment, but we'll be looking into this when we can. We\n> definitely agree with your testing comments.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/digitalbazaar/pyld/pull/22#issuecomment-22192883\n> .\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22224054> <http://schema.org/identifier> "22224054"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22224054> <http://schema.org/startDate> "2013-08-07T01:27:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22224054> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/22#issuecomment-22224054"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22264661> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22264661> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22264661> <http://schema.org/description> "If you can get 2.6 or 3.x support working that would be great. Bits of #20 may help for 2.6. @dlongley and I probably don't have time for 2.6 work but travis-ci is now emailing us on every 3.x failure so maybe we'll look into that. :-)\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22264661> <http://schema.org/identifier> "22264661"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22264661> <http://schema.org/startDate> "2013-08-07T16:36:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/22264661> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/22#issuecomment-22264661"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237908301> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237908301> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237908301> <http://schema.org/description> "The first parameter for `from_rdf` must be the N-quads string itself, not a name for a file containing N-quads.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237908301> <http://schema.org/identifier> "237908301"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237908301> <http://schema.org/startDate> "2016-08-05T17:14:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237908301> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/47#issuecomment-237908301"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911031> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911031> <http://schema.org/creator> <https://api.github.com/users/mih> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911031> <http://schema.org/description> "Arrgh, stupid me, docs indeed say:\n\n```\na serialized string of RDF...\n```\n\nBeing able to read is a clear advantage. Thanks for the swift response!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911031> <http://schema.org/identifier> "237911031"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911031> <http://schema.org/startDate> "2016-08-05T17:26:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911031> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/47#issuecomment-237911031"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911251> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911251> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911251> <http://schema.org/description> "Sure! :)\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911251> <http://schema.org/identifier> "237911251"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911251> <http://schema.org/startDate> "2016-08-05T17:27:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/237911251> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/47#issuecomment-237911251"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238680436> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238680436> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238680436> <http://schema.org/description> "Strange error.  Seems to work for me.  Maybe some cache issue?  Does it work in a fresh virtualenv?\n\n```\n/$ mkdir /tmp/venv\n/$ cd /tmp/venv\n/tmp/venv$ virtualenv -p /usr/bin/python3.5 pyld\nRunning virtualenv with interpreter /usr/bin/python3.5\nUsing base prefix '/usr'\nNew python executable in /tmp/venv/pyld/bin/python3.5\nAlso creating executable in /tmp/venv/pyld/bin/python\nInstalling setuptools, pkg_resources, pip, wheel...done.\n/tmp/venv$ cd pyld/\n/tmp/venv/pyld$ source bin/activate\n(pyld) /tmp/venv/pyld$ python --version\nPython 3.5.2+\n(pyld) /tmp/venv/pyld$ pip --version\npip 8.1.2 from /tmp/venv/pyld/lib/python3.5/site-packages (python 3.5)\n(pyld) /tmp/venv/pyld$ pip install PyLD==0.7.1\nCollecting PyLD==0.7.1\nInstalling collected packages: PyLD\nSuccessfully installed PyLD-0.7.1\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238680436> <http://schema.org/identifier> "238680436"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238680436> <http://schema.org/startDate> "2016-08-09T20:28:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238680436> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/48#issuecomment-238680436"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238697889> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238697889> <http://schema.org/creator> <https://api.github.com/users/ViktorHaag> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238697889> <http://schema.org/description> "Nope using a fresh virtualenv doesn't work; my system environment is OSX 10.11.6 with Python 3.5.2_1 installed with homebrew. The problem has existed for some time, but as it was a packaging problem I just installed from source and waited. Here's my repro of your steps:\n\n```\n~/tmp :  virtualenv -p /usr/local/bin/python3.5 pyld\nRunning virtualenv with interpreter /usr/local/bin/python3.5\nUsing base prefix '/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5'\nNew python executable in /Users/vhaag/tmp/pyld/bin/python3.5\nAlso creating executable in /Users/vhaag/tmp/pyld/bin/python\nInstalling setuptools, pip, wheel...done.\n~/tmp :  cd pyld\n~/tmp/pyld :  source bin/activate\n(pyld) ~/tmp/pyld :  pip freeze\n(pyld) ~/tmp/pyld :  python --version\nPython 3.5.2\n(pyld) ~/tmp/pyld :  pip --version\npip 8.1.2 from /Users/vhaag/tmp/pyld/lib/python3.5/site-packages (python 3.5)\n(pyld) ~/tmp/pyld :  pip install PyLD\nCollecting PyLD\nInstalling collected packages: PyLD\nSuccessfully installed PyLD-0.7.0\n(pyld) ~/tmp/pyld :  pip uninstall PyLD\nUninstalling PyLD-0.7.0:\n  /Users/vhaag/tmp/pyld/lib/python3.5/site-packages/PyLD-0.7.0.dist-info/DESCRIPTION.rst\n  /Users/vhaag/tmp/pyld/lib/python3.5/site-packages/PyLD-0.7.0.dist-info/INSTALLER\n  /Users/vhaag/tmp/pyld/lib/python3.5/site-packages/PyLD-0.7.0.dist-info/METADATA\n  /Users/vhaag/tmp/pyld/lib/python3.5/site-packages/PyLD-0.7.0.dist-info/RECORD\n  /Users/vhaag/tmp/pyld/lib/python3.5/site-packages/PyLD-0.7.0.dist-info/WHEEL\n  /Users/vhaag/tmp/pyld/lib/python3.5/site-packages/PyLD-0.7.0.dist-info/metadata.json\n  /Users/vhaag/tmp/pyld/lib/python3.5/site-packages/PyLD-0.7.0.dist-info/top_level.txt\n  /Users/vhaag/tmp/pyld/lib/python3.5/site-packages/pyld/__init__.py\n  /Users/vhaag/tmp/pyld/lib/python3.5/site-packages/pyld/__pycache__/__init__.cpython-35.pyc\n  /Users/vhaag/tmp/pyld/lib/python3.5/site-packages/pyld/__pycache__/jsonld.cpython-35.pyc\n  /Users/vhaag/tmp/pyld/lib/python3.5/site-packages/pyld/jsonld.py\nProceed (y/n)? y\n  Successfully uninstalled PyLD-0.7.0\n(pyld) ~/tmp/pyld :  pip install PyLD==0.7.1\nCollecting PyLD==0.7.1\nInstalling collected packages: PyLD\nSuccessfully installed PyLD-0.7.0\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238697889> <http://schema.org/identifier> "238697889"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238697889> <http://schema.org/startDate> "2016-08-09T21:29:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238697889> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/48#issuecomment-238697889"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238700763> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238700763> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238700763> <http://schema.org/description> "Try checking output with `pip -vvv install pyld`.  It should list all the versions it finds, and let you know if it's using a cached copy.  If so you can add `--no-cache-dir` so it downloads the latest version.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238700763> <http://schema.org/identifier> "238700763"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238700763> <http://schema.org/startDate> "2016-08-09T21:41:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238700763> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/48#issuecomment-238700763"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238710930> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238710930> <http://schema.org/creator> <https://api.github.com/users/ViktorHaag> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238710930> <http://schema.org/description> "Yep. That did it. For some reason, it was unable to find a more recent version in its lookup sequence, so it used the pre-built wheel for 0.7.0 and moved on. The wheel was still there, I presume, after I installed with `-e`, hidden, under the source install.\n\nI did a `pip uninstall pyld` twice to clear out the source install and the history of the previous install, and then re-installed with `--no-cache-dir` and it installed fine.\n\nPackage managers shouldn't be this tricksy. 8/\n\nThanks for the assistance!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238710930> <http://schema.org/identifier> "238710930"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238710930> <http://schema.org/startDate> "2016-08-09T22:22:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/238710930> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/48#issuecomment-238710930"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/241025301> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/241025301> <http://schema.org/creator> <https://api.github.com/users/sohkai> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/241025301> <http://schema.org/description> "@davidlehn I came across this recently and was curious: is there a reason why it comes out as a list and not just a dict? Seems like a weird difference between PyLD and jsonld.js\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/241025301> <http://schema.org/identifier> "241025301"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/241025301> <http://schema.org/startDate> "2016-08-19T13:57:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/241025301> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/40#issuecomment-241025301"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531722> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531722> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531722> <http://schema.org/description> "Everything has been updated to comply with the latest spec and test-suite, closing now.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531722> <http://schema.org/identifier> "24531722"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531722> <http://schema.org/startDate> "2013-09-16T18:16:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531722> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/21#issuecomment-24531722"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531927> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531927> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531927> <http://schema.org/description> "I don't think this issue applies any more to the current code base, but if it does, it can be reopened.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531927> <http://schema.org/identifier> "24531927"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531927> <http://schema.org/startDate> "2013-09-16T18:18:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/24531927> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/6#issuecomment-24531927"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/248476999> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/248476999> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/248476999> <http://schema.org/description> "Closing as invalid. See @gkellogg's response here: https://lists.w3.org/Archives/Public/public-linked-json/2016Sep/0007.html\n\n(sorry for comment-less close)\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/248476999> <http://schema.org/identifier> "248476999"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/248476999> <http://schema.org/startDate> "2016-09-21T00:32:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/248476999> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/49#issuecomment-248476999"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25114817> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25114817> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25114817> <http://schema.org/description> "Uploaded 0.4.3.  Thanks for the nudge.  We'll try to upload to PyPI more frequently.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25114817> <http://schema.org/identifier> "25114817"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25114817> <http://schema.org/startDate> "2013-09-25T18:58:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25114817> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/23#issuecomment-25114817"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/253740386> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/253740386> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/253740386> <http://schema.org/description> "I know that some tests are failing, but they did fail (on my machine at least) on branch master as well, so I do not think that this is due to my patch...\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/253740386> <http://schema.org/identifier> "253740386"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/253740386> <http://schema.org/startDate> "2016-10-14T08:30:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/253740386> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/51#issuecomment-253740386"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/254126980> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/254126980> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/254126980> <http://schema.org/description> "@dlongley thanks for your comments on fe7eb47.\nFirst, let me just point out what I should have mentionned in the PR: this is just a quick proof of concept. I understand that the actual solution should be thought over more thouroughly.\n\nRegarding \"strict mode\", I agree that `processingMode`  is a good candidate for playing this role.\n\nRegarding dropped keys, I have indeed overlooked the fact that, with multiple contexts, a key may be converted in some places and dropped in others, so my fix is obviously not satisfactory. Storing the complete path would seem as a valid alternative, but looks harder to achieve in the current code.\n\nI still believe that having a \"strict\" mode (under this name or another one) would still be a benefit, even if we don't come up with a solution for reporting dropped keys in \"normal\" mode.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/254126980> <http://schema.org/identifier> "254126980"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/254126980> <http://schema.org/startDate> "2016-10-17T06:56:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/254126980> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/50#issuecomment-254126980"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639305> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639305> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639305> <http://schema.org/description> "Did you mean to write `jsond.get(\"@context\")`?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639305> <http://schema.org/identifier> "25639305"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639305> <http://schema.org/startDate> "2013-10-03T17:12:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639305> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/24#issuecomment-25639305"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639479> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639479> <http://schema.org/creator> <https://api.github.com/users/dpjanes> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639479> <http://schema.org/description> "Yes, sorry. It doesn't change the outcome though when I fix it.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639479> <http://schema.org/identifier> "25639479"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639479> <http://schema.org/startDate> "2013-10-03T17:14:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25639479> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/24#issuecomment-25639479"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25693396> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25693396> <http://schema.org/creator> <https://api.github.com/users/dpjanes> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25693396> <http://schema.org/description> "I just did a \"git update\" to the latest version and the issue still appears.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25693396> <http://schema.org/identifier> "25693396"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25693396> <http://schema.org/startDate> "2013-10-04T11:54:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25693396> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/24#issuecomment-25693396"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25695270> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25695270> <http://schema.org/creator> <https://api.github.com/users/dpjanes> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25695270> <http://schema.org/description> "Never mind. \"python setup.py install\" didn't update the library correctly. May be an issue on my end.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25695270> <http://schema.org/identifier> "25695270"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25695270> <http://schema.org/startDate> "2013-10-04T12:34:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25695270> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/24#issuecomment-25695270"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722631> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722631> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722631> <http://schema.org/description> "Does the latest fix address your issue? If so, I'll push out a new version with the fix.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722631> <http://schema.org/identifier> "25722631"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722631> <http://schema.org/startDate> "2013-10-04T19:01:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722631> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/25#issuecomment-25722631"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722907> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722907> <http://schema.org/creator> <https://api.github.com/users/dpjanes> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722907> <http://schema.org/description> "Cheers, yes fixed.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722907> <http://schema.org/identifier> "25722907"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722907> <http://schema.org/startDate> "2013-10-04T19:05:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25722907> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/25#issuecomment-25722907"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25724576> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25724576> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25724576> <http://schema.org/description> "Pushed 0.4.7.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25724576> <http://schema.org/identifier> "25724576"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25724576> <http://schema.org/startDate> "2013-10-04T19:32:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25724576> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/25#issuecomment-25724576"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25741790> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25741790> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25741790> <http://schema.org/description> "The result should follow the spec now (was also fixed in our JS and PHP versions).\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25741790> <http://schema.org/identifier> "25741790"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25741790> <http://schema.org/startDate> "2013-10-05T04:19:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25741790> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/26#issuecomment-25741790"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742798> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742798> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742798> <http://schema.org/description> "Is a new test case needed for this?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742798> <http://schema.org/identifier> "25742798"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742798> <http://schema.org/startDate> "2013-10-05T06:00:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742798> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/26#issuecomment-25742798"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742815> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742815> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742815> <http://schema.org/description> "Is a test case needed for this?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742815> <http://schema.org/identifier> "25742815"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742815> <http://schema.org/startDate> "2013-10-05T06:01:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25742815> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/25#issuecomment-25742815"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754288> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754288> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754288> <http://schema.org/description> "@davidlehn, yes, we should add one, but maybe after the test suite freeze. I don't know exactly what's going on with that.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754288> <http://schema.org/identifier> "25754288"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754288> <http://schema.org/startDate> "2013-10-05T18:39:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754288> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/26#issuecomment-25754288"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754309> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754309> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754309> <http://schema.org/description> "@davidlehn, we're freezing the test suite and copying it over to w3c space... not sure what's going with that. Certainly after that we can add it.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754309> <http://schema.org/identifier> "25754309"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754309> <http://schema.org/startDate> "2013-10-05T18:41:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/25754309> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/25#issuecomment-25754309"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258210641> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258210641> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258210641> <http://schema.org/description> "There should be a test that runs this code path to avoid regressions.  This was probably converted from js and there's never been a test run that didn't have the \"language\" key set.  Do you have minimal JSON-LD and expected output that causes this issue?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258210641> <http://schema.org/identifier> "258210641"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258210641> <http://schema.org/startDate> "2016-11-03T17:16:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258210641> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/52#issuecomment-258210641"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258214870> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258214870> <http://schema.org/creator> <https://api.github.com/users/rspeer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258214870> <http://schema.org/description> "Aha! I've noticed that this is a bug in my context file -- I declared a value as a `langString` when it's actually just a string. But the library should tell me that there's a problem with my context, instead of just crashing with a KeyError.\n\nMinimal example:\n\n``` python\n>>> example = {'@context': {'rdf': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#', 'text': {'@id': 'http://example.com/text', '@type': 'rdf:langString'}}, 'text': 'foo'}\n>>> jsonld.to_rdf(example, options={'format': 'application/nquads'})\nTraceback (most recent call last):\n  File \"<ipython-input-23-f64152bf1496>\", line 1, in <module>\n    jsonld.to_rdf(example, options={'format': 'application/nquads'})\n  File \"/home/rspeer/.virtualenvs/lum/lib/python3.5/site-packages/pyld/jsonld.py\", line 295, in to_rdf\n    return JsonLdProcessor().to_rdf(input_, options)\n  File \"/home/rspeer/.virtualenvs/lum/lib/python3.5/site-packages/pyld/jsonld.py\", line 1147, in to_rdf\n    return self.to_nquads(dataset)\n  File \"/home/rspeer/.virtualenvs/lum/lib/python3.5/site-packages/pyld/jsonld.py\", line 1562, in to_nquads\n    quads.append(JsonLdProcessor.to_nquad(triple, graph_name))\n  File \"/home/rspeer/.virtualenvs/lum/lib/python3.5/site-packages/pyld/jsonld.py\", line 1617, in to_nquad\n    if o['language']:\nKeyError: 'language'\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258214870> <http://schema.org/identifier> "258214870"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258214870> <http://schema.org/startDate> "2016-11-03T17:30:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/258214870> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/52#issuecomment-258214870"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259160530> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259160530> <http://schema.org/creator> <https://api.github.com/users/JoelBender> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259160530> <http://schema.org/description> "I believe that a stumbled over this, or maybe `@vocab` can be another way of \"not strict\".  I expected this document and context...\n\n```\n    doc = {\n        \"@context\": {\n            \"@base\": \"http://example.org/\",\n            \"@vocab\": \"http://schema.org/\",\n            },\n        \"@id\": \"12345\",\n        \"@type\": \"Blog\",\n        \"title\": \"This is a blog title\",\n        }\n    context = {\n        }\n```\n\nto generate the same set of triples as this one...\n\n```\n    doc = {\n        \"@id\": \"12345\",\n        \"@type\": \"Blog\",\n        \"title\": \"This is a blog title\",\n        }\n    context = {\n        \"@base\": \"http://example.org/\",\n        \"@vocab\": \"http://schema.org/\",\n        }\n```\n\nbut latter does not include the `title`.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259160530> <http://schema.org/identifier> "259160530"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259160530> <http://schema.org/startDate> "2016-11-08T15:05:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259160530> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/50#issuecomment-259160530"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259166066> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259166066> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259166066> <http://schema.org/description> "@JoelBender I just try your two examples, and I do get the same result...\n\n``` python\nfrom pyld.jsonld import expand\nfrom pprint import pprint\n\ndata_w_ctx = {\n    \"@context\": {\n        \"@base\": \"http://example.org/\",\n        \"@vocab\": \"http://schema.org/\",\n    },\n    \"@id\": \"12345\",\n    \"@type\": \"Blog\",\n    \"title\": \"This is a blog title\",\n}\n\npprint(expand(data_w_ctx, { \"expandContext\": {} }))\n\ndata_wo_ctx = {\n    \"@id\": \"12345\",\n    \"@type\": \"Blog\",\n    \"title\": \"This is a blog title\",\n}\n\nctx = data_w_ctx['@context']\n\npprint(expand(data_wo_ctx, { \"expandContext\": ctx }))\n```\n\n(both with the pypi and github version of PyLD)\n\nThat being said, you are right: one way to implement \"not strict\" would be to append an artificial `@vocab` as a fallback context...\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259166066> <http://schema.org/identifier> "259166066"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259166066> <http://schema.org/startDate> "2016-11-08T15:24:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259166066> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/50#issuecomment-259166066"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259183193> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259183193> <http://schema.org/creator> <https://api.github.com/users/JoelBender> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259183193> <http://schema.org/description> "@pchampin thank you, I misunderstood the options.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259183193> <http://schema.org/identifier> "259183193"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259183193> <http://schema.org/startDate> "2016-11-08T16:21:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/259183193> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/50#issuecomment-259183193"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290573746> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290573746> <http://schema.org/creator> <https://api.github.com/users/workergnome> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290573746> <http://schema.org/description> "@azaroth42 asked if I could doublecheck this with the ruby JSON-LD library, so here's a ruby version of this code:\r\n\r\n```ruby\r\nrequire \"linkeddata\"\r\n\r\nctxtjs = {\r\n  \"@context\" => {\r\n    \"ns\" => \"http://example.com/ns/\",\r\n    \"hasList\" => {\"@id\" => \"ns:hasList\", \"@type\" => \"@id\", \"@container\" => \"@list\"},\r\n    \"ref\" => {\"@id\" => \"ns:ref\", \"@type\" => \"@id\"}\r\n  } \r\n}\r\n\r\ndoc = {\r\n  \"@context\" => ctxtjs['@context'],\r\n  \"@id\" => \"http://top/1\",\r\n  \"@type\" => \"ns:A\",\r\n  \"hasList\" => [\r\n    {\r\n      \"@id\" => \"http://child/1\", \r\n      \"@type\" => \"ns:B\", \r\n      \"ref\" => \"ns:something\"\r\n    },\r\n    {\r\n      \"@id\" => \"http://child/2\", \r\n      \"@type\" => \"ns:B\", \r\n      \"ref\" => \"ns:something\"\r\n    }\r\n  ]\r\n}\r\n\r\nframejs = {\r\n  \"@context\" => ctxtjs['@context'],\r\n  \"@type\" => \"ns:A\",\r\n  \"hasList\" => [{\r\n    \"@type\" => \"ns:B\"\r\n  }]\r\n}\r\n\r\nresults =  JSON::LD::API.frame(doc, framejs)\r\nputs JSON.pretty_generate results\r\n```\r\n\r\nwhich returns\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"ns\": \"http://example.com/ns/\",\r\n    \"hasList\": {\r\n      \"@id\": \"ns:hasList\",\r\n      \"@type\": \"@id\",\r\n      \"@container\": \"@list\"\r\n    },\r\n    \"ref\": {\r\n      \"@id\": \"ns:ref\",\r\n      \"@type\": \"@id\"\r\n    }\r\n  },\r\n  \"@graph\": [\r\n    {\r\n      \"@id\": \"http://top/1\",\r\n      \"@type\": \"ns:A\",\r\n      \"hasList\": [\r\n        {\r\n          \"@id\": \"http://child/1\",\r\n          \"@type\": \"ns:B\",\r\n          \"ref\": \"ns:something\"\r\n        },\r\n        {\r\n          \"@id\": \"http://child/2\",\r\n          \"@type\": \"ns:B\",\r\n          \"ref\": \"ns:something\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nWhich is what is expected.  @gkellogg, can you double-check that I'm using this correctly?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290573746> <http://schema.org/identifier> "290573746"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290573746> <http://schema.org/startDate> "2017-03-30T23:28:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290573746> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/54#issuecomment-290573746"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290574092> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290574092> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290574092> <http://schema.org/description> "And in the playground:  http://tinyurl.com/kyf62gj\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290574092> <http://schema.org/identifier> "290574092"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290574092> <http://schema.org/startDate> "2017-03-30T23:30:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290574092> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/54#issuecomment-290574092"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290580628> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290580628> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290580628> <http://schema.org/description> "@workergnome, looks good to me." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290580628> <http://schema.org/identifier> "290580628"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290580628> <http://schema.org/startDate> "2017-03-31T00:15:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/290580628> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/54#issuecomment-290580628"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293958516> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293958516> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293958516> <http://schema.org/description> "Ping? We're blocked by this bug and would really prefer not to fork a new module to pypi." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293958516> <http://schema.org/identifier> "293958516"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293958516> <http://schema.org/startDate> "2017-04-13T16:51:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293958516> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/55#issuecomment-293958516"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293962288> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293962288> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293962288> <http://schema.org/description> "Thanks @davidlehn :)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293962288> <http://schema.org/identifier> "293962288"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293962288> <http://schema.org/startDate> "2017-04-13T17:06:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293962288> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/54#issuecomment-293962288"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293964312> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293964312> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293964312> <http://schema.org/description> "Released in 0.7.2." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293964312> <http://schema.org/identifier> "293964312"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293964312> <http://schema.org/startDate> "2017-04-13T17:14:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/293964312> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/55#issuecomment-293964312"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/312908630> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/312908630> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/312908630> <http://schema.org/description> "PyLD will eventually implement JSON-LD 1.1. We don't have a timeline yet for moving it forward, but PRs are always welcome if there's interest in speeding up the process." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/312908630> <http://schema.org/identifier> "312908630"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/312908630> <http://schema.org/startDate> "2017-07-04T15:47:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/312908630> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/58#issuecomment-312908630"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/320846875> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/320846875> <http://schema.org/creator> <https://api.github.com/users/gustavorps> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/320846875> <http://schema.org/description> "+1" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/320846875> <http://schema.org/identifier> "320846875"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/320846875> <http://schema.org/startDate> "2017-08-08T04:28:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/320846875> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/62#issuecomment-320846875"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329104285> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329104285> <http://schema.org/creator> <https://api.github.com/users/jkreft-usgs> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329104285> <http://schema.org/description> "This issue is also killing existing tests: https://travis-ci.org/digitalbazaar/pyld/jobs/274430690#L913" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329104285> <http://schema.org/identifier> "329104285"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329104285> <http://schema.org/startDate> "2017-09-13T09:00:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329104285> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/65#issuecomment-329104285"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329264706> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329264706> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329264706> <http://schema.org/description> "Thanks.  Sigh... I'm guessing no one had ever run that code before.  It was likely just ported from js without proper testing.\r\n\r\n0.7.3 released on PyPI." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329264706> <http://schema.org/identifier> "329264706"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329264706> <http://schema.org/startDate> "2017-09-13T18:59:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329264706> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/63#issuecomment-329264706"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329266417> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329266417> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329266417> <http://schema.org/description> "I doubt this feature has been tested.  Sorry about that.  The test suites need updates to check these newer features.  The code was probably ported from jsonld.js long ago.  Might be worth checking if it works in jsonld.js, and if so then compare the code to see what might have changed or not been ported properly." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329266417> <http://schema.org/identifier> "329266417"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329266417> <http://schema.org/startDate> "2017-09-13T19:06:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329266417> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/64#issuecomment-329266417"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329268246> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329268246> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329268246> <http://schema.org/description> "Yes, this code was written long ago.  Before SNI was popular I think.  I started digging into this and opened #57 but haven't had time to figure out the best more modern way to rework the code.  Ideally we'd update things while keeping as much support for older Pythons that makes sense.  If someone has the time to do this a PR would be great.  Dropping support for real old Pythons is likely fine.  Getting rid of the hard coded cert paths would be great if modern APIs work better than they used to." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329268246> <http://schema.org/identifier> "329268246"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329268246> <http://schema.org/startDate> "2017-09-13T19:13:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329268246> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/65#issuecomment-329268246"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329420576> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329420576> <http://schema.org/creator> <https://api.github.com/users/jkreft-usgs> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329420576> <http://schema.org/description> "I think that the simplest thing to do would be to add some dependancies, specifically requests for fetching and validators for url validation (could probably survive without validators), which would remove most of the  validation and fetching block and tackle. Requests also has the concept of pointing to a local cert store built in, though if that were to be supported in this library you would need to be able to pass it in as a variable (not that hard).  I have implemented a really hacky version of this already that works on my side that works around the problem, but there is a good bit of work before it is ready for a pull request." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329420576> <http://schema.org/identifier> "329420576"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329420576> <http://schema.org/startDate> "2017-09-14T09:04:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/329420576> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/65#issuecomment-329420576"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/330669987> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/330669987> <http://schema.org/creator> <https://api.github.com/users/bpow> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/330669987> <http://schema.org/description> "`jsonld.js` is able to handle this case-- the code relevant was ported but did not \"keep track\" of nodes when linking because empty dicts in python evaluate to False.\r\n\r\nI'm actually not sure how to write a test for this within the existing testing framework, since the framed result is not representable directly in json (so there is no way to write a `[test]-[test#]-out.jsonld` file as framing with '@embed' = '@link' is only intended to be used for an in-memory representation (from what I can tell)." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/330669987> <http://schema.org/identifier> "330669987"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/330669987> <http://schema.org/startDate> "2017-09-19T20:52:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/330669987> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/64#issuecomment-330669987"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335648776> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335648776> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335648776> <http://schema.org/description> "Addresses:\r\n- https://github.com/digitalbazaar/pyld/issues/57\r\n- https://github.com/digitalbazaar/pyld/issues/65" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335648776> <http://schema.org/identifier> "335648776"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335648776> <http://schema.org/startDate> "2017-10-11T00:47:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335648776> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/67#issuecomment-335648776"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335649387> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335649387> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335649387> <http://schema.org/description> "Switch to requests and some other fixes here: https://github.com/digitalbazaar/pyld/pull/67" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335649387> <http://schema.org/identifier> "335649387"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335649387> <http://schema.org/startDate> "2017-10-11T00:52:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335649387> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/65#issuecomment-335649387"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335809199> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335809199> <http://schema.org/creator> <https://api.github.com/users/jkreft-usgs> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335809199> <http://schema.org/description> "This is great, thanks so much for working on this problem." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335809199> <http://schema.org/identifier> "335809199"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335809199> <http://schema.org/startDate> "2017-10-11T13:28:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/335809199> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/65#issuecomment-335809199"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/337052472> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/337052472> <http://schema.org/creator> <https://api.github.com/users/Elizafox> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/337052472> <http://schema.org/description> "requests is quite a common dependency so I see no harm in depending on it." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/337052472> <http://schema.org/identifier> "337052472"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/337052472> <http://schema.org/startDate> "2017-10-16T21:43:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/337052472> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/67#issuecomment-337052472"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338291587> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338291587> <http://schema.org/creator> <https://api.github.com/users/jkreft-usgs> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338291587> <http://schema.org/description> "It would be pretty sweet if this PR could be merged and released soon.  I have several projects that could take advantage of pyld it right away." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338291587> <http://schema.org/identifier> "338291587"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338291587> <http://schema.org/startDate> "2017-10-20T18:47:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338291587> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/67#issuecomment-338291587"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338302684> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338302684> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338302684> <http://schema.org/description> "Ok, I'll merge and release. Please file issues for bugs or suggestions. We have been using jsonld.js much more than this lib lately so do appreciate feedback for things we may miss beyond what's in the test suite." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338302684> <http://schema.org/identifier> "338302684"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338302684> <http://schema.org/startDate> "2017-10-20T19:35:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338302684> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/67#issuecomment-338302684"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338978544> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338978544> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338978544> <http://schema.org/description> "yeap -- can only confirm that this release broke our @datalad CI setup all around\r\n```shell\r\n$> venvs-pyld/bin/pip install pyld                    \r\nCollecting pyld\r\n  Using cached PyLD-0.8.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-cxFBqw/pyld/setup.py\", line 17, in <module>\r\n        from pyld import jsonld\r\n      File \"/tmp/pip-build-cxFBqw/pyld/lib/pyld/__init__.py\", line 2, in <module>\r\n        from . import jsonld\r\n      File \"/tmp/pip-build-cxFBqw/pyld/lib/pyld/jsonld.py\", line 19, in <module>\r\n        import requests\r\n    ImportError: No module named requests\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-cxFBqw/pyld/\r\n```\r\nI would appreciate a quick bugfix release.  Thanks very much in advance, let me know if you need assistance" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338978544> <http://schema.org/identifier> "338978544"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338978544> <http://schema.org/startDate> "2017-10-24T12:49:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/338978544> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/68#issuecomment-338978544"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339012554> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339012554> <http://schema.org/creator> <https://api.github.com/users/kimdhamilton> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339012554> <http://schema.org/description> "This is affecting us as well: https://github.com/blockchain-certificates/cert-issuer/issues/71\r\n\r\nThis one is confusing, but the best I could tell is that the relative import was causing problems. I forked this repo, and changed to an absolute import:\r\n`from . import jsonld`\r\nchanged to\r\n`from pyld import jsonld`\r\n\r\nAnd publishing (not as pyld, don't worry) fixed my callers. (My commit has other details because I build differently; the only one that matters should be __init__.py)\r\nhttps://github.com/blockchain-certificates/pyld/commit/6d02c09d5c3ec4d67f268c1e7363324a41c2a536\r\n\r\nIf you guys expect to have a fix soon (today-ish) I'll wait. Otherwise, I'll use my forked version and patch it up when your fix is available.\r\n\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339012554> <http://schema.org/identifier> "339012554"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339012554> <http://schema.org/startDate> "2017-10-24T14:37:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339012554> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/68#issuecomment-339012554"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339046346> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339046346> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339046346> <http://schema.org/description> "Should be fixed in 0.8.1." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339046346> <http://schema.org/identifier> "339046346"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339046346> <http://schema.org/startDate> "2017-10-24T16:16:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339046346> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/30#issuecomment-339046346"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339047869> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339047869> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339047869> <http://schema.org/description> "Should be fixed in 0.8.1." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339047869> <http://schema.org/identifier> "339047869"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339047869> <http://schema.org/startDate> "2017-10-24T16:21:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339047869> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/68#issuecomment-339047869"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339049308> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339049308> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339049308> <http://schema.org/description> "Now using Requests lib which should resolve this issue on python 2.7+.  Closing." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339049308> <http://schema.org/identifier> "339049308"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339049308> <http://schema.org/startDate> "2017-10-24T16:26:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339049308> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/65#issuecomment-339049308"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339083366> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339083366> <http://schema.org/creator> <https://api.github.com/users/kimdhamilton> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339083366> <http://schema.org/description> "Confirmed in my minimal repro. https://travis-ci.org/kimdhamilton/pyld-test\r\n\r\nThanks @davidlehn!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339083366> <http://schema.org/identifier> "339083366"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339083366> <http://schema.org/startDate> "2017-10-24T18:17:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339083366> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/68#issuecomment-339083366"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339093650> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339093650> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339093650> <http://schema.org/description> "Thanks @davidlehn indeed!\r\nCheers" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339093650> <http://schema.org/identifier> "339093650"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339093650> <http://schema.org/startDate> "2017-10-24T18:51:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339093650> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/68#issuecomment-339093650"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339193989> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339193989> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339193989> <http://schema.org/description> "Ok.  I just released 0.8.2 that adds back the `load_document` API.  It just sets it to the default document loader, which is now based on requests.  I think since API is just `f(url)` it should work.  Please test and report if it works or not." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339193989> <http://schema.org/identifier> "339193989"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339193989> <http://schema.org/startDate> "2017-10-25T02:25:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339193989> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/69#issuecomment-339193989"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197196> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197196> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197196> <http://schema.org/description> "Seems (according to local tests, travis yet to run) to be all kosher again, thanks @davidlehn !  " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197196> <http://schema.org/identifier> "339197196"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197196> <http://schema.org/startDate> "2017-10-25T02:46:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197196> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/69#issuecomment-339197196"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197267> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197267> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197267> <http://schema.org/description> "Fixed in 9b3fb90" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197267> <http://schema.org/identifier> "339197267"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197267> <http://schema.org/startDate> "2017-10-25T02:47:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/339197267> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/69#issuecomment-339197267"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/348728895> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/348728895> <http://schema.org/creator> <https://api.github.com/users/origliante> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/348728895> <http://schema.org/description> "```\r\ncache = {}\r\ndef caching_document_loader(url):\r\n    loader = jsonld.requests_document_loader()\r\n    if url in cache:\r\n        return cache[url]\r\n    resp = loader(url)\r\n    cache[url] = resp\r\n    return resp\r\n\r\njsonld.set_document_loader(caching_document_loader)\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/348728895> <http://schema.org/identifier> "348728895"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/348728895> <http://schema.org/startDate> "2017-12-02T23:47:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/348728895> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/70#issuecomment-348728895"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359103064> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359103064> <http://schema.org/creator> <https://api.github.com/users/oohlaf> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359103064> <http://schema.org/description> "\r\nThis might be related to issue #53 " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359103064> <http://schema.org/identifier> "359103064"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359103064> <http://schema.org/startDate> "2018-01-19T22:08:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359103064> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/71#issuecomment-359103064"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359112642> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359112642> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359112642> <http://schema.org/description> "There are some recently added tests in the test suite that cover JSON-LD 1.0 behavior.  pyld hasn't been updated to deal with everything yet.  Effort right now is on the 1.1 spec and jsonld.js.  Once that's further along all the recent refactoring and updates in jsonld.js will move over to pyld.  If someone wants to fix this particular issue, then as always, patches are welcome." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359112642> <http://schema.org/identifier> "359112642"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359112642> <http://schema.org/startDate> "2018-01-19T22:54:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359112642> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/71#issuecomment-359112642"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359183088> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359183088> <http://schema.org/creator> <https://api.github.com/users/oohlaf> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359183088> <http://schema.org/description> "ah, ok. I tried a stab at updating it, but I only introduced more failures in other test cases ;-) I'm not yet familiar enough with the code. I would really like a version that uses aiohttp in stead of requests, but I think it needs more than just setting `set_document_loader`." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359183088> <http://schema.org/identifier> "359183088"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359183088> <http://schema.org/startDate> "2018-01-20T16:22:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/359183088> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/71#issuecomment-359183088"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360935678> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360935678> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360935678> <http://schema.org/description> "Cool!  I thought it would be more invasive to do such things.  The README.rst also needs to be updated (requirements, installation notes, doc loader section, etc).  Also would by nice to update travis config so tests could pass on older pythons using requests.  I've gotten used to semantic versioning from js world.  Probably need to bump the minor when this is released.\r\n\r\nAlso sorry the tests have many failures.  The code needs to be updated for new tests that were added." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360935678> <http://schema.org/identifier> "360935678"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360935678> <http://schema.org/startDate> "2018-01-26T23:42:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360935678> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/73#issuecomment-360935678"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360938936> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360938936> <http://schema.org/creator> <https://api.github.com/users/oohlaf> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360938936> <http://schema.org/description> "I thought so as well, but then I found out I could wrap the loader in a run_until_complete task. I can update the readme and travis probably as well. Need to look into how to define conditions in travis. Will give it a go somewhere next week." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360938936> <http://schema.org/identifier> "360938936"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360938936> <http://schema.org/startDate> "2018-01-27T00:04:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360938936> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/73#issuecomment-360938936"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360940471> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360940471> <http://schema.org/creator> <https://api.github.com/users/oohlaf> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360940471> <http://schema.org/description> "Also, this version will only allow other async tasks to run whenever remote URLs need to be fetched. When there are no remote calls, it will execute the entire compact or expand command in one go. To change that each function should be made async." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360940471> <http://schema.org/identifier> "360940471"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360940471> <http://schema.org/startDate> "2018-01-27T00:15:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/360940471> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/73#issuecomment-360940471"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/361194665> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/361194665> <http://schema.org/creator> <https://api.github.com/users/oohlaf> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/361194665> <http://schema.org/description> "David, let me know if you're ok with splitting the document loaders to separate files before I update the main README file. I had to split it off, otherwise older Python versions keep throwing SyntaxErrors in the main file." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/361194665> <http://schema.org/identifier> "361194665"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/361194665> <http://schema.org/startDate> "2018-01-29T09:56:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/361194665> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/73#issuecomment-361194665"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362103879> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362103879> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362103879> <http://schema.org/description> "Yes, splitting out document loaders is fine.  There is some work going on in the `json-ld-1.1` branch.  It might involve splitting up all the code similar to what was done in jsonld.js.  The document loaders were extracted there too." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362103879> <http://schema.org/identifier> "362103879"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362103879> <http://schema.org/startDate> "2018-01-31T23:18:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362103879> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/73#issuecomment-362103879"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362398099> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362398099> <http://schema.org/creator> <https://api.github.com/users/mr-stateradio> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362398099> <http://schema.org/description> "It is not just you.. also falling back to dicts and json for now." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362398099> <http://schema.org/identifier> "362398099"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362398099> <http://schema.org/startDate> "2018-02-01T20:52:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362398099> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/62#issuecomment-362398099"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362404503> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362404503> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362404503> <http://schema.org/description> "What kind of examples and docs were you all looking for?  It could be argued that generic JSON-LD authoring and usage info should be on some other site.  Improved docs for pyld in particular would be very welcome.  Does anyone have suggestions (or patches!) on what do add?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362404503> <http://schema.org/identifier> "362404503"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362404503> <http://schema.org/startDate> "2018-02-01T21:17:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362404503> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/62#issuecomment-362404503"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362421142> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362421142> <http://schema.org/creator> <https://api.github.com/users/mr-stateradio> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362421142> <http://schema.org/description> "I tried to build structured data for a `BlogPosting`. So one suggestion would be to provide more examples which also include nestings.\r\n\r\n```\r\n{\r\n\t\"author\": \"Tom\",\r\n\t\"publisher\": {\r\n\t\t\"logo\": {\r\n\t\t\t\"width\": \"234\",\r\n\t\t\t\"name\": \"mylogo\",\r\n\t\t\t\"url\": \"https://www.example.com/logo.png\",\r\n\t\t\t\"height\": \"76\",\r\n\t\t\t\"@type\": \"ImageObject\"\r\n\t\t},\r\n\t\t\"name\": \"My Example Orga\",\r\n\t\t\"@type\": \"http://schema.org/Organization\"\r\n\t},\r\n\t\"datePublished\": \"2018-01-15\",\r\n\t\"headline\": \"My Example Headline\",\r\n\t\"dateModified\": \"2018-02-01\",\r\n\t\"@type\": \"BlogPosting\",\r\n\t\"image\": \"https://www.example.com/media/file/example.jpg\",\r\n\t\"@context\": \"http://schema.org\"\r\n}\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362421142> <http://schema.org/identifier> "362421142"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362421142> <http://schema.org/startDate> "2018-02-01T22:18:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/362421142> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/62#issuecomment-362421142"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/363642661> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/363642661> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/363642661> <http://schema.org/description> "See: https://github.com/digitalbazaar/pyld/tree/json-ld-1.1  :)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/363642661> <http://schema.org/identifier> "363642661"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/363642661> <http://schema.org/startDate> "2018-02-07T03:13:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/363642661> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/58#issuecomment-363642661"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366822196> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366822196> <http://schema.org/creator> <https://api.github.com/users/oohlaf> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366822196> <http://schema.org/description> "Cool, all checks have passed against json-ld-1.1 branch." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366822196> <http://schema.org/identifier> "366822196"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366822196> <http://schema.org/startDate> "2018-02-19T22:58:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366822196> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/77#issuecomment-366822196"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366824826> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366824826> <http://schema.org/creator> <https://api.github.com/users/oohlaf> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366824826> <http://schema.org/description> "Hi, I've updated the documentation and moved the document loaders to a separate folder.\r\nI've also rebased the commits to 3 logical ones (creation of aiohttp, travis changes, and moving to separate folder). Noticed that there was a name clash on Python2.7 because that version does not do absolute imports. Luckily that can be turned on as __future__.\r\n\r\nIn #77 I did a PR against the json-ld-1.1 branch as that branch contains a functioning test suite.\r\nThis PR #73 is against the master branch where the test suite still fails (even though it says passed above, but the GitHub Travis component references the wrong build number. On the Travis website you can see it failed).\r\n\r\nYou're free to decide in which branch you'd like to merge :wink:" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366824826> <http://schema.org/identifier> "366824826"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366824826> <http://schema.org/startDate> "2018-02-19T23:17:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/366824826> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/73#issuecomment-366824826"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367110974> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367110974> <http://schema.org/creator> <https://api.github.com/users/oohlaf> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367110974> <http://schema.org/description> "Closing, as this is solved in PR #76 and the aiohttp stuff is in #73 or #77 " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367110974> <http://schema.org/identifier> "367110974"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367110974> <http://schema.org/startDate> "2018-02-20T20:37:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367110974> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/71#issuecomment-367110974"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367116478> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367116478> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367116478> <http://schema.org/description> "Thanks for doing this!  We're a bit busy at the moment and will try to merge and release the 1.1 code and aiohttp patch soon.\r\n\r\nAny help reviewing or testing the 1.1 PRs would be great too.  We don't use the py code as much as the js version so may miss some issues that the test suite doesn't catch." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367116478> <http://schema.org/identifier> "367116478"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367116478> <http://schema.org/startDate> "2018-02-20T20:56:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/367116478> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/73#issuecomment-367116478"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620089> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620089> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620089> <http://schema.org/description> "@dlongley @davidlehn Any timeline for when we might be able to merge to master?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620089> <http://schema.org/identifier> "370620089"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620089> <http://schema.org/startDate> "2018-03-06T00:44:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620089> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/76#issuecomment-370620089"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620421> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620421> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620421> <http://schema.org/description> "@davidlehn,\r\n\r\nIf we're passing all the tests -- and we have the same fix we put in for compact `@graph` arrays as in jsonld.js then I vote we go ahead and merge and do a `1.0.0` release of pyld." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620421> <http://schema.org/identifier> "370620421"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620421> <http://schema.org/startDate> "2018-03-06T00:46:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370620421> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/76#issuecomment-370620421"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370621520> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370621520> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370621520> <http://schema.org/description> ":+1:" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370621520> <http://schema.org/identifier> "370621520"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370621520> <http://schema.org/startDate> "2018-03-06T00:52:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370621520> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/74#issuecomment-370621520"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370643316> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370643316> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370643316> <http://schema.org/description> "I'm ok for release as well once that fix is in.  The js patch in question is this:\r\nhttps://github.com/digitalbazaar/jsonld.js/commit/4ce2b708a012ef1fa3e6f5f6b7e35950e6a98b38\r\n\r\nThere was also a question if the above fix works with `compactArrays` api option.  I haven't had time to check if we have tests for that and/or write new ones." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370643316> <http://schema.org/identifier> "370643316"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370643316> <http://schema.org/startDate> "2018-03-06T02:46:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370643316> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/76#issuecomment-370643316"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370978624> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370978624> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370978624> <http://schema.org/description> "I’m out of the country and can’t respond until next week." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370978624> <http://schema.org/identifier> "370978624"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370978624> <http://schema.org/startDate> "2018-03-07T00:27:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/370978624> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/76#issuecomment-370978624"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371003204> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371003204> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371003204> <http://schema.org/description> "Thanks!  This will be in next release along with 1.1 draft spec features." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371003204> <http://schema.org/identifier> "371003204"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371003204> <http://schema.org/startDate> "2018-03-07T02:41:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371003204> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/73#issuecomment-371003204"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004774> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004774> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004774> <http://schema.org/description> "Fixed in master." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004774> <http://schema.org/identifier> "371004774"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004774> <http://schema.org/startDate> "2018-03-07T02:50:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004774> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/72#issuecomment-371004774"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004950> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004950> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004950> <http://schema.org/description> "Merged the other PR into master and 1.1 support on top of it.  Closing this PR.  Thanks!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004950> <http://schema.org/identifier> "371004950"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004950> <http://schema.org/startDate> "2018-03-07T02:51:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371004950> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/77#issuecomment-371004950"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371007997> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371007997> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371007997> <http://schema.org/description> "Thank you! :)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371007997> <http://schema.org/identifier> "371007997"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371007997> <http://schema.org/startDate> "2018-03-07T03:10:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371007997> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/76#issuecomment-371007997"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371024600> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371024600> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371024600> <http://schema.org/description> "1.0.1 has been released with JSON-LD 1.1 draft spec support." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371024600> <http://schema.org/identifier> "371024600"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371024600> <http://schema.org/startDate> "2018-03-07T05:09:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371024600> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/58#issuecomment-371024600"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371633287> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371633287> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371633287> <http://schema.org/description> "ok, identified the `str` gotcha... will send a PR for that one\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371633287> <http://schema.org/identifier> "371633287"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371633287> <http://schema.org/startDate> "2018-03-08T21:39:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371633287> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/78#issuecomment-371633287"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371635833> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371635833> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371635833> <http://schema.org/description> "With the fix in #79 it now looks more informative:\r\n```\r\n  File \"/tmp/pyld/lib/pyld/jsonld.py\", line 886, in flatten\r\n    'jsonld.FlattenError', cause=cause)\r\nJsonLdError: ('Could not expand input before flattening.',)\r\nType: jsonld.FlattenError\r\nCause: ('Could not perform JSON-LD expansion.',)\r\nType: jsonld.ExpandError\r\nCause: ('Dereferencing a URL did not result in a valid JSON-LD context.',)\r\nType: jsonld.ContextUrlError\r\nCode: loading remote context failed\r\nDetails: {'url': u'http://schema.org/'}\r\nCause: ('No default document loader configured',)\r\nType: jsonld.LoadDocumentError\r\nCode: no default document loader\r\nDetails: {'url': u'http://schema.org/'}  File \"/tmp/pyld/lib/pyld/jsonld.py\", line 4754, in _retrieve_context_urls\r\n    remote_doc = load_document(url)\r\n  File \"/home/buildbot/datalad-pr-docker-dl-nd90/build/datalad/metadata/__init__.py\", line 270, in _cached_load_document\r\n    url, name='schema', fetcher=load_document, maxage=1\r\n\r\n```\r\nso it seems to be indeed a change in the interface requiring something (loader) which we didn't provide before? (would need to check now our code... later)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371635833> <http://schema.org/identifier> "371635833"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371635833> <http://schema.org/startDate> "2018-03-08T21:48:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371635833> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/78#issuecomment-371635833"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371653387> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371653387> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371653387> <http://schema.org/description> "Thanks!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371653387> <http://schema.org/identifier> "371653387"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371653387> <http://schema.org/startDate> "2018-03-08T22:55:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371653387> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/79#issuecomment-371653387"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371654236> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371654236> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371654236> <http://schema.org/description> "The changelog and readme have some info on the new doc loader situation.  There is a new aiohttp based loader along with the requests based one.  pyld now requires you to have one of those dependencies installed to get a default loader.  Not ideal to not have a default but also avoids forcing people to install dependencies they don't need.  Suggestions of a better way to handle this would be welcome." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371654236> <http://schema.org/identifier> "371654236"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371654236> <http://schema.org/startDate> "2018-03-08T22:58:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371654236> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/78#issuecomment-371654236"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371694497> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371694497> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371694497> <http://schema.org/description> "ok, with https://github.com/digitalbazaar/pyld/pull/80 our test seems to  pass" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371694497> <http://schema.org/identifier> "371694497"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371694497> <http://schema.org/startDate> "2018-03-09T02:36:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371694497> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/78#issuecomment-371694497"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371901695> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371901695> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371901695> <http://schema.org/description> "@davidlehn Let me know if you have any questions/recommendations on this fix.\r\nCheers" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371901695> <http://schema.org/identifier> "371901695"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371901695> <http://schema.org/startDate> "2018-03-09T18:22:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371901695> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/80#issuecomment-371901695"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371952668> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371952668> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371952668> <http://schema.org/description> "These new pieces really need some automated testing. Just testing by hand now, and apparently rather poorly at that. Thanks for finding and fixing these issues." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371952668> <http://schema.org/identifier> "371952668"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371952668> <http://schema.org/startDate> "2018-03-09T21:39:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371952668> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/80#issuecomment-371952668"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371961130> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371961130> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371961130> <http://schema.org/description> "Released 1.0.3 with the fixes." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371961130> <http://schema.org/identifier> "371961130"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371961130> <http://schema.org/startDate> "2018-03-09T22:17:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371961130> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/78#issuecomment-371961130"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371981111> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371981111> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371981111> <http://schema.org/description> "Thank you for the quick release!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371981111> <http://schema.org/identifier> "371981111"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371981111> <http://schema.org/startDate> "2018-03-10T00:10:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/371981111> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/78#issuecomment-371981111"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394832620> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394832620> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394832620> <http://schema.org/description> "Hi, If you have a chance could you provide a test example?  I'll try to get it into main json-ld.org test suite to avoid the same issue in other implementations.  If you want to add a patch to that repo, that works too.  Thanks, and apologies for the late response." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394832620> <http://schema.org/identifier> "394832620"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394832620> <http://schema.org/startDate> "2018-06-05T19:32:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394832620> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/81#issuecomment-394832620"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394861149> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394861149> <http://schema.org/creator> <https://api.github.com/users/pjohnston-wiley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394861149> <http://schema.org/description> "sure - i may already have one in some of the posts i put on the WG issues list, e.g. [this](https://github.com/json-ld/json-ld.org/issues/641). I'm traveling this week but i'll try and put something together soon." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394861149> <http://schema.org/identifier> "394861149"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394861149> <http://schema.org/startDate> "2018-06-05T21:09:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/394861149> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/81#issuecomment-394861149"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400026507> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400026507> <http://schema.org/creator> <https://api.github.com/users/Fak3> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400026507> <http://schema.org/description> "One interesting doscovery: if i change `'http://ex.org/#shortname'` to `{'@id': 'http://ex.org/#shortname'}` in the input data json, then property name compaction suddenly works, but the property value still not compacted:\r\n```\r\n{'@context': {'@vocab': 'http://ex.org/#', 'path': {'@type': '@id'}},\r\n '@id': '_:b0',\r\n 'maxCount': 1,\r\n 'path': 'http://ex.org/#shortname'}\r\n# Note: `path` is compacted, but its value still isn't\r\n```\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400026507> <http://schema.org/identifier> "400026507"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400026507> <http://schema.org/startDate> "2018-06-25T17:10:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400026507> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/83#issuecomment-400026507"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400369867> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400369867> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400369867> <http://schema.org/description> "Thanks!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400369867> <http://schema.org/identifier> "400369867"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400369867> <http://schema.org/startDate> "2018-06-26T16:09:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/400369867> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/84#issuecomment-400369867"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/401506093> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/401506093> <http://schema.org/creator> <https://api.github.com/users/pjohnston-wiley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/401506093> <http://schema.org/description> "[There now](https://github.com/json-ld/json-ld.org/pull/663)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/401506093> <http://schema.org/identifier> "401506093"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/401506093> <http://schema.org/startDate> "2018-06-30T00:51:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/401506093> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/81#issuecomment-401506093"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423357534> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423357534> <http://schema.org/creator> <https://api.github.com/users/alantrick> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423357534> <http://schema.org/description> "I've run into this problem too. Unfortunately the patch breaks the tests, most of the failed tests are ordering differences and SSL errors, but some of them aren't. I'm not familiar enough with JSON-LD to know what is wrong with them though." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423357534> <http://schema.org/identifier> "423357534"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423357534> <http://schema.org/startDate> "2018-09-20T22:41:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423357534> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/59#issuecomment-423357534"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423388946> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423388946> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423388946> <http://schema.org/description> "@alantrick The tests have many failures now because the test suite and specs moved forward and the code hasn't caught up.  Unless someone jumps in on this the code likely won't be updated until after the js library has also caught up.\r\n\r\nAs to the original problem, it can also be tested with just compaction.  Here's the example with JSON quoting for easier [playground](https://json-ld.org/playground/) use:\r\n```json\r\n{\r\n  \"http://schema.org/name\": \"Buster the Cat\",\r\n  \"http://schema.org/birthDate\": \"2012\",\r\n  \"http://schema.org/deathDate\": \"2015-02-25\"\r\n}\r\n```\r\n```json\r\n{\r\n  \"@context\": \"http://schema.org/\"\r\n}\r\n```\r\n\r\nNote from the schema.org context, the lines:\r\n```json\r\n        \"@vocab\": \"http://schema.org/\",\r\n        \"schema\": \"http://schema.org/\",\r\n        \"Date\": {\"@id\": \"schema:Date\"},\r\n        \"birthDate\": { \"@id\": \"schema:birthDate\", \"@type\": \"Date\"},\r\n        \"deathDate\": { \"@id\": \"schema:deathDate\", \"@type\": \"Date\"},\r\n        \"name\": { \"@id\": \"schema:name\"},\r\n```\r\n\r\nThe test input just has simple strings for the date values. If you change the input so the data has the expanded `Date` type, then the compaction will work (you can test this all with just compaction vs framing):\r\n```json\r\n{\r\n  \"http://schema.org/name\": \"Buster the Cat\",\r\n  \"http://schema.org/birthDate\": {\"@value\": \"2012\", \"@type\": \"http://schema.org/Date\"},\r\n  \"http://schema.org/deathDate\": {\"@value\": \"2015-02-25\", \"@type\": \"http://schema.org/Date\"}\r\n}\r\n```\r\nOutput:\r\n```json\r\n{\r\n  \"@context\": \"http://schema.org/\",\r\n  \"birthDate\": \"2012\",\r\n  \"deathDate\": \"2015-02-25\",\r\n  \"name\": \"Buster the Cat\"\r\n}\r\n```\r\n\r\nSchema.org does say to use a string ISO 8601 date, but in JSON-LD it still needs to be typed.  I don't recall the reason it's matching on types to do the term compaction.  I think that's how it's supposed to work but I'm unsure.  @gkellogg Perhaps you can confirm that if you have a moment?\r\n\r\nHere's a self contained simple compaction test:\r\nInput:\r\n```json\r\n{\r\n  \"http://example.org/a\": \"A\",\r\n  \"http://example.org/b\": \"B\",\r\n  \"http://example.org/c\": {\"@value\": \"C\", \"@type\": \"urn:C\"}\r\n}\r\n```\r\nContext:\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"ex\": \"http://example.org/\",\r\n    \"a\": {\"@id\": \"http://example.org/a\"},\r\n    \"b\": {\"@id\": \"http://example.org/b\", \"@type\": \"urn:B\"},\r\n    \"c\": {\"@id\": \"http://example.org/c\", \"@type\": \"urn:C\"}\r\n  }\r\n}\r\n```\r\nOutput:\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"ex\": \"http://example.org/\",\r\n    \"a\": {\r\n      \"@id\": \"http://example.org/a\"\r\n    },\r\n    \"b\": {\r\n      \"@id\": \"http://example.org/b\",\r\n      \"@type\": \"urn:B\"\r\n    },\r\n    \"c\": {\r\n      \"@id\": \"http://example.org/c\",\r\n      \"@type\": \"urn:C\"\r\n    }\r\n  },\r\n  \"a\": \"A\",\r\n  \"ex:b\": \"B\",\r\n  \"c\": \"C\"\r\n}\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423388946> <http://schema.org/identifier> "423388946"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423388946> <http://schema.org/startDate> "2018-09-21T01:55:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423388946> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/59#issuecomment-423388946"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423766916> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423766916> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423766916> <http://schema.org/description> "> I don't recall the reason it's matching on types to do the term compaction. I think that's how it's supposed to work but I'm unsure.\r\n\r\nWhen compacting, it's necessary to be sure that the value matches the type, which would include both `@type` and `@language`. Otherwise, if it compacted to that term and used a string value, it would not expand back to it's proper value.\r\n\r\nISO 8601 does allow a greater range of date styles than does xsd:date, which is fine, and nothing actually checks the value for conformance, but if the term days it's a `schema:Date`, then \"2018\" will expand to `{\"@value\": \"2018\", \"@type\": \"http://schema.org/Date\"}`, so it must be of that form to be re-compacted using the same term.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423766916> <http://schema.org/identifier> "423766916"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423766916> <http://schema.org/startDate> "2018-09-22T19:16:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/423766916> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/59#issuecomment-423766916"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269194> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269194> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269194> <http://schema.org/description> "Do you have a test case we can add to the test suite that exposes this?\nhttps://github.com/json-ld/json-ld.org\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269194> <http://schema.org/identifier> "4269194"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269194> <http://schema.org/startDate> "2012-03-01T20:10:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269194> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/12#issuecomment-4269194"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269621> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269621> <http://schema.org/creator> <https://api.github.com/users/tristan> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269621> <http://schema.org/description> "Unfortunately not. The current test cases pass with this line written both ways. I found this why trying to figure out why it's written like it currently is and when comparing it to the javascript implementation, which i found uses `rval`, it seemed obvious that it's simply a typo. Frankly it makes little sense to use `key` as the key. `key` is only declared in the for loop above it, and the only case where line 128 gets executed is if the loop doesn't set `rval` meaning `key` will always be the last thing in `ctx`'s key set. A test case should probably be created to expose this, but i've not yet had the time to figure one out.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269621> <http://schema.org/identifier> "4269621"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269621> <http://schema.org/startDate> "2012-03-01T20:33:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4269621> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/12#issuecomment-4269621"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43216702> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43216702> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43216702> <http://schema.org/description> "When I run that same code on my end (using python 2.7.6) I get this:\n\n```\n<http://dp.la/api/collections/f886dbd0b329b3a839a8d542423c1e08> <http://purl.org/dc/elements/1.1/description> \"\" .\n<http://dp.la/api/collections/f886dbd0b329b3a839a8d542423c1e08> <http://purl.org/dc/elements/1.1/title> \"Ludlow Collection\" .\n```\n\nSo some further investigation as to the cause is needed.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43216702> <http://schema.org/identifier> "43216702"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43216702> <http://schema.org/startDate> "2014-05-15T14:31:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43216702> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/28#issuecomment-43216702"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43217248> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43217248> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43217248> <http://schema.org/description> "Well, when I curl that file it looks like it's no longer gzipped, so that may explain why it's working properly now.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43217248> <http://schema.org/identifier> "43217248"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43217248> <http://schema.org/startDate> "2014-05-15T14:35:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43217248> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/28#issuecomment-43217248"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43221676> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43221676> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43221676> <http://schema.org/description> "So the actual problem was that the test server here was responding with gzip-encoded content even though pyld wasn't indicating that it accepted that encoding. However, I added gzip support to pyld so that it will work regardless now ... and well, now it supports gzip :).\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43221676> <http://schema.org/identifier> "43221676"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43221676> <http://schema.org/startDate> "2014-05-15T15:08:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/43221676> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/28#issuecomment-43221676"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446290011> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446290011> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446290011> <http://schema.org/description> "@dlongley @davidlehn Any chance that this quick one could be merged? It's blocking us for things like `en-US` (which everyone uses) versus `en-us` (which is accepted by the code but no one does in practice).  Thanks!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446290011> <http://schema.org/identifier> "446290011"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446290011> <http://schema.org/startDate> "2018-12-11T17:31:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446290011> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/87#issuecomment-446290011"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446297679> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446297679> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446297679> <http://schema.org/description> "Ok.  We have that in js code already: https://github.com/digitalbazaar/rdf-canonize/commit/095c1747304186e1ba8267daeee0d2751b22a2f8\r\nI'm ok with this, I just wonder if there is confusion with some normalization needing to happen if people mix upper and lower case. Will deal with that when it's a real issue." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446297679> <http://schema.org/identifier> "446297679"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446297679> <http://schema.org/startDate> "2018-12-11T17:54:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446297679> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/87#issuecomment-446297679"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446303403> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446303403> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446303403> <http://schema.org/description> "1.0.4 released." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446303403> <http://schema.org/identifier> "446303403"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446303403> <http://schema.org/startDate> "2018-12-11T18:10:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446303403> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/87#issuecomment-446303403"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446305074> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446305074> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446305074> <http://schema.org/description> "1.0.4 released with #87." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446305074> <http://schema.org/identifier> "446305074"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446305074> <http://schema.org/startDate> "2018-12-11T18:16:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/446305074> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/86#issuecomment-446305074"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/454954519> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/454954519> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/454954519> <http://schema.org/description> "No, that input shouldn't explode like that.  I think the output should just be the same as the input in that case.  That's what the js and ruby code do.  Hopefully those are both correct.\r\n\r\nTight on time now, so if someone wants to make a patch, that'd be great.  Should also add a test for this to https://github.com/w3c/json-ld-api.  (Although pyld hasn't yet been updated to use the new WG test suites.)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/454954519> <http://schema.org/identifier> "454954519"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/454954519> <http://schema.org/startDate> "2019-01-16T21:43:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/454954519> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/91#issuecomment-454954519"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46018804> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46018804> <http://schema.org/creator> <https://api.github.com/users/greut> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46018804> <http://schema.org/description> "Thanks!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46018804> <http://schema.org/identifier> "46018804"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46018804> <http://schema.org/startDate> "2014-06-13T14:38:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46018804> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/29#issuecomment-46018804"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46019038> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46019038> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46019038> <http://schema.org/description> "@greut, sure, thanks for the PR!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46019038> <http://schema.org/identifier> "46019038"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46019038> <http://schema.org/startDate> "2014-06-13T14:39:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/46019038> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/29#issuecomment-46019038"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4629855> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4629855> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4629855> <http://schema.org/description> "Thanks, fconil. We'll merge this in for now, but you should know that we're currently working on a rewrite to handle all of the latest JSON-LD specification changes which should including better handling of multiple contexts.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4629855> <http://schema.org/identifier> "4629855"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4629855> <http://schema.org/startDate> "2012-03-21T23:51:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/4629855> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/13#issuecomment-4629855"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124563> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124563> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124563> <http://schema.org/description> "If that is changed to prepend the path does it fix the issue?\n\n``` python\nsys.path.insert(0, os.path.join(os.path.dirname(__file__), 'lib'))\nfrom pyld import jsonld\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124563> <http://schema.org/identifier> "47124563"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124563> <http://schema.org/startDate> "2014-06-25T16:20:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124563> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/30#issuecomment-47124563"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124910> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124910> <http://schema.org/creator> <https://api.github.com/users/gcarothers> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124910> <http://schema.org/description> "Best practices on versioning in python with setup.py are happily documented at http://python-packaging-user-guide.readthedocs.org/en/latest/tutorial.html#version\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124910> <http://schema.org/identifier> "47124910"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124910> <http://schema.org/startDate> "2014-06-25T16:22:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/47124910> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/30#issuecomment-47124910"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491013855> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491013855> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491013855> <http://schema.org/description> "Can you rebase this on master?  I just updated travis config to test on 3.7.  Want to make sure tests work the same in all versions with this patch.  Pardon all the other failing tests, pyld has fallen behind the js code as far as keeping the test runner itself up-to-date, and both are behind in the latest 1.1 spec updates." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491013855> <http://schema.org/identifier> "491013855"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491013855> <http://schema.org/startDate> "2019-05-09T18:24:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491013855> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/93#issuecomment-491013855"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491024739> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491024739> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491024739> <http://schema.org/description> "Thanks. 1.0.5 released with the fix." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491024739> <http://schema.org/identifier> "491024739"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491024739> <http://schema.org/startDate> "2019-05-09T18:56:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/491024739> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/93#issuecomment-491024739"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50648272> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50648272> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50648272> <http://schema.org/description> "Thanks @RDProjekt! We need to take a closer look at this when we can, but it does look like we want to pull it in. We do need to get generic unit tests (that aren't just the official JSON-LD test suite) working and running in travis so we can throw more in there as needed and this could be a good start for that. We'd like, at least eventually, all of the tests (official JSON-LD test suite and our own custom ones) to run at the same time.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50648272> <http://schema.org/identifier> "50648272"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50648272> <http://schema.org/startDate> "2014-07-30T17:14:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50648272> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/31#issuecomment-50648272"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50649819> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50649819> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50649819> <http://schema.org/description> "It would be good to try and get these tests into the main test suite.  We want to be able test all implementations for these issues.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50649819> <http://schema.org/identifier> "50649819"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50649819> <http://schema.org/startDate> "2014-07-30T17:24:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/50649819> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/31#issuecomment-50649819"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/528456295> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/528456295> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/528456295> <http://schema.org/description> "Pyld has a BSD license, and I'll be working to bring that one up to date. I think some of the code might be shared, with permission from Digital Bazaar, but there's also value in doing a completely independent implementation." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/528456295> <http://schema.org/identifier> "528456295"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/528456295> <http://schema.org/startDate> "2019-09-05T16:45:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/528456295> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/97#issuecomment-528456295"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/535983448> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/535983448> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/535983448> <http://schema.org/description> "Those examples are not likely to work at the moment since PyLD doesn't yet support the latest 1.1 spec.  Full 1.1 support is a work in progress." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/535983448> <http://schema.org/identifier> "535983448"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/535983448> <http://schema.org/startDate> "2019-09-27T15:17:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/535983448> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/99#issuecomment-535983448"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/536012509> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/536012509> <http://schema.org/creator> <https://api.github.com/users/amarts> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/536012509> <http://schema.org/description> "Thanks for confirming." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/536012509> <http://schema.org/identifier> "536012509"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/536012509> <http://schema.org/startDate> "2019-09-27T16:38:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/536012509> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/99#issuecomment-536012509"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/550455939> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/550455939> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/550455939> <http://schema.org/description> "Thanks, I'll take a look when I get a chance.  May need to finish getting the test suite up-to-date so we can check if the changes are ok.\r\n\r\nCan you give a brief example of the form of data that was slow?  Just one or two properties is fine, not 10000+ :-)  I've started setting up a benchmarking system and issues like this are useful target for auto-generating test data inputs." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/550455939> <http://schema.org/identifier> "550455939"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/550455939> <http://schema.org/startDate> "2019-11-06T19:07:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/550455939> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/101#issuecomment-550455939"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/553770884> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/553770884> <http://schema.org/creator> <https://api.github.com/users/Panaetius> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/553770884> <http://schema.org/description> "I'm surprised this PR has been open for this long.\r\n\r\nI ran into the same issue, though I fixed it by changing `set` to:\r\n```\r\ndef set(self, active_ctx, local_ctx, result):\r\n        if len(self.order) == self.size:\r\n            entry = self.order.popleft()\r\n            if sum(\r\n                e['activeCtx'] == entry['activeCtx'] and\r\n                e['localCtx'] == entry['localCtx'] for e in self.order\r\n            ) == 0:\r\n                # only delete from cache if it doesn't exist in context deque\r\n                del self.cache[entry['activeCtx']][entry['localCtx']]\r\n        key1 = json.dumps(active_ctx)\r\n        key2 = json.dumps(local_ctx)\r\n        self.order.append({'activeCtx': key1, 'localCtx': key2})\r\n        self.cache.setdefault(key1, {})[key2] = json.loads(json.dumps(result))\r\n```\r\n\r\nSo only remove an entry from cache if it's not anywhere in the deque, this way contexts don't get evicted from cache if they're still used somewhere else, but the deque itself is still limited to `self.size` number of entries." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/553770884> <http://schema.org/identifier> "553770884"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/553770884> <http://schema.org/startDate> "2019-11-14T07:58:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/553770884> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/44#issuecomment-553770884"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/574810500> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/574810500> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/574810500> <http://schema.org/description> "As indicated, the context document is a JSON-LD document which needs an `@context` entry. Try it with the following:\r\n\r\n```json\r\n{\r\n  \"@context\": [\r\n    \"https://json-ld.org/contexts/person.jsonld\",\r\n    \"https://json-ld.org/contexts/place.jsonld\",\r\n    {\r\n        \"title\": \"http://purl.org/dc/terms/title\", \r\n        \"Building\" : \"http://schema.org/Building\"\r\n    }\r\n]\r\n}\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/574810500> <http://schema.org/identifier> "574810500"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/574810500> <http://schema.org/startDate> "2020-01-15T19:10:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/574810500> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/102#issuecomment-574810500"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/575033178> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/575033178> <http://schema.org/creator> <https://api.github.com/users/alegrm> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/575033178> <http://schema.org/description> "Thank you, that worked.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/575033178> <http://schema.org/identifier> "575033178"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/575033178> <http://schema.org/startDate> "2020-01-16T08:09:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/575033178> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/102#issuecomment-575033178"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579407939> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579407939> <http://schema.org/creator> <https://api.github.com/users/sanuann> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579407939> <http://schema.org/description> "@davidlehn can you help please?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579407939> <http://schema.org/identifier> "579407939"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579407939> <http://schema.org/startDate> "2020-01-28T19:12:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579407939> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/103#issuecomment-579407939"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579421613> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579421613> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579421613> <http://schema.org/description> "Did it throw an error or just output nothing?  Looks like you at least need a valid `@id` IRI.  Either use one directly, add `@base` to your context, or if necessary, use the 'base' option when processing.\r\n\r\n```py\r\nprint(jsonld.normalize(doc, {\r\n  'base': 'https://example.com/',\r\n  'algorithm': 'URDNA2015',\r\n  'format': 'application/n-quads'\r\n}))\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579421613> <http://schema.org/identifier> "579421613"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579421613> <http://schema.org/startDate> "2020-01-28T19:44:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579421613> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/103#issuecomment-579421613"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579428848> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579428848> <http://schema.org/creator> <https://api.github.com/users/sanuann> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579428848> <http://schema.org/description> "Thanks! It was initially throwing some error saying it couldn't load remote context. \r\nIt now works if I put in the full `@id` IRI or `expand` first (in which case the `@id` resolves to the IRI) and then normalize.\r\nThank you!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579428848> <http://schema.org/identifier> "579428848"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579428848> <http://schema.org/startDate> "2020-01-28T20:01:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/579428848> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/103#issuecomment-579428848"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58520515> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58520515> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58520515> <http://schema.org/description> "Yes, PyLD supports scoped contexts within node objects. It is a fully-compliant JSON-LD processor. Anything you can do on the [JSON-LD playground](http://json-ld.org/playground) you should be able to do with PyLD (it's a near direct port of the JavaScript-based processor), so if something isn't working, there may be a bug. Can you provide a simple example?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58520515> <http://schema.org/identifier> "58520515"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58520515> <http://schema.org/startDate> "2014-10-09T14:48:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58520515> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/33#issuecomment-58520515"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58558529> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58558529> <http://schema.org/creator> <https://api.github.com/users/pekrau> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58558529> <http://schema.org/description> "I have made an example by inlining and cutting away stuff, and then expanded it using\n\n```\nexpanded = jsonld.expand(data)\nprint json.dumps(expanded, indent=2)\n```\n\nThe start JSON-LD is `example4.jsonld`, and the expanded `expanded4.jsonld`.\n\nDoing so, I have finally some idea what is going on. I am not sure if it is spec-compliant, though. My original suspicion - that subcontexts are not processed - was incorrect.\n\nThe problem is the following: The entries `given` and `result` are both containers for parameters, and they are separate namespaces, and need their own contexts. When expanding, only those parameters in `given` and `result` (`csv_file` and `n_rows`) having non-null values are kept. The null-valued parameter (`n_columns`) disappears from the expanded file. Is this correct behaviour? (If yes, then I am sorry to have bothered you.)\n\nThis interface won't allow me to attach the JSON-LD files, so have to inline them:\n\n`example4.jsonld`:\n\n```\n{\n  \"@context\": \n  {\n    \"dc\": \"http://purl.org/dc/elements/1.1/\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"poly\": \"http://polycentric.org/ontology/\",\n\n    \"description\": {\n      \"@id\": \"dc:description\",\n      \"@type\": \"xsd:string\",\n      \"dc:description\": \"Full human-readable description of the entity.\"\n    },\n\n    \"given\": {\n      \"@id\": \"poly:given\",\n      \"dc:description\": \"The container for the given parameters for a specification or task.\"\n    },\n\n    \"result\": {\n      \"@id\": \"poly:result\",\n      \"dc:description\": \"The container for the result parameters for a specification or task.\"\n    }\n\n  },\n\n  \"@id\": \"http://localhost:8882/task/222299c15b4f4263a170bc40dd0f2967\", \n  \"given\": {\n    \"csv_file\": \"http://localhost:8882/data/ef63594f11d04664a9a45432a46ea957\", \n    \"@context\": {\n      \"csv_file\": {\n        \"@id\": \"http://localhost:8882/spec/test/given/csv_file\", \n        \"@type\": \"xsd:anyURI\"\n      }\n    }\n  }, \n  \"result\": {\n    \"n_rows\": 5, \n    \"@context\": {\n      \"n_rows\": {\n        \"@id\": \"http://localhost:8882/spec/test/result/n_rows\", \n        \"@type\": \"xsd:int\"\n      }, \n      \"n_columns\": {\n        \"@id\": \"http://localhost:8882/spec/test/result/n_columns\", \n        \"@type\": \"xsd:int\"\n      }\n    }, \n    \"n_columns\": null\n  }, \n  \"description\": \"\"\n}\n\n```\n\n`expanded4.jsonld`:\n\n```\n[\n  {\n    \"http://purl.org/dc/elements/1.1/description\": [\n      {\n        \"@type\": \"http://www.w3.org/2001/XMLSchema#string\", \n        \"@value\": \"\"\n      }\n    ], \n    \"http://polycentric.org/ontology/result\": [\n      {\n        \"http://localhost:8882/spec/test/result/n_rows\": [\n          {\n            \"@type\": \"http://www.w3.org/2001/XMLSchema#int\", \n            \"@value\": 5\n          }\n        ]\n      }\n    ], \n    \"@id\": \"http://localhost:8882/task/222299c15b4f4263a170bc40dd0f2967\", \n    \"http://polycentric.org/ontology/given\": [\n      {\n        \"http://localhost:8882/spec/test/given/csv_file\": [\n          {\n            \"@type\": \"http://www.w3.org/2001/XMLSchema#anyURI\", \n            \"@value\": \"http://localhost:8882/data/ef63594f11d04664a9a45432a46ea957\"\n          }\n        ]\n      }\n    ]\n  }\n]\n\n```\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58558529> <http://schema.org/identifier> "58558529"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58558529> <http://schema.org/startDate> "2014-10-09T18:50:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58558529> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/33#issuecomment-58558529"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58563085> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58563085> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58563085> <http://schema.org/description> "> The null-valued parameter (n_columns) disappears from the expanded file. Is this correct behaviour?\n\nYes. See [JSON-LD 1.0 General Terminology](http://www.w3.org/TR/json-ld/#general-terminology):\n\n```\nA key-value pair in the body of a JSON-LD document whose value is null has the\nsame meaning as if the key-value pair was not defined.\n```\n\nAlso, in [Section 7.8 of the Expansion Algorithm](http://www.w3.org/TR/json-ld-api/#expansion-algorithm), expanded values of `null` cause keys to be \"ignored\" by dropping them from the output.\n\nIt may also be of note that a value of `null` is not a valid `xsd:int` (I think), which is the type `n_columns` is mapped to in the `@context` (not that this is considered by a JSON-LD processor, just commenting on the data).\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58563085> <http://schema.org/identifier> "58563085"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58563085> <http://schema.org/startDate> "2014-10-09T19:21:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58563085> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/33#issuecomment-58563085"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564283> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564283> <http://schema.org/creator> <https://api.github.com/users/pekrau> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564283> <http://schema.org/description> "OK, issue resolved. My apologies for bothering you.\n\nAnd yes, I have thought about that problem with `n_columns`. I need to specify the type for the parameter (for the interface, and for the task solver), and the task cannot have a non-null value here, since it has not yet been executed. I would very much like to avoid defining my own datatypes to handle this, but I may have, I suppose. Annoying.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564283> <http://schema.org/identifier> "58564283"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564283> <http://schema.org/startDate> "2014-10-09T19:30:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564283> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/33#issuecomment-58564283"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564454> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564454> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564454> <http://schema.org/description> "No worries -- and good luck! :)\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564454> <http://schema.org/identifier> "58564454"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564454> <http://schema.org/startDate> "2014-10-09T19:31:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58564454> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/33#issuecomment-58564454"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58685421> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58685421> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58685421> <http://schema.org/description> "Should be fixed now. Thanks!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58685421> <http://schema.org/identifier> "58685421"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58685421> <http://schema.org/startDate> "2014-10-10T17:09:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/58685421> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/34#issuecomment-58685421"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/591573550> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/591573550> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/591573550> <http://schema.org/description> "The [playground](https://json-ld.org/playground/) uses [jsonld.js](https://github.com/digitalbazaar/jsonld.js), but the limit is also the same in pyld.  10 is arbitrary, and it looks like there's no easy way to adjust it at the moment.  There probably should be, it's just no one has mentioned running into the issue until now.  The limit is there to avoid potential performance issues, and to avoid potential DoS attacks if using untrusted data.  But certainly there are valid use cases.\r\n\r\nI think adding an option in libs is a good idea.  I'm unsure if raising the default is good or not.\r\n\r\nThe workaround at the moment is to manually or programatically combine some of the sub-contexts into one file.\r\n\r\nAdded an issue about it for jsonld.js since that would be needed for the playground:\r\nhttps://github.com/digitalbazaar/jsonld.js/issues/368" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/591573550> <http://schema.org/identifier> "591573550"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/591573550> <http://schema.org/startDate> "2020-02-26T18:30:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/591573550> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/104#issuecomment-591573550"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596010365> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596010365> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596010365> <http://schema.org/description> "@davidlehn there may be some more logic to port over, but I can't figure it out. With the `-n` option, I think this is useful for testing, and hope you can merge it into master. This is a good place to start the 1.1 work from." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596010365> <http://schema.org/identifier> "596010365"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596010365> <http://schema.org/startDate> "2020-03-06T23:42:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596010365> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/98#issuecomment-596010365"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596031979> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596031979> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596031979> <http://schema.org/description> "Test runner can be updated later as needed.  Thanks for fixing up the test skip lists." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596031979> <http://schema.org/identifier> "596031979"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596031979> <http://schema.org/startDate> "2020-03-07T01:57:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596031979> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/98#issuecomment-596031979"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596883164> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596883164> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596883164> <http://schema.org/description> "There's also a CHANGELOG.md file. I'm not sure what level of detail should eventually go in there for such a large batch of changes.  At least something like \"Support JSON-LD 1.1.\". ;-)  Probably also add any important API changes or similar things that 1.0 users would need to know when upgrading." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596883164> <http://schema.org/identifier> "596883164"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596883164> <http://schema.org/startDate> "2020-03-10T03:27:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596883164> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/106#issuecomment-596883164"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596901187> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596901187> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596901187> <http://schema.org/description> "I figured that I would use the PR summary for the changelig when I’m closer to being ready for a merge. \r\n\r\nIt’s going pretty well, and now need to whittle away at the remaining pending expansion tests, as I’ve made a pass through all the relevant algorithms. " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596901187> <http://schema.org/identifier> "596901187"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596901187> <http://schema.org/startDate> "2020-03-10T04:49:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/596901187> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/106#issuecomment-596901187"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597924892> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597924892> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597924892> <http://schema.org/description> "This does everything for expansion other than HTML and some remote-doc tests which have probably never worked properly.\r\n\r\nSome things I can't resolve and will require a change in approach:\r\n\r\n* tests so01, so03, and so04 should get an \"invalid context entry\" but instead get \"recursive context inclusion\". This is because of pre-fetching. It seems to me that jsonld.js must have the same issue, but seems to pass these tests.\r\n* test js21 references an unused context, but it fails when loading, similar issue." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597924892> <http://schema.org/identifier> "597924892"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597924892> <http://schema.org/startDate> "2020-03-11T23:11:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597924892> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/106#issuecomment-597924892"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597933338> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597933338> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597933338> <http://schema.org/description> "I do wish we had split that file up similar to jsonld.js.  Kind of a monster to look at now!" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597933338> <http://schema.org/identifier> "597933338"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597933338> <http://schema.org/startDate> "2020-03-11T23:40:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/597933338> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/106#issuecomment-597933338"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600915365> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600915365> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600915365> <http://schema.org/description> "@davidlehn I hit a wall with both remote and local installation of the JCS module. I've included it here, but it's not loading, and I really don't understand how to manage this environment. Any help you can provide would be most useful.\r\n\r\nI commented out the module include and the use within `_object_to_rdf`, just using `json.dumps` for now." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600915365> <http://schema.org/identifier> "600915365"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600915365> <http://schema.org/startDate> "2020-03-18T23:58:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600915365> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/106#issuecomment-600915365"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600932941> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600932941> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600932941> <http://schema.org/description> "I got it to try and do remote install, but the lack of a setup.py seems to be a dealbreaker.\r\n```sh\r\npip install \"git+https://github.com/cyberphone/json-canonicalization@571690e6c9af5f614a29bc0e6034fafec93f34c8#egg=org.webpki.json.Canonicalize&subdirectory=python3\"\r\n```\r\nNot sure if that's correct (I'm guessing), but fails due to lack of setup.py.  Would be a `[-e]` line in requirements.txt if it could be installed.  I think we'll have to deal with a copy for now." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600932941> <http://schema.org/identifier> "600932941"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600932941> <http://schema.org/startDate> "2020-03-19T01:04:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600932941> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/106#issuecomment-600932941"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600933232> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600933232> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600933232> <http://schema.org/description> "Partial fix for https://github.com/digitalbazaar/pyld/pull/106." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600933232> <http://schema.org/identifier> "600933232"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600933232> <http://schema.org/startDate> "2020-03-19T01:06:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/600933232> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/107#issuecomment-600933232"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601299826> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601299826> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601299826> <http://schema.org/description> "Thanks @davidlehn, I'll see if that helps." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601299826> <http://schema.org/identifier> "601299826"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601299826> <http://schema.org/startDate> "2020-03-19T17:01:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601299826> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/107#issuecomment-601299826"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601309466> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601309466> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601309466> <http://schema.org/description> "`canonicalize(value).decode('UTF-8')` does it.\r\n\r\nThanks so much." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601309466> <http://schema.org/identifier> "601309466"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601309466> <http://schema.org/startDate> "2020-03-19T17:20:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/601309466> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/107#issuecomment-601309466"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/602129749> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/602129749> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/602129749> <http://schema.org/description> "Note the 3.4 failure:\r\n\r\n> Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-phouehag/lxml/\r\n\r\nDo we want to bump the minimum version to 3.5 or figure out how to do this conditionally?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/602129749> <http://schema.org/identifier> "602129749"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/602129749> <http://schema.org/startDate> "2020-03-22T01:00:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/602129749> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/108#issuecomment-602129749"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604692534> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604692534> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604692534> <http://schema.org/description> "I'll merge into main 1.1 branch shortly." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604692534> <http://schema.org/identifier> "604692534"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604692534> <http://schema.org/startDate> "2020-03-26T21:19:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604692534> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/111#issuecomment-604692534"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604707156> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604707156> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604707156> <http://schema.org/description> "A comprehensive EARL report requires running both /api and /framing test suites and merging the result using some external tooling. Could just submit as N-Triples or Turtle by converting JSON-LD output." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604707156> <http://schema.org/identifier> "604707156"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604707156> <http://schema.org/startDate> "2020-03-26T21:56:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/604707156> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/106#issuecomment-604707156"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273501> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273501> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273501> <http://schema.org/description> "There are about four errors to resolve, having to do with 'protected' propagation and properly remembering the base for the processing context." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273501> <http://schema.org/identifier> "606273501"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273501> <http://schema.org/startDate> "2020-03-30T21:58:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273501> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606273501"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273819> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273819> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273819> <http://schema.org/description> "@azaroth42 @kasei, this might be worth checking out to see how it affects your processing times, in spite of the remaining errors." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273819> <http://schema.org/identifier> "606273819"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273819> <http://schema.org/startDate> "2020-03-30T21:59:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606273819> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606273819"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606280634> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606280634> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606280634> <http://schema.org/description> "We don't use protected branches, so if that's the only challenge, then it should be a great benefit! \r\n\r\n@kasei, can we try this out with a run tonight or tomorrow and see what happens?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606280634> <http://schema.org/identifier> "606280634"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606280634> <http://schema.org/startDate> "2020-03-30T22:17:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606280634> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606280634"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606701673> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606701673> <http://schema.org/creator> <https://api.github.com/users/kasei> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606701673> <http://schema.org/description> "@gkellogg does the `c14n` module directory need to be listed in the setup.py `packages` list? I'm not seeing it get installed along with the rest of the package using pip." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606701673> <http://schema.org/identifier> "606701673"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606701673> <http://schema.org/startDate> "2020-03-31T15:33:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606701673> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606701673"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606745797> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606745797> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606745797> <http://schema.org/description> "@davidlehn got it this far, it seems to work enough for Travis to find it. I'm really not a Python person (in spite of all the work to the contrary) and the ecosystem is something of a mystery to me. Perhaps there's something to be gleaned from the .travis.yml." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606745797> <http://schema.org/identifier> "606745797"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606745797> <http://schema.org/startDate> "2020-03-31T16:49:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606745797> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606745797"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606775476> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606775476> <http://schema.org/creator> <https://api.github.com/users/kasei> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606775476> <http://schema.org/description> "I also don't feel much expertise in this area. However, I suspect that travis doesn't run into this problem, because it isn't installing pyld. Instead, it's just installing the prerequisites, and then testing the local copy of pyld.\r\n\r\nI'll also mention that there seems to be some issue with cachetools being listed as a prerequisite. It didn't install for me when I installed using pip via a git URL. I'm not sure what the issue is, but I had to install it manually." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606775476> <http://schema.org/identifier> "606775476"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606775476> <http://schema.org/startDate> "2020-03-31T17:45:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606775476> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606775476"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606835638> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606835638> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606835638> <http://schema.org/description> "@davidlehn Probably something needs to go in setup.py? A package description?\r\n\r\n```python\r\nsetup(\r\n    name='PyLD',\r\n    version=about['__version__'],\r\n    description='Python implementation of the JSON-LD API',\r\n    long_description=long_description,\r\n    author='Digital Bazaar',\r\n    author_email='support@digitalbazaar.com',\r\n    url='http://github.com/digitalbazaar/pyld',\r\n    packages=[\r\n        'pyld',\r\n        'pyld.documentloader',\r\n        'c14n'\r\n    ],\r\n    package_dir={'': 'lib'},\r\n    license='BSD 3-Clause license',\r\n    classifiers=[\r\n        'Development Status :: 4 - Beta',\r\n        'Environment :: Console',\r\n        'Environment :: Web Environment',\r\n        'Intended Audience :: Developers',\r\n        'License :: OSI Approved :: BSD License',\r\n        'Operating System :: OS Independent',\r\n        'Programming Language :: Python',\r\n        'Topic :: Internet',\r\n        'Topic :: Software Development :: Libraries',\r\n    ],\r\n    install_requires=[],\r\n    extras_require= {\r\n        'requests': ['requests'],\r\n        'aiohttp': ['aiohttp'],\r\n        'cachetools': ['cachetools']\r\n    }\r\n)\r\n```\r\n\r\n'c14n' in packages and 'cachetools' in extras_require?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606835638> <http://schema.org/identifier> "606835638"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606835638> <http://schema.org/startDate> "2020-03-31T19:45:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606835638> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606835638"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606896758> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606896758> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606896758> <http://schema.org/description> "Yep, when I add `'c14n'` to packages, then it will install for me. I already have cachetools installed, so not sure whether that's needed or not. It should be in `requirements.txt` though, rather than the package file, I think... but also not super familiar with the ins and outs of pypi package management!\r\n\r\nThen in order to reuse a context resolver, I need to add ContextResolver to `__all__` in jsonld.py\r\n\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606896758> <http://schema.org/identifier> "606896758"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606896758> <http://schema.org/startDate> "2020-03-31T21:52:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606896758> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606896758"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606897734> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606897734> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606897734> <http://schema.org/description> "Then I can do this:\r\n```py\r\nfrom pyld.jsonld import compact, expand, set_document_loader, ContextResolver\r\nimport json\r\nfrom cachetools import LRUCache\r\n\r\nresolved_context_cache = LRUCache(maxsize=1000)\r\ndocCache = {}\r\n\r\nfh = open('linked-art.json')\r\njs = json.load(fh)\r\nfh.close()\r\ndocCache[\"https://linked.art/ns/v1/linked-art.json\"] = \\\r\n\t{\r\n\t\t\"contextUrl\": None,\r\n\t\t\"documentUrl\": \"https://linked.art/ns/v1/linked-art.json\",\r\n\t\t\"document\": js\r\n\t}\r\n\r\ndef fetch(url):\r\n\tresp = requests.get(url)\r\n\treturn resp.json()\r\n\r\ndef load_document_and_cache(url, options={}):\r\n\tif url in docCache:\r\n\t\treturn docCache[url]\r\n\tdoc = {\"contextUrl\": None, \"documentUrl\": url, \"document\": \"\"}\r\n\tdoc[\"document\"] = fetch(url)\r\n\tdocCache[url] = doc\r\n\treturn doc\r\n\r\nset_document_loader(load_document_and_cache)\r\nresolver = ContextResolver(resolved_context_cache, load_document_and_cache)\r\n\r\nindata = {\"@context\":\"https://linked.art/ns/v1/linked-art.json\", \"id\": \"tag:foo\", \"type\": \"Person\"}\r\ne = expand(indata, options={'contextResolver': resolver})\r\n```\r\n\r\nAnd at the end of execution, the cache has a bunch of bits of context in it. Haven't tested to see if they get reused correctly, or if there's any improvement to speed of processing." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606897734> <http://schema.org/identifier> "606897734"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606897734> <http://schema.org/startDate> "2020-03-31T21:55:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606897734> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606897734"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901171> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901171> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901171> <http://schema.org/description> "cachetools is in requirements.txt, but I'll add other things that seem to be necessary; @dlongley or @davidlehn can always comment in their review before merge.\r\n\r\n> Yep, when I add `'c14n'` to packages, then it will install for me. I already have cachetools installed, so not sure whether that's needed or not. It should be in `requirements.txt` though, rather than the package file, I think... but also not super familiar with the ins and outs of pypi package management!\r\n> \r\n> Then in order to reuse a context resolver, I need to add ContextResolver to `__all__` in jsonld.py\r\n\r\nSeems like it should be `__all__` in `__init__.py`, not `jsonld.py`, as jsonld.py doesn't expose it.\r\n\r\nI'll push a commit that I think addresses both ContextResolver and Canonicalization." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901171> <http://schema.org/identifier> "606901171"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901171> <http://schema.org/startDate> "2020-03-31T22:03:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901171> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606901171"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901869> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901869> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901869> <http://schema.org/description> "It can expose it, because it imports it from context_resolver.  From a module API perspective, I think having it exposed from jsonld is cleaner, as it has *all* of the other functionality, spread across multiple classes and functions. Remembering which classes are in which files in this case would be a pain." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901869> <http://schema.org/identifier> "606901869"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901869> <http://schema.org/startDate> "2020-03-31T22:05:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606901869> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606901869"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906034> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906034> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906034> <http://schema.org/description> "For some reason, the travis results don't show here. Three tests fail in Python 3.5, but pass in 3.6, 3.7 and pypy. Needs more investigation." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906034> <http://schema.org/identifier> "606906034"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906034> <http://schema.org/startDate> "2020-03-31T22:16:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906034> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606906034"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906366> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906366> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906366> <http://schema.org/description> "I think it should be:\r\n\r\n```\r\n+from .Canonicalize import canonicalize\r\n\r\n+from .context_resolver import ContextResolver\r\n+from .resolved_context import ResolvedContext\r\n```\r\n\r\nto get it to reference the classes in the right files" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906366> <http://schema.org/identifier> "606906366"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906366> <http://schema.org/startDate> "2020-03-31T22:17:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606906366> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606906366"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606918352> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606918352> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606918352> <http://schema.org/description> "> I think it should be:\r\n> \r\n> ```\r\n> +from .Canonicalize import canonicalize\r\n> \r\n> +from .context_resolver import ContextResolver\r\n> +from .resolved_context import ResolvedContext\r\n> ```\r\n> \r\n> to get it to reference the classes in the right files\r\n\r\n\r\n`canonicalize` is in `c14n.Canonicalize`, trying to use `.Canonicalze` fails \"No module named 'pyld.Canonicalize'\".\r\n\r\nThe other two are in jsonld.py.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606918352> <http://schema.org/identifier> "606918352"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606918352> <http://schema.org/startDate> "2020-03-31T22:28:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606918352> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606918352"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606923952> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606923952> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606923952> <http://schema.org/description> "sorry, that first should be in c14n.__init__\n\nSent from Samsung S8, please excuse any typos or brevity\n\nOn Tue, Mar 31, 2020, 15:28 Gregg Kellogg <notifications@github.com> wrote:\n\n> I think it should be:\n>\n> +from .Canonicalize import canonicalize\n>\n> +from .context_resolver import ContextResolver\n> +from .resolved_context import ResolvedContext\n>\n> to get it to reference the classes in the right files\n>\n> canonicalize is in c14n.Canonicalize, trying to use .Canonicalze fails\n> \"No module named 'pyld.Canonicalize'\".\n>\n> The other two are in jsonld.py.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606918352>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAGU3PFBJZCFBTHSODSAZWTRKJVCBANCNFSM4LXBAYMQ>\n> .\n>\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606923952> <http://schema.org/identifier> "606923952"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606923952> <http://schema.org/startDate> "2020-03-31T22:45:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606923952> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606923952"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606949780> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606949780> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606949780> <http://schema.org/description> "@azaroth42 as in https://github.com/digitalbazaar/pyld/pull/112/commits/2711f57bbab97adbcb3b7061a3e01fea5c6b1762 and https://github.com/digitalbazaar/pyld/pull/112/commits/932bbe0ba5e1461e4bcb26a807c5b163938d4ea8?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606949780> <http://schema.org/identifier> "606949780"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606949780> <http://schema.org/startDate> "2020-04-01T00:01:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/606949780> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-606949780"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607509965> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607509965> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607509965> <http://schema.org/description> "Some minimal wall-clock benchmarking makes me think there's a fundamental issue somewhere in the code.  \r\n\r\nI have 150 different instances (enumerated here https://linked.art/example/index.json) and using the ContextResolver it takes 30 seconds to expand all of them.  Using master, it takes just 3 seconds! \r\n\r\nI haven't done profiling yet to see where it is spending so much time yet.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607509965> <http://schema.org/identifier> "607509965"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607509965> <http://schema.org/startDate> "2020-04-01T21:56:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607509965> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-607509965"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607512974> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607512974> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607512974> <http://schema.org/description> "It would certainly be worth checking to see if the ContextResolver is preventing access to those files. Also, how did you determine that time is spent parsing contexts? Perhaps it's somewhere else in the path.\r\n\r\nIt does seem that a profile is necessary." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607512974> <http://schema.org/identifier> "607512974"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607512974> <http://schema.org/startDate> "2020-04-01T22:04:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607512974> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-607512974"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607520508> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607520508> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607520508> <http://schema.org/description> "The timing wraps only the call to `expand()`.  \r\n\r\n```\r\nstart = time.time()\r\nfor indata in all_data:\r\n\te = expand(indata)\r\nprint(time.time() - start)\r\n```\r\n\r\nI haven't tried with your other 1.1 branch, I admit. So if this branch builds from that one, then it could be in some other path, I agree. Will report back (tomorrow) with profiling data." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607520508> <http://schema.org/identifier> "607520508"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607520508> <http://schema.org/startDate> "2020-04-01T22:26:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/607520508> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-607520508"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608153502> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608153502> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608153502> <http://schema.org/description> "The vast, vast majority of the time is spent deepcopying things:\r\n\r\n```\r\n      150    0.001    0.000   63.200    0.421 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pyld/jsonld.py:137(expand)\r\n      150    0.001    0.000   63.198    0.421 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pyld/jsonld.py:775(expand)\r\n 2921/150    0.109    0.000   63.181    0.421 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pyld/jsonld.py:2162(_expand)\r\n43563054/12068   28.329    0.000   59.429    0.005 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/copy.py:132(deepcopy)\r\n...\r\n```\r\n\r\nOf 63 seconds, 59 of them are spent in deepcopy()\r\n\r\nCompared to the version on pypi, doing exactly the same task:\r\n```\r\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\r\n      150    0.001    0.000    4.538    0.030 /Library/Python/2.7/site-packages/pyld/jsonld.py:148(expand)\r\n      150    0.002    0.000    4.538    0.030 /Library/Python/2.7/site-packages/pyld/jsonld.py:750(expand)\r\n 2921/150    0.020    0.000    3.592    0.024 /Library/Python/2.7/site-packages/pyld/jsonld.py:2026(_expand)\r\n     1127    0.006    0.000    3.450    0.003 /Library/Python/2.7/site-packages/pyld/jsonld.py:2701(_process_context)\r\n 1109/150    0.021    0.000    3.267    0.022 /Library/Python/2.7/site-packages/pyld/jsonld.py:2197(_expand_object)\r\n1134073/476    0.842    0.000    1.875    0.004 /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/copy.py:145(deepcopy)\r\n```\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608153502> <http://schema.org/identifier> "608153502"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608153502> <http://schema.org/startDate> "2020-04-02T23:55:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608153502> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-608153502"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608164478> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608164478> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608164478> <http://schema.org/description> "We should see how important those copies actually are. In some cases, I think they're because of the possibility of things being modified; If this were Virtual Memory, we'd do some form of copy-on-write operation.\r\n\r\nI'll look over it more tomorrow." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608164478> <http://schema.org/identifier> "608164478"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608164478> <http://schema.org/startDate> "2020-04-03T00:28:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608164478> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-608164478"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608169921> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608169921> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608169921> <http://schema.org/description> "But indeed the codepaths are not from this PR. The same profiling task on the `1.1-expansion` branch is much much worse again, by another factor of 10:\r\n\r\n```\r\n      150    0.001    0.000  893.278    5.955 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pyld/jsonld.py:129(expand)\r\n      150    0.023    0.000  893.277    5.955 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pyld/jsonld.py:764(expand)\r\n 1900/150    0.098    0.000  893.238    5.955 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pyld/jsonld.py:2133(_expand)\r\n45265/823    3.079    0.000  888.235    1.079 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pyld/jsonld.py:2953(_process_context)\r\n501207/371996    4.545    0.000  850.570    0.002 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pyld/jsonld.py:4854(_create_term_definition)\r\n  732/150    0.027    0.000  708.161    4.721 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pyld/jsonld.py:2363(_expand_object)\r\n531008400/83636  339.041    0.000  690.415    0.008 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/copy.py:132(deepcopy)\r\n```\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608169921> <http://schema.org/identifier> "608169921"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608169921> <http://schema.org/startDate> "2020-04-03T00:51:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608169921> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-608169921"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608175944> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608175944> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608175944> <http://schema.org/description> "@azaroth. Perhaps you can share some data and scripts you’re using for doing the benchmark. I suspect that more use of frozen objects can help to eliminate deep copies altogether. " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608175944> <http://schema.org/identifier> "608175944"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608175944> <http://schema.org/startDate> "2020-04-03T01:14:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608175944> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-608175944"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608199947> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608199947> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608199947> <http://schema.org/description> "\r\nHere's my profiler code, context and 150 example dataset:\r\n[profiler.zip](https://github.com/digitalbazaar/pyld/files/4424796/profiler.zip)\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608199947> <http://schema.org/identifier> "608199947"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608199947> <http://schema.org/startDate> "2020-04-03T02:47:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608199947> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-608199947"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608710286> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608710286> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608710286> <http://schema.org/description> "@azaroth42 It's better, but a bunch of calls to frozendict and _create_term_definition, which I wouldn't expect to much when reusing a context. There's still some work to do, but it seems faster.\r\n\r\n```\r\n         27991557 function calls (19130548 primitive calls) in 10.582 seconds\r\n\r\n   Ordered by: cumulative time\r\n\r\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\r\n      150    0.001    0.000   10.582    0.071 profiler/../lib/pyld/jsonld.py:140(expand)\r\n      150    0.001    0.000   10.581    0.071 profiler/../lib/pyld/jsonld.py:777(expand)\r\n 2921/150    0.016    0.000   10.565    0.070 profiler/../lib/pyld/jsonld.py:2164(_expand)\r\n9024/1127    0.160    0.000   10.361    0.009 profiler/../lib/pyld/jsonld.py:2984(_process_context)\r\n7256731/9003    3.132    0.000    6.892    0.001 profiler/../lib/pyld/jsonld.py:6389(freeze)\r\n1505009/9003    1.322    0.000    6.869    0.001 profiler/../lib/pyld/jsonld.py:6391(<listcomp>)\r\n    93555    0.709    0.000    2.433    0.000 profiler/../lib/pyld/jsonld.py:4856(_create_term_definition)\r\n  1524516    0.954    0.000    0.954    0.000 {method 'items' of 'dict' objects}\r\n  9379263    0.890    0.000    0.919    0.000 {built-in method builtins.isinstance}\r\n  1505009    0.834    0.000    0.834    0.000 /usr/local/lib/python3.7/site-packages/frozendict/__init__.py:24(__init__)\r\n 1109/150    0.021    0.000    0.759    0.005 profiler/../lib/pyld/jsonld.py:2394(_expand_object)\r\n   489322    0.175    0.000    0.691    0.000 /usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/re.py:170(match)\r\n   109030    0.238    0.000    0.583    0.000 profiler/../lib/pyld/jsonld.py:5291(_expand_iri)\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608710286> <http://schema.org/identifier> "608710286"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608710286> <http://schema.org/startDate> "2020-04-03T22:09:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608710286> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/113#issuecomment-608710286"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608755160> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608755160> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608755160> <http://schema.org/description> "It turns out that the initial context always has `@base` set to the document location, and as this is used to index into the ProcessedContext cache, it always end up missing.\r\n\r\nThe solution would seem to be to take `@base` out of that context (just leaving `processingMode`) and figure out how to do that at the end of `_process_context` using the options value if the resulting context doesn't have an `@base` element. This does mean returning a modified context, but should avoid other processing.\r\n\r\n@dlongley jsonld.js has the same issue.\r\n\r\nI also note that trying to do a cache of `_get_initial_context` introduces some instability, with some tests passing or failing intermittently. As it is, there are some periodic failures in the travis tests. My guess is that using `id()` on the active context is unreliable, and it sometimes hits on a context which was cached from a previous file. This shouldn't happen, but I don't know what else to tag it too. The solution may be, as is done in jsonld.js, to stringily the active context to use as a cache key, or a hash of that stringification, but you wouldn't think this would be necessary." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608755160> <http://schema.org/identifier> "608755160"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608755160> <http://schema.org/startDate> "2020-04-03T22:48:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608755160> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/113#issuecomment-608755160"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608858217> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608858217> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608858217> <http://schema.org/description> "I get similar profiling results, unsurprisingly :)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608858217> <http://schema.org/identifier> "608858217"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608858217> <http://schema.org/startDate> "2020-04-04T00:00:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608858217> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/113#issuecomment-608858217"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608874305> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608874305> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608874305> <http://schema.org/description> "Hmm, the test ran substantially faster for me, with much less time in deepcopy. But, `_process_context` is still up at the top. " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608874305> <http://schema.org/identifier> "608874305"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608874305> <http://schema.org/startDate> "2020-04-04T00:12:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608874305> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/113#issuecomment-608874305"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608875607> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608875607> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608875607> <http://schema.org/description> "Apologies, I meant similar results *to yours*, rather than to my previous results :)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608875607> <http://schema.org/identifier> "608875607"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608875607> <http://schema.org/startDate> "2020-04-04T00:14:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/608875607> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/113#issuecomment-608875607"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609103636> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609103636> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609103636> <http://schema.org/description> "@azaroth42 still dealing with key management fo context caching, but this update now does not put the base IRI in the active context, and it seems to hit the cache much better.\r\n\r\n```\r\n         3737480 function calls (3118485 primitive calls) in 1.099 seconds\r\n\r\n   Ordered by: cumulative time\r\n\r\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\r\n      150    0.000    0.000    1.099    0.007 profiler/../lib/pyld/jsonld.py:143(expand)\r\n      150    0.001    0.000    1.098    0.007 profiler/../lib/pyld/jsonld.py:780(expand)\r\n 2921/150    0.015    0.000    1.083    0.007 profiler/../lib/pyld/jsonld.py:2168(_expand)\r\n1180/1127    0.018    0.000    0.877    0.001 profiler/../lib/pyld/jsonld.py:2990(_process_context)\r\n 1109/150    0.021    0.000    0.751    0.005 profiler/../lib/pyld/jsonld.py:2398(_expand_object)\r\n496829/998    0.121    0.000    0.295    0.000 profiler/../lib/pyld/jsonld.py:6408(freeze)\r\n14731/998    0.080    0.000    0.292    0.000 profiler/../lib/pyld/jsonld.py:6410(<listcomp>)\r\n     1974    0.118    0.000    0.213    0.000 profiler/../lib/pyld/jsonld.py:5486(_clone_active_context)\r\n1330/1180    0.004    0.000    0.176    0.000 profiler/../lib/pyld/context_resolver.py:30(resolve)\r\n  1122009    0.141    0.000    0.169    0.000 {built-in method builtins.isinstance}\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609103636> <http://schema.org/identifier> "609103636"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609103636> <http://schema.org/startDate> "2020-04-04T23:26:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609103636> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/113#issuecomment-609103636"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487508> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487508> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487508> <http://schema.org/description> "With change to use UUIDs, seems to work consistently for Python 3.6 and greater." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487508> <http://schema.org/identifier> "609487508"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487508> <http://schema.org/startDate> "2020-04-05T21:31:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487508> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/113#issuecomment-609487508"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487865> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487865> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487865> <http://schema.org/description> "Since the base context-resolver branch has issues anyway, I'm going to go ahead and merge this into that.\r\n\r\nThere are things here to consider applying to jsonld.js, particularly removing `base` from the initial context." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487865> <http://schema.org/identifier> "609487865"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487865> <http://schema.org/startDate> "2020-04-05T21:33:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609487865> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/113#issuecomment-609487865"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609875049> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609875049> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609875049> <http://schema.org/description> "@davidlehn, please review." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609875049> <http://schema.org/identifier> "609875049"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609875049> <http://schema.org/startDate> "2020-04-06T15:46:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/609875049> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/108#issuecomment-609875049"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610530901> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610530901> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610530901> <http://schema.org/description> "@gkellogg Would you like us to test this branch (or another one?) against the full dataset? Or how do we feel confident to merge into 1.1, and then through to master?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610530901> <http://schema.org/identifier> "610530901"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610530901> <http://schema.org/startDate> "2020-04-07T17:50:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610530901> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-610530901"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610532466> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610532466> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610532466> <http://schema.org/description> "@azaroth42 this branch has all the latest changes for caching and should give the best performance. Hopefully, this and other branches will be merged into master sooner rather than later (particularly, as we need that to get an EARL report out for the WG implementation report)." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610532466> <http://schema.org/identifier> "610532466"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610532466> <http://schema.org/startDate> "2020-04-07T17:54:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610532466> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-610532466"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610631201> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610631201> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610631201> <http://schema.org/description> "@kasei reports this is \r\n> \"WAY FASTER\"  \r\n\r\nBut needs the setup to include the `frozendict` module.  (Which I noted when I was running it, but was too curious to see the results to pay attention to the details :D)\r\n\r\nWe're running our processing pipeline to compare." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610631201> <http://schema.org/identifier> "610631201"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610631201> <http://schema.org/startDate> "2020-04-07T21:31:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610631201> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-610631201"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610635554> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610635554> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610635554> <http://schema.org/description> "> @kasei reports this is\r\n> \r\n> > \"WAY FASTER\"\r\n> \r\n> But needs the setup to include the `frozendict` module. (Which I noted when I was running it, but was too curious to see the results to pay attention to the details :D)\r\n> \r\n> We're running our processing pipeline to compare.\r\n\r\nI added both 'frozendict' and 'uuid' to setup.py." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610635554> <http://schema.org/identifier> "610635554"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610635554> <http://schema.org/startDate> "2020-04-07T21:43:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/610635554> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-610635554"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612217386> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612217386> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612217386> <http://schema.org/description> "Details about \"way faster\" ... this branch as of a82c753 does expansion of our dataset in 4h20, whereas master takes 9h34 for exactly the same set of documents :)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612217386> <http://schema.org/identifier> "612217386"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612217386> <http://schema.org/startDate> "2020-04-10T21:05:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612217386> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-612217386"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612258286> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612258286> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612258286> <http://schema.org/description> "So, a bit more than twice as fast. Is that fast enough?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612258286> <http://schema.org/identifier> "612258286"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612258286> <http://schema.org/startDate> "2020-04-10T23:07:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612258286> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-612258286"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612259939> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612259939> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612259939> <http://schema.org/description> "Yep it's great for us, especially as master doesn't have all of the other\nfunctionality that you've added in this and the 1.1 branch!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612259939> <http://schema.org/identifier> "612259939"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612259939> <http://schema.org/startDate> "2020-04-10T23:11:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612259939> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/112#issuecomment-612259939"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612316539> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612316539> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612316539> <http://schema.org/description> "The profiler test code and data leaked into this PR.  I removed those.  Should be somewhere else." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612316539> <http://schema.org/identifier> "612316539"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612316539> <http://schema.org/startDate> "2020-04-11T03:49:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612316539> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/111#issuecomment-612316539"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612478840> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612478840> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612478840> <http://schema.org/description> "@davidlehn thanks for updating the test runner, much easier now." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612478840> <http://schema.org/identifier> "612478840"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612478840> <http://schema.org/startDate> "2020-04-11T18:02:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612478840> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/106#issuecomment-612478840"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612919929> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612919929> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612919929> <http://schema.org/description> "That comment demonstrates how to customize it, but because the cache is generated in the module, it works by default without any changes to code (which is great!). \r\n\r\n(which is not to say the docs aren't needed, just that they should be clear that you only need to do that if you want to change the default behavior)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612919929> <http://schema.org/identifier> "612919929"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612919929> <http://schema.org/startDate> "2020-04-13T14:24:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612919929> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/115#issuecomment-612919929"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612998633> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612998633> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612998633> <http://schema.org/description> "Presumably, jsonld.js could use the same documentation.\r\n\r\nBTW, I know @dlongley thought the `tag` aspect important; the only thing in either repo that would seem to be able to affect this is the `'tag': 'static'` done within the ContextResolver itself. Perhaps something got lost or is needed in the document loader, but it's not clear how or why this would be used." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612998633> <http://schema.org/identifier> "612998633"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612998633> <http://schema.org/startDate> "2020-04-13T17:22:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/612998633> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/115#issuecomment-612998633"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613840143> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613840143> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613840143> <http://schema.org/description> "Should now be fixed in 2.0.0." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613840143> <http://schema.org/identifier> "613840143"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613840143> <http://schema.org/startDate> "2020-04-15T06:20:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613840143> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/100#issuecomment-613840143"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613841052> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613841052> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613841052> <http://schema.org/description> "PyLD 2.0.0 has been released. It should be able to handle those examples." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613841052> <http://schema.org/identifier> "613841052"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613841052> <http://schema.org/startDate> "2020-04-15T06:23:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/613841052> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/99#issuecomment-613841052"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615085998> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615085998> <http://schema.org/creator> <https://api.github.com/users/Panaetius> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615085998> <http://schema.org/description> "The problem seems to only happen with more complex contexts, I can run it with the following document 10'000 times without the problem cropping up:\r\n```\r\n{\r\n    \"@context\": {\r\n        \"@version\": 1.1,\r\n        \"_id\": \"@id\",\r\n        \"_label\": \"rdfs:label\",\r\n        \"_message\": \"rdfs:comment\",\r\n        \"creator\": {\r\n            \"@context\": {\r\n                \"@version\": 1.1,\r\n                \"_id\": \"@id\",\r\n                \"affiliation\": \"schema:affiliation\",\r\n                \"alternate_name\": \"schema:alternateName\",\r\n                \"email\": \"schema:email\",\r\n                \"label\": \"rdfs:label\",\r\n                \"name\": \"schema:name\",\r\n                \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                \"schema\": \"http://schema.org/\"\r\n            },\r\n            \"@id\": \"schema:creator\"\r\n        },\r\n        \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n        \"schema\": \"http://schema.org/\",\r\n        \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n    },\r\n    \"creator\": {\r\n        \"@type\": [\r\n            \"prov:Person\",\r\n            \"schema:Person\"\r\n        ],\r\n        \"_id\": \"mailto:test@example.com\",\r\n        \"affiliation\": null,\r\n        \"alternate_name\": null,\r\n        \"email\": \"test@example.com\",\r\n        \"label\": \"Creator Name\",\r\n        \"name\": \"Creator Name\"\r\n    }\r\n}\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615085998> <http://schema.org/identifier> "615085998"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615085998> <http://schema.org/startDate> "2020-04-17T07:18:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615085998> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/119#issuecomment-615085998"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615092137> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615092137> <http://schema.org/creator> <https://api.github.com/users/Panaetius> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615092137> <http://schema.org/description> "<details> \r\n  <summary>This als works even though I saw the problem pop up in this `_project` object in the full example:</summary>\r\n<code>\r\n<pre>\r\n{\r\n    \"@context\": {\r\n        \"@version\": 1.1,\r\n        \"_id\": \"@id\",\r\n        \"_label\": \"rdfs:label\",\r\n        \"_message\": \"rdfs:comment\",\r\n        \"_project\": {\r\n            \"@context\": {\r\n                \"@version\": 1.1,\r\n                \"_id\": \"@id\",\r\n                \"created\": \"schema:dateCreated\",\r\n                \"creator\": {\r\n                    \"@context\": {\r\n                        \"@version\": 1.1,\r\n                        \"_id\": \"@id\",\r\n                        \"affiliation\": \"schema:affiliation\",\r\n                        \"alternate_name\": \"schema:alternateName\",\r\n                        \"email\": \"schema:email\",\r\n                        \"label\": \"rdfs:label\",\r\n                        \"name\": \"schema:name\",\r\n                        \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                        \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                        \"schema\": \"http://schema.org/\"\r\n                    },\r\n                    \"@id\": \"schema:creator\"\r\n                },\r\n                \"name\": \"schema:name\",\r\n                \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                \"schema\": \"http://schema.org/\",\r\n                \"updated\": \"schema:dateUpdated\",\r\n                \"version\": \"schema:schemaVersion\"\r\n            },\r\n            \"@id\": \"schema:isPartOf\"\r\n        },\r\n        \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n        \"schema\": \"http://schema.org/\",\r\n        \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n    },\r\n    \"@type\": [\r\n        \"prov:Activity\",\r\n        \"wfprov:ProcessRun\"\r\n    ],\r\n    \"_id\": \"https://localhost/activities/commit/3c2fb22cc8119e45baa97dde8cca92b2958da7e5\",\r\n    \"_label\": \"/tmp/tmp3ae6nixd/.renku/workflow/6061b7fc3297453c8d048ef01ddabea0_touch.yaml@3c2fb22cc8119e45baa97dde8cca92b2958da7e5\",\r\n    \"_message\": \"renku run: committing 1 newly added files\",\r\n    \"_project\": {\r\n        \"@type\": [\r\n            \"prov:Location\",\r\n            \"schema:Project\"\r\n        ],\r\n        \"_id\": \"https://localhost/projects/creator.lastname/tmp3ae6nixd\",\r\n        \"created\": \"2020-04-17T05:55:53.595428+00:00\",\r\n        \"creator\": {\r\n            \"@type\": [\r\n                \"prov:Person\",\r\n                \"schema:Person\"\r\n            ],\r\n            \"_id\": \"mailto:test@example.com\",\r\n            \"affiliation\": null,\r\n            \"alternate_name\": null,\r\n            \"email\": \"test@example.com\",\r\n            \"label\": \"Creator Name\",\r\n            \"name\": \"Creator Name\"\r\n        },\r\n        \"name\": \"tmp3ae6nixd\",\r\n        \"updated\": \"2020-04-17T05:55:53.606050+00:00\",\r\n        \"version\": \"5\"\r\n    }\r\n}\r\n</pre>\r\n</code>\r\n</details>\r\n<details> \r\n  <summary>This also works even though it has nested/type scoped contexts:</summary>\r\n<code>\r\n<pre>\r\n\r\n{\r\n    \"@context\": {\r\n        \"@version\": 1.1,\r\n        \"_id\": \"@id\",\r\n        \"_label\": \"rdfs:label\",\r\n        \"_message\": \"rdfs:comment\",\r\n        \"_project\": {\r\n            \"@context\": {\r\n                \"@version\": 1.1,\r\n                \"_id\": \"@id\",\r\n                \"created\": \"schema:dateCreated\",\r\n                \"creator\": {\r\n                    \"@context\": {\r\n                        \"@version\": 1.1,\r\n                        \"_id\": \"@id\",\r\n                        \"affiliation\": \"schema:affiliation\",\r\n                        \"alternate_name\": \"schema:alternateName\",\r\n                        \"email\": \"schema:email\",\r\n                        \"label\": \"rdfs:label\",\r\n                        \"name\": \"schema:name\",\r\n                        \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                        \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                        \"schema\": \"http://schema.org/\"\r\n                    },\r\n                    \"@id\": \"schema:creator\"\r\n                },\r\n                \"name\": \"schema:name\",\r\n                \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                \"schema\": \"http://schema.org/\",\r\n                \"updated\": \"schema:dateUpdated\",\r\n                \"version\": \"schema:schemaVersion\"\r\n            },\r\n            \"@id\": \"schema:isPartOf\"\r\n        },\r\n        \"generated\": {\r\n            \"@context\": {\r\n                \"@version\": 1.1,\r\n                \"_id\": \"@id\",\r\n                \"entity\": {\r\n                    \"@context\": [\r\n                        {\r\n                            \"@version\": 1.1,\r\n                            \"renku.core.models.entities.Entity_prov_Entity\": {\r\n                                \"@context\": {\r\n                                    \"@version\": 1.1,\r\n                                    \"_id\": \"@id\",\r\n                                    \"_label\": \"rdfs:label\",\r\n                                    \"_project\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"created\": \"schema:dateCreated\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"updated\": \"schema:dateUpdated\",\r\n                                            \"version\": \"schema:schemaVersion\"\r\n                                        },\r\n                                        \"@id\": \"schema:isPartOf\"\r\n                                    },\r\n                                    \"path\": \"prov:atLocation\",\r\n                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                    \"schema\": \"http://schema.org/\",\r\n                                    \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                },\r\n                                \"@id\": \"http://www.w3.org/ns/prov#Entity\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@version\": 1.1,\r\n                            \"renku.core.models.entities.Entity_wfprov_Artifact\": {\r\n                                \"@context\": {\r\n                                    \"@version\": 1.1,\r\n                                    \"_id\": \"@id\",\r\n                                    \"_label\": \"rdfs:label\",\r\n                                    \"_project\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"created\": \"schema:dateCreated\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"updated\": \"schema:dateUpdated\",\r\n                                            \"version\": \"schema:schemaVersion\"\r\n                                        },\r\n                                        \"@id\": \"schema:isPartOf\"\r\n                                    },\r\n                                    \"path\": \"prov:atLocation\",\r\n                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                    \"schema\": \"http://schema.org/\",\r\n                                    \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                },\r\n                                \"@id\": \"http://purl.org/wf4ever/wfprov#Artifact\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@version\": 1.1,\r\n                            \"renku.core.models.entities.Collection_prov_Collection\": {\r\n                                \"@context\": {\r\n                                    \"@version\": 1.1,\r\n                                    \"_id\": \"@id\",\r\n                                    \"_label\": \"rdfs:label\",\r\n                                    \"_project\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"created\": \"schema:dateCreated\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"updated\": \"schema:dateUpdated\",\r\n                                            \"version\": \"schema:schemaVersion\"\r\n                                        },\r\n                                        \"@id\": \"schema:isPartOf\"\r\n                                    },\r\n                                    \"members\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"_label\": \"rdfs:label\",\r\n                                            \"_project\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"created\": \"schema:dateCreated\",\r\n                                                    \"creator\": {\r\n                                                        \"@context\": {\r\n                                                            \"@version\": 1.1,\r\n                                                            \"_id\": \"@id\",\r\n                                                            \"affiliation\": \"schema:affiliation\",\r\n                                                            \"alternate_name\": \"schema:alternateName\",\r\n                                                            \"email\": \"schema:email\",\r\n                                                            \"label\": \"rdfs:label\",\r\n                                                            \"name\": \"schema:name\",\r\n                                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                            \"schema\": \"http://schema.org/\"\r\n                                                        },\r\n                                                        \"@id\": \"schema:creator\"\r\n                                                    },\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"schema\": \"http://schema.org/\",\r\n                                                    \"updated\": \"schema:dateUpdated\",\r\n                                                    \"version\": \"schema:schemaVersion\"\r\n                                                },\r\n                                                \"@id\": \"schema:isPartOf\"\r\n                                            },\r\n                                            \"path\": \"prov:atLocation\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                        },\r\n                                        \"@id\": \"prov:hadMember\"\r\n                                    },\r\n                                    \"path\": \"prov:atLocation\",\r\n                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                    \"schema\": \"http://schema.org/\",\r\n                                    \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                },\r\n                                \"@id\": \"http://www.w3.org/ns/prov#Collection\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@version\": 1.1,\r\n                            \"renku.core.models.entities.Collection_prov_Entity\": {\r\n                                \"@context\": {\r\n                                    \"@version\": 1.1,\r\n                                    \"_id\": \"@id\",\r\n                                    \"_label\": \"rdfs:label\",\r\n                                    \"_project\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"created\": \"schema:dateCreated\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"updated\": \"schema:dateUpdated\",\r\n                                            \"version\": \"schema:schemaVersion\"\r\n                                        },\r\n                                        \"@id\": \"schema:isPartOf\"\r\n                                    },\r\n                                    \"members\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"_label\": \"rdfs:label\",\r\n                                            \"_project\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"created\": \"schema:dateCreated\",\r\n                                                    \"creator\": {\r\n                                                        \"@context\": {\r\n                                                            \"@version\": 1.1,\r\n                                                            \"_id\": \"@id\",\r\n                                                            \"affiliation\": \"schema:affiliation\",\r\n                                                            \"alternate_name\": \"schema:alternateName\",\r\n                                                            \"email\": \"schema:email\",\r\n                                                            \"label\": \"rdfs:label\",\r\n                                                            \"name\": \"schema:name\",\r\n                                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                            \"schema\": \"http://schema.org/\"\r\n                                                        },\r\n                                                        \"@id\": \"schema:creator\"\r\n                                                    },\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"schema\": \"http://schema.org/\",\r\n                                                    \"updated\": \"schema:dateUpdated\",\r\n                                                    \"version\": \"schema:schemaVersion\"\r\n                                                },\r\n                                                \"@id\": \"schema:isPartOf\"\r\n                                            },\r\n                                            \"path\": \"prov:atLocation\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                        },\r\n                                        \"@id\": \"prov:hadMember\"\r\n                                    },\r\n                                    \"path\": \"prov:atLocation\",\r\n                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                    \"schema\": \"http://schema.org/\",\r\n                                    \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                },\r\n                                \"@id\": \"http://www.w3.org/ns/prov#Entity\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@version\": 1.1,\r\n                            \"renku.core.models.entities.Collection_wfprov_Artifact\": {\r\n                                \"@context\": {\r\n                                    \"@version\": 1.1,\r\n                                    \"_id\": \"@id\",\r\n                                    \"_label\": \"rdfs:label\",\r\n                                    \"_project\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"created\": \"schema:dateCreated\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"updated\": \"schema:dateUpdated\",\r\n                                            \"version\": \"schema:schemaVersion\"\r\n                                        },\r\n                                        \"@id\": \"schema:isPartOf\"\r\n                                    },\r\n                                    \"members\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"_label\": \"rdfs:label\",\r\n                                            \"_project\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"created\": \"schema:dateCreated\",\r\n                                                    \"creator\": {\r\n                                                        \"@context\": {\r\n                                                            \"@version\": 1.1,\r\n                                                            \"_id\": \"@id\",\r\n                                                            \"affiliation\": \"schema:affiliation\",\r\n                                                            \"alternate_name\": \"schema:alternateName\",\r\n                                                            \"email\": \"schema:email\",\r\n                                                            \"label\": \"rdfs:label\",\r\n                                                            \"name\": \"schema:name\",\r\n                                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                            \"schema\": \"http://schema.org/\"\r\n                                                        },\r\n                                                        \"@id\": \"schema:creator\"\r\n                                                    },\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"schema\": \"http://schema.org/\",\r\n                                                    \"updated\": \"schema:dateUpdated\",\r\n                                                    \"version\": \"schema:schemaVersion\"\r\n                                                },\r\n                                                \"@id\": \"schema:isPartOf\"\r\n                                            },\r\n                                            \"path\": \"prov:atLocation\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                        },\r\n                                        \"@id\": \"prov:hadMember\"\r\n                                    },\r\n                                    \"path\": \"prov:atLocation\",\r\n                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                    \"schema\": \"http://schema.org/\",\r\n                                    \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                },\r\n                                \"@id\": \"http://purl.org/wf4ever/wfprov#Artifact\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@version\": 1.1,\r\n                            \"renku.core.models.datasets.Dataset_prov_Entity\": {\r\n                                \"@context\": {\r\n                                    \"@version\": 1.1,\r\n                                    \"_id\": \"@id\",\r\n                                    \"_label\": \"rdfs:label\",\r\n                                    \"_project\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"created\": \"schema:dateCreated\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"updated\": \"schema:dateUpdated\",\r\n                                            \"version\": \"schema:schemaVersion\"\r\n                                        },\r\n                                        \"@id\": \"schema:isPartOf\"\r\n                                    },\r\n                                    \"created\": \"schema:dateCreated\",\r\n                                    \"creator\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"affiliation\": \"schema:affiliation\",\r\n                                            \"alternate_name\": \"schema:alternateName\",\r\n                                            \"email\": \"schema:email\",\r\n                                            \"label\": \"rdfs:label\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:creator\"\r\n                                    },\r\n                                    \"date_published\": \"schema:datePublished\",\r\n                                    \"description\": \"schema:description\",\r\n                                    \"files\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"_label\": \"rdfs:label\",\r\n                                            \"_project\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"created\": \"schema:dateCreated\",\r\n                                                    \"creator\": {\r\n                                                        \"@context\": {\r\n                                                            \"@version\": 1.1,\r\n                                                            \"_id\": \"@id\",\r\n                                                            \"affiliation\": \"schema:affiliation\",\r\n                                                            \"alternate_name\": \"schema:alternateName\",\r\n                                                            \"email\": \"schema:email\",\r\n                                                            \"label\": \"rdfs:label\",\r\n                                                            \"name\": \"schema:name\",\r\n                                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                            \"schema\": \"http://schema.org/\"\r\n                                                        },\r\n                                                        \"@id\": \"schema:creator\"\r\n                                                    },\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"schema\": \"http://schema.org/\",\r\n                                                    \"updated\": \"schema:dateUpdated\",\r\n                                                    \"version\": \"schema:schemaVersion\"\r\n                                                },\r\n                                                \"@id\": \"schema:isPartOf\"\r\n                                            },\r\n                                            \"added\": \"schema:dateCreated\",\r\n                                            \"based_on\": \"schema:isBasedOn\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"path\": \"prov:atLocation\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"url\": \"schema:url\",\r\n                                            \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                        },\r\n                                        \"@id\": \"schema:hasPart\"\r\n                                    },\r\n                                    \"identifier\": \"schema:identifier\",\r\n                                    \"in_language\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"alternate_name\": \"schema:alternateName\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:inLanguage\"\r\n                                    },\r\n                                    \"keywords\": \"schema:keywords\",\r\n                                    \"license\": \"schema:license\",\r\n                                    \"name\": \"schema:name\",\r\n                                    \"path\": \"prov:atLocation\",\r\n                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                    \"same_as\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"url\": \"schema:url\"\r\n                                        },\r\n                                        \"@id\": \"schema:sameAs\"\r\n                                    },\r\n                                    \"schema\": \"http://schema.org/\",\r\n                                    \"short_name\": \"schema:alternateName\",\r\n                                    \"tags\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"commit\": \"schema:location\",\r\n                                            \"created\": \"schema:startDate\",\r\n                                            \"dataset\": \"schema:about\",\r\n                                            \"description\": \"schema:description\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:subjectOf\"\r\n                                    },\r\n                                    \"url\": \"schema:url\",\r\n                                    \"version\": \"schema:version\",\r\n                                    \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                },\r\n                                \"@id\": \"http://www.w3.org/ns/prov#Entity\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@version\": 1.1,\r\n                            \"renku.core.models.datasets.Dataset_schema_Dataset\": {\r\n                                \"@context\": {\r\n                                    \"@version\": 1.1,\r\n                                    \"_id\": \"@id\",\r\n                                    \"_label\": \"rdfs:label\",\r\n                                    \"_project\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"created\": \"schema:dateCreated\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"updated\": \"schema:dateUpdated\",\r\n                                            \"version\": \"schema:schemaVersion\"\r\n                                        },\r\n                                        \"@id\": \"schema:isPartOf\"\r\n                                    },\r\n                                    \"created\": \"schema:dateCreated\",\r\n                                    \"creator\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"affiliation\": \"schema:affiliation\",\r\n                                            \"alternate_name\": \"schema:alternateName\",\r\n                                            \"email\": \"schema:email\",\r\n                                            \"label\": \"rdfs:label\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:creator\"\r\n                                    },\r\n                                    \"date_published\": \"schema:datePublished\",\r\n                                    \"description\": \"schema:description\",\r\n                                    \"files\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"_label\": \"rdfs:label\",\r\n                                            \"_project\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"created\": \"schema:dateCreated\",\r\n                                                    \"creator\": {\r\n                                                        \"@context\": {\r\n                                                            \"@version\": 1.1,\r\n                                                            \"_id\": \"@id\",\r\n                                                            \"affiliation\": \"schema:affiliation\",\r\n                                                            \"alternate_name\": \"schema:alternateName\",\r\n                                                            \"email\": \"schema:email\",\r\n                                                            \"label\": \"rdfs:label\",\r\n                                                            \"name\": \"schema:name\",\r\n                                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                            \"schema\": \"http://schema.org/\"\r\n                                                        },\r\n                                                        \"@id\": \"schema:creator\"\r\n                                                    },\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"schema\": \"http://schema.org/\",\r\n                                                    \"updated\": \"schema:dateUpdated\",\r\n                                                    \"version\": \"schema:schemaVersion\"\r\n                                                },\r\n                                                \"@id\": \"schema:isPartOf\"\r\n                                            },\r\n                                            \"added\": \"schema:dateCreated\",\r\n                                            \"based_on\": \"schema:isBasedOn\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"path\": \"prov:atLocation\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"url\": \"schema:url\",\r\n                                            \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                        },\r\n                                        \"@id\": \"schema:hasPart\"\r\n                                    },\r\n                                    \"identifier\": \"schema:identifier\",\r\n                                    \"in_language\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"alternate_name\": \"schema:alternateName\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:inLanguage\"\r\n                                    },\r\n                                    \"keywords\": \"schema:keywords\",\r\n                                    \"license\": \"schema:license\",\r\n                                    \"name\": \"schema:name\",\r\n                                    \"path\": \"prov:atLocation\",\r\n                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                    \"same_as\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"url\": \"schema:url\"\r\n                                        },\r\n                                        \"@id\": \"schema:sameAs\"\r\n                                    },\r\n                                    \"schema\": \"http://schema.org/\",\r\n                                    \"short_name\": \"schema:alternateName\",\r\n                                    \"tags\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"commit\": \"schema:location\",\r\n                                            \"created\": \"schema:startDate\",\r\n                                            \"dataset\": \"schema:about\",\r\n                                            \"description\": \"schema:description\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:subjectOf\"\r\n                                    },\r\n                                    \"url\": \"schema:url\",\r\n                                    \"version\": \"schema:version\",\r\n                                    \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                },\r\n                                \"@id\": \"http://schema.org/Dataset\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@version\": 1.1,\r\n                            \"renku.core.models.datasets.Dataset_wfprov_Artifact\": {\r\n                                \"@context\": {\r\n                                    \"@version\": 1.1,\r\n                                    \"_id\": \"@id\",\r\n                                    \"_label\": \"rdfs:label\",\r\n                                    \"_project\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"created\": \"schema:dateCreated\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"updated\": \"schema:dateUpdated\",\r\n                                            \"version\": \"schema:schemaVersion\"\r\n                                        },\r\n                                        \"@id\": \"schema:isPartOf\"\r\n                                    },\r\n                                    \"created\": \"schema:dateCreated\",\r\n                                    \"creator\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"affiliation\": \"schema:affiliation\",\r\n                                            \"alternate_name\": \"schema:alternateName\",\r\n                                            \"email\": \"schema:email\",\r\n                                            \"label\": \"rdfs:label\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:creator\"\r\n                                    },\r\n                                    \"date_published\": \"schema:datePublished\",\r\n                                    \"description\": \"schema:description\",\r\n                                    \"files\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"_label\": \"rdfs:label\",\r\n                                            \"_project\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"created\": \"schema:dateCreated\",\r\n                                                    \"creator\": {\r\n                                                        \"@context\": {\r\n                                                            \"@version\": 1.1,\r\n                                                            \"_id\": \"@id\",\r\n                                                            \"affiliation\": \"schema:affiliation\",\r\n                                                            \"alternate_name\": \"schema:alternateName\",\r\n                                                            \"email\": \"schema:email\",\r\n                                                            \"label\": \"rdfs:label\",\r\n                                                            \"name\": \"schema:name\",\r\n                                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                            \"schema\": \"http://schema.org/\"\r\n                                                        },\r\n                                                        \"@id\": \"schema:creator\"\r\n                                                    },\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"schema\": \"http://schema.org/\",\r\n                                                    \"updated\": \"schema:dateUpdated\",\r\n                                                    \"version\": \"schema:schemaVersion\"\r\n                                                },\r\n                                                \"@id\": \"schema:isPartOf\"\r\n                                            },\r\n                                            \"added\": \"schema:dateCreated\",\r\n                                            \"based_on\": \"schema:isBasedOn\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"path\": \"prov:atLocation\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"url\": \"schema:url\",\r\n                                            \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                        },\r\n                                        \"@id\": \"schema:hasPart\"\r\n                                    },\r\n                                    \"identifier\": \"schema:identifier\",\r\n                                    \"in_language\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"alternate_name\": \"schema:alternateName\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:inLanguage\"\r\n                                    },\r\n                                    \"keywords\": \"schema:keywords\",\r\n                                    \"license\": \"schema:license\",\r\n                                    \"name\": \"schema:name\",\r\n                                    \"path\": \"prov:atLocation\",\r\n                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                    \"same_as\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"url\": \"schema:url\"\r\n                                        },\r\n                                        \"@id\": \"schema:sameAs\"\r\n                                    },\r\n                                    \"schema\": \"http://schema.org/\",\r\n                                    \"short_name\": \"schema:alternateName\",\r\n                                    \"tags\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"commit\": \"schema:location\",\r\n                                            \"created\": \"schema:startDate\",\r\n                                            \"dataset\": \"schema:about\",\r\n                                            \"description\": \"schema:description\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:subjectOf\"\r\n                                    },\r\n                                    \"url\": \"schema:url\",\r\n                                    \"version\": \"schema:version\",\r\n                                    \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                },\r\n                                \"@id\": \"http://purl.org/wf4ever/wfprov#Artifact\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@version\": 1.1,\r\n                            \"renku.core.models.datasets.DatasetFile_prov_Entity\": {\r\n                                \"@context\": {\r\n                                    \"@version\": 1.1,\r\n                                    \"_id\": \"@id\",\r\n                                    \"_label\": \"rdfs:label\",\r\n                                    \"_project\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"created\": \"schema:dateCreated\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"updated\": \"schema:dateUpdated\",\r\n                                            \"version\": \"schema:schemaVersion\"\r\n                                        },\r\n                                        \"@id\": \"schema:isPartOf\"\r\n                                    },\r\n                                    \"added\": \"schema:dateCreated\",\r\n                                    \"based_on\": \"schema:isBasedOn\",\r\n                                    \"creator\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"affiliation\": \"schema:affiliation\",\r\n                                            \"alternate_name\": \"schema:alternateName\",\r\n                                            \"email\": \"schema:email\",\r\n                                            \"label\": \"rdfs:label\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:creator\"\r\n                                    },\r\n                                    \"name\": \"schema:name\",\r\n                                    \"path\": \"prov:atLocation\",\r\n                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                    \"schema\": \"http://schema.org/\",\r\n                                    \"url\": \"schema:url\",\r\n                                    \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                },\r\n                                \"@id\": \"http://www.w3.org/ns/prov#Entity\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@version\": 1.1,\r\n                            \"renku.core.models.datasets.DatasetFile_schema_DigitalDocument\": {\r\n                                \"@context\": {\r\n                                    \"@version\": 1.1,\r\n                                    \"_id\": \"@id\",\r\n                                    \"_label\": \"rdfs:label\",\r\n                                    \"_project\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"created\": \"schema:dateCreated\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"updated\": \"schema:dateUpdated\",\r\n                                            \"version\": \"schema:schemaVersion\"\r\n                                        },\r\n                                        \"@id\": \"schema:isPartOf\"\r\n                                    },\r\n                                    \"added\": \"schema:dateCreated\",\r\n                                    \"based_on\": \"schema:isBasedOn\",\r\n                                    \"creator\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"affiliation\": \"schema:affiliation\",\r\n                                            \"alternate_name\": \"schema:alternateName\",\r\n                                            \"email\": \"schema:email\",\r\n                                            \"label\": \"rdfs:label\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:creator\"\r\n                                    },\r\n                                    \"name\": \"schema:name\",\r\n                                    \"path\": \"prov:atLocation\",\r\n                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                    \"schema\": \"http://schema.org/\",\r\n                                    \"url\": \"schema:url\",\r\n                                    \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                },\r\n                                \"@id\": \"http://schema.org/DigitalDocument\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@version\": 1.1,\r\n                            \"renku.core.models.datasets.DatasetFile_wfprov_Artifact\": {\r\n                                \"@context\": {\r\n                                    \"@version\": 1.1,\r\n                                    \"_id\": \"@id\",\r\n                                    \"_label\": \"rdfs:label\",\r\n                                    \"_project\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"created\": \"schema:dateCreated\",\r\n                                            \"creator\": {\r\n                                                \"@context\": {\r\n                                                    \"@version\": 1.1,\r\n                                                    \"_id\": \"@id\",\r\n                                                    \"affiliation\": \"schema:affiliation\",\r\n                                                    \"alternate_name\": \"schema:alternateName\",\r\n                                                    \"email\": \"schema:email\",\r\n                                                    \"label\": \"rdfs:label\",\r\n                                                    \"name\": \"schema:name\",\r\n                                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                                    \"schema\": \"http://schema.org/\"\r\n                                                },\r\n                                                \"@id\": \"schema:creator\"\r\n                                            },\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"schema\": \"http://schema.org/\",\r\n                                            \"updated\": \"schema:dateUpdated\",\r\n                                            \"version\": \"schema:schemaVersion\"\r\n                                        },\r\n                                        \"@id\": \"schema:isPartOf\"\r\n                                    },\r\n                                    \"added\": \"schema:dateCreated\",\r\n                                    \"based_on\": \"schema:isBasedOn\",\r\n                                    \"creator\": {\r\n                                        \"@context\": {\r\n                                            \"@version\": 1.1,\r\n                                            \"_id\": \"@id\",\r\n                                            \"affiliation\": \"schema:affiliation\",\r\n                                            \"alternate_name\": \"schema:alternateName\",\r\n                                            \"email\": \"schema:email\",\r\n                                            \"label\": \"rdfs:label\",\r\n                                            \"name\": \"schema:name\",\r\n                                            \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                            \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                            \"schema\": \"http://schema.org/\"\r\n                                        },\r\n                                        \"@id\": \"schema:creator\"\r\n                                    },\r\n                                    \"name\": \"schema:name\",\r\n                                    \"path\": \"prov:atLocation\",\r\n                                    \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n                                    \"schema\": \"http://schema.org/\",\r\n                                    \"url\": \"schema:url\",\r\n                                    \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n                                },\r\n                                \"@id\": \"http://purl.org/wf4ever/wfprov#Artifact\"\r\n                            }\r\n                        }\r\n                    ],\r\n                    \"@reverse\": \"prov:qualifiedGeneration\"\r\n                },\r\n                \"prov\": \"http://www.w3.org/ns/prov#\",\r\n                \"role\": \"prov:hadRole\"\r\n            },\r\n            \"@reverse\": \"prov:activity\"\r\n        },\r\n        \"oa\": \"http://www.w3.org/ns/oa#\",\r\n        \"prov\": \"http://www.w3.org/ns/prov#\",\r\n        \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n        \"schema\": \"http://schema.org/\",\r\n        \"wfprov\": \"http://purl.org/wf4ever/wfprov#\"\r\n    },\r\n    \"@type\": [\r\n        \"prov:Activity\",\r\n        \"wfprov:ProcessRun\"\r\n    ],\r\n    \"_id\": \"https://localhost/activities/commit/3c2fb22cc8119e45baa97dde8cca92b2958da7e5\",\r\n    \"_label\": \"/tmp/tmp3ae6nixd/.renku/workflow/6061b7fc3297453c8d048ef01ddabea0_touch.yaml@3c2fb22cc8119e45baa97dde8cca92b2958da7e5\",\r\n    \"_message\": \"renku run: committing 1 newly added files\",\r\n    \"_project\": {\r\n        \"@type\": [\r\n            \"prov:Location\",\r\n            \"schema:Project\"\r\n        ],\r\n        \"_id\": \"https://localhost/projects/creator.lastname/tmp3ae6nixd\",\r\n        \"created\": \"2020-04-17T05:55:53.595428+00:00\",\r\n        \"creator\": {\r\n            \"@type\": [\r\n                \"prov:Person\",\r\n                \"schema:Person\"\r\n            ],\r\n            \"_id\": \"mailto:test@example.com\",\r\n            \"affiliation\": null,\r\n            \"alternate_name\": null,\r\n            \"email\": \"test@example.com\",\r\n            \"label\": \"Creator Name\",\r\n            \"name\": \"Creator Name\"\r\n        },\r\n        \"name\": \"tmp3ae6nixd\",\r\n        \"updated\": \"2020-04-17T05:55:53.606050+00:00\",\r\n        \"version\": \"5\"\r\n    },\r\n    \"generated\": [\r\n        {\r\n            \"@type\": \"prov:Generation\",\r\n            \"_id\": \"https://localhost/activities/commit/3c2fb22cc8119e45baa97dde8cca92b2958da7e5/tree/baz\",\r\n            \"entity\": {\r\n                \"@type\": [\r\n                    \"renku.core.models.entities.Entity_prov_Entity\",\r\n                    \"renku.core.models.entities.Entity_wfprov_Artifact\"\r\n                ],\r\n                \"_id\": \"https://localhost/blob/3c2fb22cc8119e45baa97dde8cca92b2958da7e5/baz\",\r\n                \"_label\": \"baz@3c2fb22cc8119e45baa97dde8cca92b2958da7e5\",\r\n                \"_project\": {\r\n                    \"@type\": [\r\n                        \"prov:Location\",\r\n                        \"schema:Project\"\r\n                    ],\r\n                    \"_id\": \"https://localhost/projects/creator.lastname/tmp3ae6nixd\",\r\n                    \"created\": \"2020-04-17T05:55:53.595428+00:00\",\r\n                    \"creator\": {\r\n                        \"@type\": [\r\n                            \"prov:Person\",\r\n                            \"schema:Person\"\r\n                        ],\r\n                        \"_id\": \"mailto:test@example.com\",\r\n                        \"affiliation\": null,\r\n                        \"alternate_name\": null,\r\n                        \"email\": \"test@example.com\",\r\n                        \"label\": \"Creator Name\",\r\n                        \"name\": \"Creator Name\"\r\n                    },\r\n                    \"name\": \"tmp3ae6nixd\",\r\n                    \"updated\": \"2020-04-17T05:55:53.606050+00:00\",\r\n                    \"version\": \"5\"\r\n                },\r\n                \"path\": \"baz\"\r\n            },\r\n            \"role\": null\r\n        }\r\n    ]\r\n}\r\n</pre>\r\n</code>\r\n</details>\r\n\r\n(expand to see the full thing, don't want to clutter the conversation)" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615092137> <http://schema.org/identifier> "615092137"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615092137> <http://schema.org/startDate> "2020-04-17T07:33:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615092137> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/119#issuecomment-615092137"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615372795> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615372795> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615372795> <http://schema.org/description> "Thanks, @Panaetius, I'll take a look. It's really useful to have something repeatable.\r\n\r\nThe update uses internal dicts and an LRU cache for retaining referenced contexts, and the result of processing them relative to an active context. Keys are all created via UUIDs or the actual body of the context, so it's hard to see where there could be a collision, but there may be some internal memory issues that are getting triggered.\r\n\r\nAs the ContextResolver can be specified at runtime, we can probably come up with a version that doesn't actually cache easily enough, or parameterize the creation of the ContextResolver to not cache. This would be a big performance loss, but would likely be a short-term solution to the problem you're seeing." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615372795> <http://schema.org/identifier> "615372795"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615372795> <http://schema.org/startDate> "2020-04-17T17:32:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615372795> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/119#issuecomment-615372795"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615407687> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615407687> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615407687> <http://schema.org/description> "The problem was due to code which was not replaced which used `id(active_ctx)` rather than `active_ctx['_uuid']` to index into the inverse context cache, and it seems that object identifiers are recycled." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615407687> <http://schema.org/identifier> "615407687"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615407687> <http://schema.org/startDate> "2020-04-17T18:51:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/615407687> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/120#issuecomment-615407687"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616342830> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616342830> <http://schema.org/creator> <https://api.github.com/users/Panaetius> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616342830> <http://schema.org/description> "@gkellogg Thank you very much for the quick reply and fix! Yes this does solve the issue for me and all tests on our side pass when using this branch." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616342830> <http://schema.org/identifier> "616342830"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616342830> <http://schema.org/startDate> "2020-04-20T06:39:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616342830> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/120#issuecomment-616342830"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616343335> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616343335> <http://schema.org/creator> <https://api.github.com/users/Panaetius> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616343335> <http://schema.org/description> "Thank you very much! 🚀 " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616343335> <http://schema.org/identifier> "616343335"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616343335> <http://schema.org/startDate> "2020-04-20T06:41:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616343335> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/119#issuecomment-616343335"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616676442> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616676442> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616676442> <http://schema.org/description> "Released in 2.0.2." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616676442> <http://schema.org/identifier> "616676442"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616676442> <http://schema.org/startDate> "2020-04-20T16:46:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616676442> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/120#issuecomment-616676442"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616812536> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616812536> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616812536> <http://schema.org/description> "I literally released a new version earlier today.  Please adjust your scanning method.  Thanks." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616812536> <http://schema.org/identifier> "616812536"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616812536> <http://schema.org/startDate> "2020-04-20T21:13:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616812536> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/121#issuecomment-616812536"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616831574> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616831574> <http://schema.org/creator> <https://api.github.com/users/sospedra> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616831574> <http://schema.org/description> "Sorry for any inconveniences I just released the first version of `rfm` yesterday. I'll keep what you mentioned about releases in mind ;)\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616831574> <http://schema.org/identifier> "616831574"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616831574> <http://schema.org/startDate> "2020-04-20T21:54:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/616831574> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/121#issuecomment-616831574"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/61996763> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/61996763> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/61996763> <http://schema.org/description> "Did you have a base URL set? Relative URLs should work fine -- but pyld did have an issue (that has now been resolved) where you couldn't load a context from, for instance, a `file://` scheme. You can do that now, but you have to specify a custom document loader (not difficult). If you were just trying to load a relative context URL, that should work -- so long as a base has been set (base should be set automatically if you're loading the document itself from a URL, but if it's just JSON input it won't know what to use for the base).\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/61996763> <http://schema.org/identifier> "61996763"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/61996763> <http://schema.org/startDate> "2014-11-06T15:35:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/61996763> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/35#issuecomment-61996763"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62001357> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62001357> <http://schema.org/creator> <https://api.github.com/users/faassen> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62001357> <http://schema.org/description> "Your mention of a document loader makes me realize that of course a `/foo` context URL cannot be resolved unless I tell a document loader where to load URLs from, i.e. supply something like a base, probably through another document loader. Sorry about the noise here.\n\nDoes the 'base' option in the Python API also affect the default document loader? The `@base` set within the context, but is that the same as the base option in the Python API?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62001357> <http://schema.org/identifier> "62001357"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62001357> <http://schema.org/startDate> "2014-11-06T16:01:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62001357> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/35#issuecomment-62001357"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62014882> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62014882> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62014882> <http://schema.org/description> "`@base` isn't the same as the base option within the API, but they are related.\n\nThe processing rules for establishing an \"active base\" are like this (at a high-level):\n1. If the base API option has been specified, set the \"active base\" to it.\n2. If no base API has been specified but the input is a URL, set the \"active base\" to the URL, otherwise set it to none.\n3. Start processing the input document; if you see `@base` in the `@context` and the input is a URL, ignore `@base`, if it's JSON set the \"active base\" to the value of `@base`. (You can't change the base via `@base` in a remote document for a number of different reasons).\n\nSo, in short, the base API option will \"override\" any URL for the input document. If the input is JSON and it has `@base`, then that value will be used.\n\nDoes that make sense?\n\nURLs given to document loaders will have already been resolved against the \"active base\". So neither the default document loader or a custom document loader need to be concerned with this. If you need to set a specific base that is different from the URL of the input document, just use the base API option.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62014882> <http://schema.org/identifier> "62014882"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62014882> <http://schema.org/startDate> "2014-11-06T17:13:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/62014882> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/35#issuecomment-62014882"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623596892> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623596892> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623596892> <http://schema.org/description> "Passing a string to `jsonld.expand` is treated as the URL of a remote document. To pass local data, parse it as JSON first, and pass the native data-structures." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623596892> <http://schema.org/identifier> "623596892"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623596892> <http://schema.org/startDate> "2020-05-04T17:25:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623596892> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/122#issuecomment-623596892"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623605443> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623605443> <http://schema.org/creator> <https://api.github.com/users/James-Hudson3010> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623605443> <http://schema.org/description> "confirmed. my silly mistake." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623605443> <http://schema.org/identifier> "623605443"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623605443> <http://schema.org/startDate> "2020-05-04T17:42:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/623605443> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/122#issuecomment-623605443"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/632938536> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/632938536> <http://schema.org/creator> <https://api.github.com/users/bcipolli> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/632938536> <http://schema.org/description> "@davidlehn An example for, given a json-ld file, how would one open it? Use it? Get dependencies? Complete mystery." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/632938536> <http://schema.org/identifier> "632938536"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/632938536> <http://schema.org/startDate> "2020-05-22T23:03:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/632938536> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/62#issuecomment-632938536"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314334> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314334> <http://schema.org/creator> <https://api.github.com/users/faassen> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314334> <http://schema.org/description> "I will need to look into the details of the API sometime and try it out, but it makes sense. Thanks!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314334> <http://schema.org/identifier> "63314334"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314334> <http://schema.org/startDate> "2014-11-17T14:46:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314334> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/35#issuecomment-63314334"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314687> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314687> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314687> <http://schema.org/description> "Sure :)\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314687> <http://schema.org/identifier> "63314687"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314687> <http://schema.org/startDate> "2014-11-17T14:48:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63314687> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/35#issuecomment-63314687"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63385481> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63385481> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63385481> <http://schema.org/description> "The input data (`description`) has no context that defines `sc:hasImageAnnotations` as an `@list`. Therefore, it is a `@set`. Arrays in JSON-LD are, by default, sets, not lists. So, when compacting using the context you provided, the term \"images\" does not match the data so it isn't selected for use in the output. Does that make sense? This is also why, when you remove `@container`, it does get selected.\n\nThis has to do with the compaction algorithm (not framing in particular) -- see: [Term Selection](http://www.w3.org/TR/json-ld-api/#term-selection) for all the details if you want. In short, terms are only selected for use in the compacted output if they properly match the data.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63385481> <http://schema.org/identifier> "63385481"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63385481> <http://schema.org/startDate> "2014-11-17T22:09:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63385481> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/36#issuecomment-63385481"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63386308> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63386308> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63386308> <http://schema.org/description> "It's also worth noting that your frame doesn't actually have anything in it -- so you're effectively just doing the same thing that `compact` would do. The second parameter to the frame API is a frame ... not just a context. The frame may contain a context -- which is why your input is valid, but that's the only thing in there in the example you've provided. Normally there would also be other properties listed that are used to filter and structure the output in a particular way. If you don't need to filter/structure the output, you can just use `compact`.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63386308> <http://schema.org/identifier> "63386308"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63386308> <http://schema.org/startDate> "2014-11-17T22:15:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63386308> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/36#issuecomment-63386308"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63390523> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63390523> <http://schema.org/creator> <https://api.github.com/users/edsu> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63390523> <http://schema.org/description> "Thanks! Clearly I have some reading to do. I appreciate you taking the time to put me on the right path.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63390523> <http://schema.org/identifier> "63390523"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63390523> <http://schema.org/startDate> "2014-11-17T22:42:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63390523> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/36#issuecomment-63390523"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63411291> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63411291> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63411291> <http://schema.org/description> "Sure :).\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63411291> <http://schema.org/identifier> "63411291"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63411291> <http://schema.org/startDate> "2014-11-18T02:04:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/63411291> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/36#issuecomment-63411291"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/638387844> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/638387844> <http://schema.org/creator> <https://api.github.com/users/umang0202> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/638387844> <http://schema.org/description> "Seems like this is a problem with schema.org contexts as well (https://github.com/schemaorg/schemaorg/issues/2578#issuecomment-632227864)\r\n\r\nI was stuck in the same problem. Ended up using requests to get the context JSON separately and assign it to @context key at runtime. Then the pyld functions work!\r\n\r\nHope this helps" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/638387844> <http://schema.org/identifier> "638387844"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/638387844> <http://schema.org/startDate> "2020-06-03T18:41:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/638387844> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/105#issuecomment-638387844"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/639208842> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/639208842> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/639208842> <http://schema.org/description> "\"https://schema.repronim.org/rl/activities/PHQ-9/phq9_context\" is returning 405 as of today.  Removing that URL and playground or pyld can expand things.  If you want the normalize call to work the `\"@id\": \"phq9_schema\"` needs to be a valid URI.  If you change that to `\"@id\": \"urn:phq9_schema\"`, you'll get output." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/639208842> <http://schema.org/identifier> "639208842"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/639208842> <http://schema.org/startDate> "2020-06-05T01:45:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/639208842> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/105#issuecomment-639208842"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/640972665> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/640972665> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/640972665> <http://schema.org/description> "The `@embed` flag isn't used for that type of resource loading.  I think you would have to load such resources yourself.  The framing code can be used to merge and reshape the data for you though." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/640972665> <http://schema.org/identifier> "640972665"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/640972665> <http://schema.org/startDate> "2020-06-09T01:23:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/640972665> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/126#issuecomment-640972665"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229817> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229817> <http://schema.org/creator> <https://api.github.com/users/gcarothers> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229817> <http://schema.org/description> "Still broken folks.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229817> <http://schema.org/identifier> "64229817"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229817> <http://schema.org/startDate> "2014-11-24T17:25:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229817> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/30#issuecomment-64229817"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229920> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229920> <http://schema.org/creator> <https://api.github.com/users/gcarothers> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229920> <http://schema.org/description> "Updated guide on version numbers http://python-packaging-user-guide.readthedocs.org/en/latest/development.html#single-sourcing-the-version\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229920> <http://schema.org/identifier> "64229920"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229920> <http://schema.org/startDate> "2014-11-24T17:26:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64229920> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/30#issuecomment-64229920"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64239900> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64239900> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64239900> <http://schema.org/description> "Sorry this hasn't been fixed yet.  We're very busy at the moment.  If anyone has time to make a patch, that would be greatly appreciated.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64239900> <http://schema.org/identifier> "64239900"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64239900> <http://schema.org/startDate> "2014-11-24T18:29:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/64239900> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/30#issuecomment-64239900"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642551159> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642551159> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642551159> <http://schema.org/description> "Thanks for the reply.\r\n\r\n- Is there any other way than `@embed` to work with frames that will automatically fetch remote documents? Or is it completely outside the specification of jsonld?\r\n- \"The framing code can be used to merge...\" what would be an example of merging? How can I merge 2 separate docs and apply 1 frame (with pyld)?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642551159> <http://schema.org/identifier> "642551159"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642551159> <http://schema.org/startDate> "2020-06-11T10:13:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642551159> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/126#issuecomment-642551159"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642876115> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642876115> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642876115> <http://schema.org/description> "- Re remote doc fetching: As a general problem, that's difficult to solve.  You can't know which resources to load.  In some small structure it may seem obvious, but if you expanded the data so there were properties linking off to lots of other resources, how would you know which ones to load?  So I think that's going to have to be at an application level.  You could scan your data for particular properties and load them.  And once you have all that data loaded... on to part 2:\r\n- Here's a framing example.  It's a bit old, there may be better ways to do this now, but hopefully it gets the idea across.  You externally load all your people docs (like alice), make a `@graph` container doc with all the other docs, frame it, and extract and build your output:\r\n\r\n```python\r\n#!/usr/bin/env python\r\n# coding=utf-8\r\n\r\nimport os\r\nimport sys\r\n# setup to run this code from pyld/tmp/example/\r\nsys.path.insert(0, os.path.join(os.path.dirname(__file__), '../..', 'lib'))\r\nfrom pyld import jsonld\r\nimport json\r\n\r\nctx = {\r\n    \"knows\": {\"@type\": \"@id\", \"@id\": \"https://example.com/knows\"},\r\n    \"name\": \"https://example.com/name\"\r\n}\r\ndoc = {\r\n    \"@context\": ctx,\r\n    \"knows\": \"https://example.org/alice\"\r\n}\r\nalice = {\r\n    \"@id\": \"https://example.org/alice\",\r\n    \"name\": \"Alice\"\r\n}\r\n\r\nframe = {\r\n    \"@context\": ctx,\r\n    \"@embed\": \"@always\"\r\n}\r\ndata = {\r\n    \"@context\": ctx,\r\n    \"@graph\": [\r\n        doc,\r\n        alice\r\n    ]\r\n}\r\n\r\nprint('---DATA---')\r\nprint(json.dumps(data, indent=2))\r\n\r\nframed = jsonld.frame(data, frame)\r\nprint('---FRAMED---')\r\nprint(json.dumps(framed, indent=2))\r\n\r\noutput = framed[\"@graph\"][0].copy()\r\noutput[\"@context\"] = framed[\"@context\"]\r\nprint('---OUTPUT---')\r\nprint(json.dumps(output, indent=2))\r\n```\r\n```json\r\n---DATA---\r\n{\r\n  \"@context\": {\r\n    \"knows\": {\r\n      \"@type\": \"@id\",\r\n      \"@id\": \"https://example.com/knows\"\r\n    },\r\n    \"name\": \"https://example.com/name\"\r\n  },\r\n  \"@graph\": [\r\n    {\r\n      \"@context\": {\r\n        \"knows\": {\r\n          \"@type\": \"@id\",\r\n          \"@id\": \"https://example.com/knows\"\r\n        },\r\n        \"name\": \"https://example.com/name\"\r\n      },\r\n      \"knows\": \"https://example.org/alice\"\r\n    },\r\n    {\r\n      \"@id\": \"https://example.org/alice\",\r\n      \"name\": \"Alice\"\r\n    }\r\n  ]\r\n}\r\n---FRAMED---\r\n{\r\n  \"@context\": {\r\n    \"knows\": {\r\n      \"@type\": \"@id\",\r\n      \"@id\": \"https://example.com/knows\"\r\n    },\r\n    \"name\": \"https://example.com/name\"\r\n  },\r\n  \"@graph\": [\r\n    {\r\n      \"knows\": {\r\n        \"@id\": \"https://example.org/alice\",\r\n        \"name\": \"Alice\"\r\n      }\r\n    },\r\n    {\r\n      \"@id\": \"https://example.org/alice\",\r\n      \"name\": \"Alice\"\r\n    }\r\n  ]\r\n}\r\n---OUTPUT---\r\n{\r\n  \"knows\": {\r\n    \"@id\": \"https://example.org/alice\",\r\n    \"name\": \"Alice\"\r\n  },\r\n  \"@context\": {\r\n    \"knows\": {\r\n      \"@type\": \"@id\",\r\n      \"@id\": \"https://example.com/knows\"\r\n    },\r\n    \"name\": \"https://example.com/name\"\r\n  }\r\n}\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642876115> <http://schema.org/identifier> "642876115"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642876115> <http://schema.org/startDate> "2020-06-11T19:10:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/642876115> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/126#issuecomment-642876115"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/643225190> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/643225190> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/643225190> <http://schema.org/description> "Thank you, that makes sense. However I think that a flag to automatically fetch remote documents might not be too difficult. What I mean is that `@embed` right now works like this: if the document contains a term `\"knows\": \"URL\"`, both `\"@embed\": \"@always\"` and `\"@embed\": \"@never\"` produce the output `\"knows\": \"URL\"`. However if the document contains the actual node, `\"@embed\": \"@never\"` produces`\"knows\": \"URL\"` wheres `\"@embed\": \"@always\"` produces `\"knows\": { \"@id\":..., \"name\":... }`. You're right that frames can be pretty complex but, I think, if `\"@embed\": \"@always\"` is *already* producing a URL in the output, it would be useful to have a flag that automatically tries to fetch that particular document. Or am I wrong?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/643225190> <http://schema.org/identifier> "643225190"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/643225190> <http://schema.org/startDate> "2020-06-12T11:38:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/643225190> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/126#issuecomment-643225190"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/644506164> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/644506164> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/644506164> <http://schema.org/description> "Doing that type of processing is beyond the scope of the API here.\r\n\r\nPerhaps it's worth exploring a multi-step transformation in your app to get the same effect.  Frame the data to find all the \"knows\" data, dereference that data in your app as appropriate, and merge the original data and all the \"knows\" results with a new frame.  I think the output would be the same, it's just pushing the details and complexity up to the app." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/644506164> <http://schema.org/identifier> "644506164"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/644506164> <http://schema.org/startDate> "2020-06-16T03:14:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/644506164> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/126#issuecomment-644506164"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646067285> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646067285> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646067285> <http://schema.org/description> "mmm I think [this](https://github.com/digitalbazaar/pyld/blob/de5130b4a9316ac189a449ac9157c151c8a06667/lib/pyld/jsonld.py#L128) could be what I'm looking for?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646067285> <http://schema.org/identifier> "646067285"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646067285> <http://schema.org/startDate> "2020-06-18T14:46:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646067285> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/127#issuecomment-646067285"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646076099> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646076099> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646076099> <http://schema.org/description> "Try using `”@type”: “@none”` in the term definition for values you want to keep expanded when compacting, possibly also using `”@container”: “@set”`." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646076099> <http://schema.org/identifier> "646076099"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646076099> <http://schema.org/startDate> "2020-06-18T14:59:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646076099> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/127#issuecomment-646076099"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415812> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415812> <http://schema.org/creator> <https://api.github.com/users/alpha-beta-soup> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415812> <http://schema.org/description> "After reviewing the source, it doesn't seem to be the case that pyld doesn't inspect `Link` headers, but that it does [`response.json()`](https://github.com/digitalbazaar/pyld/blob/f5d2814ead6b9b7da4bac6ad47ed34e8e3d6e218/lib/pyld/documentloader/requests.py#L72), triggering an exception right before the `Link` header would be inspected, so it never gets that far. This can possibly be avoided by first checking whether the `Content-Type` is some kind of JSON (since https://schema.org will response with HTML). The error suggests that for whatever reason, at the point of the exception, `response` is `None`.\r\n\r\n> pyld.jsonld.JsonLdError: ('Dereferencing a URL did not result in a valid JSON-LD object. Possible causes are an inaccessible URL perhaps due to a same-origin policy (ensure the server uses CORS if you are using client-side JavaScript), too many redirects, **a non-JSON response**, or more than one HTTP Link Header was provided for a remote context.',)\r\n\r\nWhy require JSON repsonses if the `Link` of type `alternate` is intented to point to the *alternate* representation? https://html.spec.whatwg.org/multipage/links.html#rel-alternate\r\n\r\n> If the alternate keyword is used with the type attribute, it indicates that the referenced document is a reformulation of the current document in the specified format.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415812> <http://schema.org/identifier> "646415812"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415812> <http://schema.org/startDate> "2020-06-19T03:31:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415812> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/128#issuecomment-646415812"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415845> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415845> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415845> <http://schema.org/description> "The Link handling code is in the document loaders right below where that json() call happens.  Quite possible that code hadn't been properly tested before.  If someone has time to refactor that code to handle Link header in the proper order, that would be great." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415845> <http://schema.org/identifier> "646415845"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415845> <http://schema.org/startDate> "2020-06-19T03:31:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/646415845> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/128#issuecomment-646415845"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/647192558> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/647192558> <http://schema.org/creator> <https://api.github.com/users/alpha-beta-soup> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/647192558> <http://schema.org/description> "@davidlehn I'm trying to learn how the tests are put together, to get a clear failing case before trying to fix the issue. If you can help with that, I'm willing to try and fix it.\r\n\r\nI have the existing test suite running (although I get five failures). To that I've added a `manifest.json` in the root, and two test cases at the root as well.\r\n\r\n`manifest.json`:\r\n\r\n```\r\n{\r\n  \"@context\": [\"context.jsonld\", {\"@base\": \"manifest\"}],\r\n  \"@id\": \"\",\r\n  \"@type\": \"mf:Manifest\",\r\n  \"name\": \"JSON-LD Test Suite\",\r\n  \"description\": \"This manifest loads some tests for resolving https://github.com/digitalbazaar/pyld/issues/128\",\r\n  \"sequence\": [\r\n    \"sample.jsonld\",\r\n    \"sample2.jsonld\"\r\n  ]\r\n}\r\n```\r\n\r\n`sample.jsonld`\r\n\r\n```\r\n{\r\n\t\"@context\": \"https://schema.org\",\r\n\t\"@type\":\"Dataset\",\r\n\t\"@id\":\"http://localhost:5000/collections/obs\",\r\n\t\"url\":\"http://localhost:5000/collections/obs\"\r\n}\r\n```\r\n\r\n`sample2.jsonld`\r\n\r\n```\r\n{\r\n\t\"@context\": \"https://schema.org/docs/jsonldcontext.jsonld\",\r\n\t\"@type\":\"Dataset\",\r\n\t\"@id\":\"http://localhost:5000/collections/obs\",\r\n\t\"url\":\"http://localhost:5000/collections/obs\"\r\n}\r\n```\r\n\r\nI run the tests in a virtual environment as: `python tests/runtests.py ./manifest.jsonld`, but the test suite skips them:\r\n\r\n```\r\n/usr/lib/python3/dist-packages/requests/__init__.py:80: RequestsDependencyWarning: urllib3 (1.24.1) or chardet (3.0.4) doesn't match a supported version!\r\n  RequestsDependencyWarning)\r\nPyLD Tests\r\nUse -h or --help to view options.\r\n\r\nJSON-LD Test Suite: http://localhost:5000/collections/obs: None ... skipped \"Test type of ['Dataset']\"\r\nJSON-LD Test Suite: http://localhost:5000/collections/obs: None ... skipped \"Test type of ['Dataset']\"\r\n\r\n----------------------------------------------------------------------\r\nRan 2 tests in 0.000s\r\n\r\nOK (skipped=2)\r\n```\r\n\r\nHow can I test these?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/647192558> <http://schema.org/identifier> "647192558"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/647192558> <http://schema.org/startDate> "2020-06-21T23:00:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/647192558> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/128#issuecomment-647192558"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/649752775> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/649752775> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/649752775> <http://schema.org/description> "The `compact()` call is compacting JSON-LD data with a new context.  Effectively it will call `expand()` on the input data and then run the compaction algorithm with the new context.  When `{'key': 'value'}` is expanded, it doesn't know what `key` is so the output is empty.  It then compacts empty data which results in empty output.\r\n\r\n```py\r\ne = jsonld.expand( {'key':'value'} )\r\nprint(e) # []\r\n```\r\n\r\nThe choices here are to make the input valid by either adding the context or use the `expandContext` option.  These will allow the input to be understood when compacting.\r\n\r\n```py\r\n# add context to input\r\nctx = {'key':'http://whatever.org/key'}\r\nc = jsonld.compact( {'@context': ctx, 'key':'value'}, ctx )\r\nprint(c)  # {'@context': {'key': 'http://whatever.org/key'}, 'key': 'value'}\r\n\r\n# use expandContext option\r\nctx = {'key':'http://whatever.org/key'}\r\nc = jsonld.compact( {'key':'value'}, ctx, {'expandContext': ctx} )\r\nprint(c)  # {'@context': {'key': 'http://whatever.org/key'}, 'key': 'value'}\r\n```\r\n\r\nThe use case for compacting with the same context as the input is usually to convert full URLs to shorter terms. \r\n But when using different contexts, you can change the names as needed.\r\n\r\n```py\r\n# use expandContext option\r\nctx1 = {'key':'http://whatever.org/key'}\r\nctx2 = {'altKeyName':'http://whatever.org/key'}\r\nc = jsonld.compact( {'@context': ctx1, 'key':'value'}, ctx2 )\r\nprint(c)  # {'@context': {'altKeyName': 'http://whatever.org/key'}, 'altKeyName': 'value'}\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/649752775> <http://schema.org/identifier> "649752775"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/649752775> <http://schema.org/startDate> "2020-06-25T18:43:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/649752775> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/130#issuecomment-649752775"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650097471> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650097471> <http://schema.org/creator> <https://api.github.com/users/mfrigerio17> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650097471> <http://schema.org/description> "Hi @davidlehn , thanks for your reply.\r\nI understand what you are saying, and your examples.\r\n\r\nI think I misunderstood the purpose of compacting. My target is to process the json-ld document to expand all the keys, remove the context, and be left with unambiguous (because the keys are IRIs) json (not LD). That seems to be the purpose of *expansion*, although expansion introduces all those unnecessary arrays `[]`...\r\n\r\nStill, the compaction in the playground does exactly what I want (hence my confusion), by turning\r\n```\r\n{\r\n  \"@context\": {\r\n    \"key\" : \"http://whatever.org/key\"\r\n  },\r\n  \"key\" : \"value\"\r\n}\r\n```\r\ninto\r\n```\r\n{\r\n  \"http://whatever.org/key\": \"value\"\r\n}\r\n```\r\nwhich is the same as expansion, but without unnecessary arrays. This is not achievable with the PyLD API, I suppose.\r\nIs it a non-standard thing of the playground, perhaps?\r\n\r\nPS.: for the convenience of the reader, here is the expanded doc:\r\n```\r\n[\r\n  {\r\n    \"http://whatever.org/key\": [\r\n      {\r\n        \"@value\": \"value\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n``` " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650097471> <http://schema.org/identifier> "650097471"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650097471> <http://schema.org/startDate> "2020-06-26T10:00:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650097471> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/130#issuecomment-650097471"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650222922> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650222922> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650222922> <http://schema.org/description> "Perhaps you want to compact with an empty context `{}`?  You'll still need to ensure the input data is understood by having a context in it or using the `expandContext` option.\r\n\r\nDepending on your data and options used this might cause some undesired changes.  Specifically related to arrays being used or not used (but there are other cases).  There is a `compactArrays` option, but that effects everything and doesn't have a \"preserve\" sort of mode.  I'm not sure if there's an easy way to do that." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650222922> <http://schema.org/identifier> "650222922"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650222922> <http://schema.org/startDate> "2020-06-26T14:54:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650222922> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/130#issuecomment-650222922"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650247621> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650247621> <http://schema.org/creator> <https://api.github.com/users/mfrigerio17> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650247621> <http://schema.org/description> "Thanks, using the empty context does what I want.\r\nNow I realize that that is also the case in the playground. Sorry about it, I overlooked the `{}` in the right pane.\r\n\r\nI'll keep an eye for undesired side effects." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650247621> <http://schema.org/identifier> "650247621"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650247621> <http://schema.org/startDate> "2020-06-26T15:39:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/650247621> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/130#issuecomment-650247621"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667496680> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667496680> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667496680> <http://schema.org/description> "If this can be any useful, when the \"document loader\" sends the `.get()` request to retrieve the remote context, see [L63](https://github.com/digitalbazaar/pyld/blob/master/lib/pyld/documentloader/requests.py#L63), the parameters are:\r\n\r\n    url = https://www.w3.org/ns/activitystreams\r\n    headers = {'Accept': 'application/ld+json;profile=http://www.w3.org/ns/json-ld#context, application/ld+json, application/json;q=0.5, text/html;q=0.8, application/xhtml+xml;q=0.8'}\r\n    kwargs = {}\r\n\r\nBecause the request accepts everything, the remote has selected HTML and therefore pyld gives the error. `curl`-ing the URI with `'Accept': 'application/ld+json;profile=http://www.w3.org/ns/json-ld#context, application/ld+json, application/json;q=0.5'`, after removing the HTML option from Accept, does work.\r\nSo I think the website might be at fault here because `application/ld+json` should take higher precedence over `text/html;q=0.8`, but on the other hand why is pyld requesting HTML? Can HTML be removed from the Accept headers somehow?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667496680> <http://schema.org/identifier> "667496680"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667496680> <http://schema.org/startDate> "2020-08-01T08:42:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667496680> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/133#issuecomment-667496680"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667549956> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667549956> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667549956> <http://schema.org/description> "Changing the q value of `text/html` [here](https://github.com/digitalbazaar/pyld/blob/de5130b4a9316ac189a449ac9157c151c8a06667/lib/pyld/jsonld.py#L6574) to 0.5, that is `text/html;q=0.5`, it fetches the document correctly. Anything above 0.5 and it doesn't work.\r\n\r\nWhat the heck is going on? I don't understand." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667549956> <http://schema.org/identifier> "667549956"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667549956> <http://schema.org/startDate> "2020-08-01T15:40:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667549956> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/133#issuecomment-667549956"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667553197> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667553197> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667553197> <http://schema.org/description> "Can `text/html` and `application/xhtml+xml` be removed entirely from the Accept header? Why are they needed? Shouldn't objects always be retrieved with `application/ld+json`?" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667553197> <http://schema.org/identifier> "667553197"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667553197> <http://schema.org/startDate> "2020-08-01T16:06:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667553197> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/133#issuecomment-667553197"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667559225> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667559225> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667559225> <http://schema.org/description> "W3C have had issues with their content negotiation setup before. Certainly, changing the priority for HTML could be a workaround, but the Accept header is fine. \r\n\r\nThe text/html is included, because a processor can extract JSON-LD from html, which is arguably the bulk of JSON-LD on the web. \r\n\r\n@iherman might have a look at the server configuration for activitystreams. " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667559225> <http://schema.org/identifier> "667559225"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667559225> <http://schema.org/startDate> "2020-08-01T16:56:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667559225> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/133#issuecomment-667559225"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667564095> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667564095> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667564095> <http://schema.org/description> "Unfortunately the text/html option is hard coded into the load_document function but this issue could be circumvented if issue [#125](https://github.com/digitalbazaar/pyld/issues/125) was fixed, as it would allow to configure custom headers during creation of the document loader." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667564095> <http://schema.org/identifier> "667564095"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667564095> <http://schema.org/startDate> "2020-08-01T17:37:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667564095> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/133#issuecomment-667564095"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667568036> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667568036> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667568036> <http://schema.org/description> "OK I was able to figure out a workaround with a custom loader, but issue #125 should really be fixed because it would make this process **a lot** simpler by allowing to specify headers directly in `jsonld.set_document_loader(jsonld.requests_document_loader(timeout=..., headers=...))`.\r\n\r\n    def myloader(*args, **kwargs):\r\n        requests_loader = pyld.documentloader.requests.requests_document_loader(*args, **kwargs)\r\n        \r\n        def loader(url, options={}):\r\n            options['headers']['Accept'] = 'application/ld+json'\r\n            return requests_loader(url, options)\r\n        \r\n        return loader\r\n    \r\n    pyld.jsonld.set_document_loader(myloader())\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667568036> <http://schema.org/identifier> "667568036"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667568036> <http://schema.org/startDate> "2020-08-01T18:08:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667568036> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/133#issuecomment-667568036"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667799781> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667799781> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667799781> <http://schema.org/description> "The activitystreams.var file on the W3C site is as follows:\r\n\r\n```\r\nURI: activitystreams\r\n\r\nURI: activitystreams.html\r\nContent-Type: text/html\r\n\r\nURI: activitystreams.jsonld\r\nContent-Type: application/ld+json; qs=0.5\r\n\r\nURI: activitystreams.jsonld\r\nContent-Type: application/json; qs=0.4\r\n```\r\n\r\nthis looks o.k. to me...\r\n\r\ncc @gkellogg " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667799781> <http://schema.org/identifier> "667799781"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667799781> <http://schema.org/startDate> "2020-08-03T04:43:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667799781> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/133#issuecomment-667799781"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667813722> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667813722> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667813722> <http://schema.org/description> "Is it possible that there is some kind of weights that are been evaluated before choosing the response content-type? I have no idea how these q and qs properties are used in practice, but maybe Apache is computing a \"score\" for each type? Something like... if the request is\r\n\r\n`'Accept': 'application/ld+json;profile=http://www.w3.org/ns/json-ld#context, application/ld+json, application/json;q=0.5, text/html;q=0.8, application/xhtml+xml;q=0.8'`\r\n\r\nand the score is `q x qs`, then:\r\n\r\ntext/html = 0.8 x 1.0 = 0.8\r\napplication/ld+json = 1.0 x 0.5 = 0.5\r\napplication/json = 0.5 x 0.4 = 0.2\r\n\r\nThis would explain why any value in the Accept header for `text/html` greater than 0.5 would fail to retrieve the jsonld document, since `N x 1.0 = N` is always greater (and thus higher priority) than the `application/ld+json` \"score\" of 0.5.\r\n\r\nIf this hypothesis is true, then I must say that it's a **very messy** situation because the client cannot adjust its weights for every website." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667813722> <http://schema.org/identifier> "667813722"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667813722> <http://schema.org/startDate> "2020-08-03T05:38:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/667813722> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/133#issuecomment-667813722"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668012013> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668012013> <http://schema.org/creator> <https://api.github.com/users/datadavev> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668012013> <http://schema.org/description> "Retracting in favor of https://github.com/digitalbazaar/pyld/pull/129" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668012013> <http://schema.org/identifier> "668012013"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668012013> <http://schema.org/startDate> "2020-08-03T13:06:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668012013> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/135#issuecomment-668012013"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668376423> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668376423> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668376423> <http://schema.org/description> "To be honest: I do not know either. Maybe somebody with a better knowledge of how Apache works can advise." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668376423> <http://schema.org/identifier> "668376423"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668376423> <http://schema.org/startDate> "2020-08-04T04:45:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668376423> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/133#issuecomment-668376423"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668475068> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668475068> <http://schema.org/creator> <https://api.github.com/users/sharpaper> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668475068> <http://schema.org/description> "I'm thinking my hypothesis is indeed true. After taking a look at [httpd source](https://github.com/apache/httpd/blob/trunk/modules/mappers/mod_negotiation.c#L212) I've found two RFC ([2295](https://tools.ietf.org/html/rfc2295#section-19) and [2296](https://tools.ietf.org/html/rfc2296#section-3.3)) that say \"The overall quality Q of a variant is the value Q = round5( qs * qt * qc * ql * qf )\" where all the *q*s are various quality values. Note that the httpd source code says in the comments that all the quality values are taken from the request headers except for `qs`. Then there's also the [Apache Negotiation Algorithm](http://www.riviera-press.fr/manual/en/content-negotiation.html#algorithm) which I think it may be a slightly modified version of the one described in the RFC; anyway the step 2.1 of the algorithm is literally \"Multiply the quality factor from the Accept header with the quality-of-source factor for this variants media type, and select the variants with the highest value.\".\r\n\r\nSo the bottom line is that this probably has to be fixed in pyld. In particular I think it's an issue with the [requests loader](https://github.com/digitalbazaar/pyld/blob/master/lib/pyld/documentloader/requests.py#L32). If requests cannot accept text/html, then it should either replace the header with its own \"application/ld+json\" or as I said just fix #125 such that the headers can be defined by the user when creating a new loader." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668475068> <http://schema.org/identifier> "668475068"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668475068> <http://schema.org/startDate> "2020-08-04T08:58:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/668475068> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/133#issuecomment-668475068"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/669656199> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/669656199> <http://schema.org/creator> <https://api.github.com/users/tirkarthi> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/669656199> <http://schema.org/description> "Thanks @davidlehn ." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/669656199> <http://schema.org/identifier> "669656199"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/669656199> <http://schema.org/startDate> "2020-08-06T03:07:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/669656199> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/134#issuecomment-669656199"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/676707502> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/676707502> <http://schema.org/creator> <https://api.github.com/users/cgils> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/676707502> <http://schema.org/description> "Closing in favor of a more appropriate fix." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/676707502> <http://schema.org/identifier> "676707502"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/676707502> <http://schema.org/startDate> "2020-08-19T21:13:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/676707502> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/131#issuecomment-676707502"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692236085> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692236085> <http://schema.org/creator> <https://api.github.com/users/aucampia> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692236085> <http://schema.org/description> "I think the right solution is to change `continue` here in `_graph_to_rdf` on line 3551 to `raise ...`.\r\n\r\n\r\nhttps://github.com/digitalbazaar/pyld/blob/316fbc2c9e25b3cf718b4ee189012a64b91f17e7/lib/pyld/jsonld.py#L3547-L3552" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692236085> <http://schema.org/identifier> "692236085"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692236085> <http://schema.org/startDate> "2020-09-14T18:34:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692236085> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/137#issuecomment-692236085"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692251737> <http://example.com/ns#authorAssociation> "COLLABORATOR" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692251737> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692251737> <http://schema.org/description> "The spec specifically calls for such IRIs to be ignored, so raising an error would cause some tests to fail. I think the best thing to do is issue a warning, but a processor flag could cause an error to be raised." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692251737> <http://schema.org/identifier> "692251737"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692251737> <http://schema.org/startDate> "2020-09-14T19:03:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692251737> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/138#issuecomment-692251737"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692263880> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692263880> <http://schema.org/creator> <https://api.github.com/users/aucampia> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692263880> <http://schema.org/description> "Thanks for the info @gkellogg \r\n\r\nI think maybe to keep things clean it is best to add two options: `strict` and `warn`. If `strict` is set to `True` then raise when encountering an invalid IRI (i.e. not a valid absolute IRI), if `warn` is set to `True` then warn in the same case.\r\n\r\n`strict` and `warn` could then be used for other similar cases in future.\r\n\r\nNot sure what you think is best, feedback is appreciated." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692263880> <http://schema.org/identifier> "692263880"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692263880> <http://schema.org/startDate> "2020-09-14T19:26:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692263880> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/138#issuecomment-692263880"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692264504> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692264504> <http://schema.org/creator> <https://api.github.com/users/aucampia> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692264504> <http://schema.org/description> "The other option is maybe to just have `warn` and `errorOnInvalidIRI` - but I worry that this will lead to proliferation of `errorOn...` options. " .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692264504> <http://schema.org/identifier> "692264504"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692264504> <http://schema.org/startDate> "2020-09-14T19:27:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/692264504> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/138#issuecomment-692264504"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706078894> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706078894> <http://schema.org/creator> <https://api.github.com/users/JulienPalard> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706078894> <http://schema.org/description> "This PR does not fixes the following test:\r\n```\r\nfrom pyld import jsonld\r\n\r\njsonld.expand(\r\n    {\r\n        \"@context\": \"http://schema.org/\",\r\n        \"@type\": \"Person\",\r\n        \"name\": \"Jane Doe\",\r\n        \"jobTitle\": \"Professor\",\r\n        \"telephone\": \"(425) 123-4567\",\r\n        \"url\": \"http://www.janedoe.com\",\r\n    }\r\n)\r\n```\r\nbecause https://schema.org gives `Content-Type: text/html`, which is in `headers[\"Accept\"]`:\r\n\r\n```python\r\n(Pdb) p headers[\"Accept\"]\r\n'application/ld+json;profile=http://www.w3.org/ns/json-ld#context, application/ld+json, application/json;q=0.5, text/html;q=0.8, application/xhtml+xml;q=0.8'\r\n```\r\nit's here due to `pyld/jsonld.py` adding it:\r\n```python\r\n6573 \t    # FIXME: only if html5lib loaded?\r\n6574 \t    headers['Accept'] = headers['Accept'] + ', text/html;q=0.8, application/xhtml+xml;q=0.8'\r\n```\r\n\r\nAccording to [json-ld](https://www.w3.org/TR/json-ld/#alternate-document-location):\r\n\r\n> A processor seeing a non-JSON result will note the presence of the link header and load that document instead.\r\n\r\nSo even if we accept HTML, if it's HTML and there's a json-ld alternative, let's use it.\r\n\r\nTo do this, I'll move `doc['document'] = response.json()` right before returning, and just drop the `if content_type not in headers['Accept']:` you added, it works *for me*.\r\n\r\nIn other words (and with a correct indentation) I mean:\r\n```diff\r\n--- a/lib/pyld/documentloader/requests.py\r\n+++ b/lib/pyld/documentloader/requests.py\r\n@@ -69,7 +69,6 @@ def requests_document_loader(secure=False, **kwargs):\r\n                 'contentType': content_type,\r\n                 'contextUrl': None,\r\n                 'documentUrl': response.url,\r\n-                'document': response.json() if content_type in headers['Accept'] else None\r\n             }\r\n             link_header = response.headers.get('link')\r\n             if link_header:\r\n@@ -77,15 +76,15 @@ def requests_document_loader(secure=False, **kwargs):\r\n                     LINK_HEADER_REL)\r\n                 # only 1 related link header permitted\r\n                 if linked_context and content_type != 'application/ld+json':\r\n-                  if isinstance(linked_context, list):\r\n-                      raise JsonLdError(\r\n-                          'URL could not be dereferenced, '\r\n-                          'it has more than one '\r\n-                          'associated HTTP Link Header.',\r\n-                          'jsonld.LoadDocumentError',\r\n-                          {'url': url},\r\n-                          code='multiple context link headers')\r\n-                  doc['contextUrl'] = linked_context['target']\r\n+                    if isinstance(linked_context, list):\r\n+                        raise JsonLdError(\r\n+                            'URL could not be dereferenced, '\r\n+                            'it has more than one '\r\n+                            'associated HTTP Link Header.',\r\n+                            'jsonld.LoadDocumentError',\r\n+                            {'url': url},\r\n+                            code='multiple context link headers')\r\n+                    doc['contextUrl'] = linked_context['target']\r\n                 linked_alternate = parse_link_header(link_header).get('alternate')\r\n                 # if not JSON-LD, alternate may point there\r\n                 if (linked_alternate and\r\n@@ -93,9 +92,8 @@ def requests_document_loader(secure=False, **kwargs):\r\n                         not re.match(r'^application\\/(\\w*\\+)?json$', content_type)):\r\n                     doc['contentType'] = 'application/ld+json'\r\n                     doc['documentUrl'] = prepend_base(url, linked_alternate['target'])\r\n-                    if content_type not in headers['Accept']:\r\n-                        # Original was not JSON/JSON-LD; fetch linked JSON-LD\r\n-                        return loader(doc['documentUrl'], options=options)\r\n+                    return loader(doc['documentUrl'], options=options)\r\n+            doc['document'] = response.json()\r\n             return doc\r\n         except JsonLdError as e:\r\n             raise e\r\n```" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706078894> <http://schema.org/identifier> "706078894"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706078894> <http://schema.org/startDate> "2020-10-09T09:36:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706078894> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/129#issuecomment-706078894"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706638876> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706638876> <http://schema.org/creator> <https://api.github.com/users/alpha-beta-soup> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706638876> <http://schema.org/description> "Hmm, that's a bit odd. Yes, Pyld adds `text/html` (in the line you pointed out, i.e. `headers['Accept'] = headers['Accept'] + ', text/html;q=0.8, application/xhtml+xml;q=0.8'`) but that's a [default header value](https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation/List_of_default_Accept_values) and it shouldn't affect the server response as long as `application/json+ld` is included in the `Accept` header value with a higher precedence. That check\r\n\r\n```python\r\nif content_type not in headers['Accept']:\r\n    # Original was not JSON/JSON-LD; fetch linked JSON-LD\r\n    return loader(doc['documentUrl'], options=options)\r\n```\r\n\r\nis important, it checks whether the server responded with `application/json+ld`, and if not, attempts to fetch the linked resource. There's no value doing this if the response is already JSON-LD." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706638876> <http://schema.org/identifier> "706638876"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706638876> <http://schema.org/startDate> "2020-10-11T02:16:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706638876> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/129#issuecomment-706638876"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706666573> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706666573> <http://schema.org/creator> <https://api.github.com/users/JulienPalard> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706666573> <http://schema.org/description> "> it shouldn't affect the server response as long as `application/json+ld` is included in the `Accept` header value with a higher precedence.\r\n\r\nTotally agree. But looks like https://schema.org/ does *not* have a `application/json-ld` variant at all, so it always reply with `text/html`, independently of the `Accept` header. But this `text/html` response links to the ld+json, see:\r\n```\r\n$ curl -I -H \"Accept: application/ld+json\" https://schema.org\r\nHTTP/2 200 \r\n[...]\r\nlink: </docs/jsonldcontext.jsonld>; rel=\"alternate\"; type=\"application/ld+json\"\r\n[...]\r\ncontent-type: text/html\r\n[...]\r\n```\r\n\r\nWhich looks legit to me, even though I still didn't read and understood rfc8288 entierly.\r\n\r\n> That check\r\n> \r\n> ```python\r\n> if content_type not in headers['Accept']:\r\n>     # Original was not JSON/JSON-LD; fetch linked JSON-LD\r\n>     return loader(doc['documentUrl'], options=options)\r\n> ```\r\n> \r\n> is important, it checks whether the server responded with `application/json+ld`, and if not, attempts to fetch the linked resource. There's no value doing this if the response is already JSON-LD.\r\n\r\nIIRC It looks already covered by the:\r\n\r\n> not re.match(r'^application\\/(\\w*\\+)?json$', content_type)):\r\n\r\ncheck a few line before.\r\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706666573> <http://schema.org/identifier> "706666573"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706666573> <http://schema.org/startDate> "2020-10-11T07:58:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706666573> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/129#issuecomment-706666573"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706669764> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706669764> <http://schema.org/creator> <https://api.github.com/users/alpha-beta-soup> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706669764> <http://schema.org/description> "Ah I see. Sorry it's been a while since I've looked at this. I think your version of the PR makes sense, and as long as both our tests pass, it gets my vote." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706669764> <http://schema.org/identifier> "706669764"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706669764> <http://schema.org/startDate> "2020-10-11T08:27:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706669764> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/129#issuecomment-706669764"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681362> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681362> <http://schema.org/creator> <https://api.github.com/users/JulienPalard> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681362> <http://schema.org/description> "> and as long as both our tests pass, it gets my vote.\r\n\r\nI'd like to add  both tests to the test suite, but I don't understand how to do so. If someone can explain before merging I'd gladly do so." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681362> <http://schema.org/identifier> "706681362"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681362> <http://schema.org/startDate> "2020-10-11T10:11:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681362> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/129#issuecomment-706681362"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681454> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681454> <http://schema.org/creator> <https://api.github.com/users/JulienPalard> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681454> <http://schema.org/description> "I'd like to add some tests to the test suite, but I don't understand how to do so. If someone can explain before merging I'd gladly do so." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681454> <http://schema.org/identifier> "706681454"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681454> <http://schema.org/startDate> "2020-10-11T10:12:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/706681454> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/141#issuecomment-706681454"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859032> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859032> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859032> <http://schema.org/description> "> Isn't that inconsistent with the latest state of jsonld.js?\n\nNo, `@once` was renamed to `@last` to better reflect which occurrence in the data is the one that gets embedded (it's the last one). See https://github.com/json-ld/json-ld.org/issues/377 and https://github.com/digitalbazaar/jsonld.js/blob/master/js/jsonld.js#L451.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859032> <http://schema.org/identifier> "70859032"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859032> <http://schema.org/startDate> "2015-01-21T15:37:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859032> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/38#issuecomment-70859032"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859515> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859515> <http://schema.org/creator> <https://api.github.com/users/faassen> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859515> <http://schema.org/description> "Ah, I somehow was under the mistaken impression that it `@last` became `@once`, sorry! Thank you for your continued patience with my noob questions!\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859515> <http://schema.org/identifier> "70859515"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859515> <http://schema.org/startDate> "2015-01-21T15:40:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859515> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/38#issuecomment-70859515"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859716> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859716> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859716> <http://schema.org/description> ":)\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859716> <http://schema.org/identifier> "70859716"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859716> <http://schema.org/startDate> "2015-01-21T15:41:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/70859716> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/38#issuecomment-70859716"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/714277478> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/714277478> <http://schema.org/creator> <https://api.github.com/users/RinkeHoekstra> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/714277478> <http://schema.org/description> "I'd like to bump this as it fixes major issues we're facing internally, with slow framing on large JSON-LD files.\r\n\r\nI will try to generate some artificial data (large amount of data, few properties)." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/714277478> <http://schema.org/identifier> "714277478"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/714277478> <http://schema.org/startDate> "2020-10-22T07:00:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/714277478> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/pull/101#issuecomment-714277478"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/736825094> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/736825094> <http://schema.org/creator> <https://api.github.com/users/stuchalk> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/736825094> <http://schema.org/description> "Is there any update to the this request.  I was able to change the MAX_CONTENT_URLS variable in context_resolver to 30 very easily..." .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/736825094> <http://schema.org/identifier> "736825094"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/736825094> <http://schema.org/startDate> "2020-12-01T21:15:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/736825094> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/104#issuecomment-736825094"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/82500626> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/82500626> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/82500626> <http://schema.org/description> "Fixed.\nhttps://github.com/digitalbazaar/pyld/commit/b2cc497eedfc8cf712230ae0066c3bcab9108f4b\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/82500626> <http://schema.org/identifier> "82500626"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/82500626> <http://schema.org/startDate> "2015-03-17T18:01:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/82500626> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/40#issuecomment-82500626"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90076195> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90076195> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90076195> <http://schema.org/description> "Sorry for the slow response, extremely busy around here. Thanks for the bug report, we will look into this when we can.\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90076195> <http://schema.org/identifier> "90076195"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90076195> <http://schema.org/startDate> "2015-04-06T14:06:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90076195> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/39#issuecomment-90076195"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90080282> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90080282> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90080282> <http://schema.org/description> "When running this:\n\n``` python\nimport json\nfrom pyld import jsonld\n\ndoc = {\n    \"@context\": {\n        \"dbpedia\": \"http://dbpedia.org/ontology/\",\n        \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n        \"owl\": \"http://www.w3.org/2002/07/owl#\",\n        \"@base\": \"http://myurl.com/astronomy\",\n        \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n        \"skos\": \"http://www.w3.org/2004/02/skos/core#\",\n        \"schema\": \"https://schema.org/\",\n        \"defines\": {\"@reverse\": \"rdfs:isDefinedBy\"}\n    },\n    \"@id\": \"\",\n    \"@type\": [\"http://www.w3.org/2002/07/owl#Ontology\"],\n    \"defines\" : [{\"@id\": \"http://example.com\"}]\n}\n\nresult = jsonld.expand(doc);\nprint(json.dumps(result, indent=2))\n```\n\nIt produces:\n\n``` json\n[\n  {\n    \"@reverse\": {\n      \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n        {\n          \"@id\": \"http://example.com\"\n        }\n      ]\n    }, \n    \"@id\": \"http://myurl.com/astronomy\", \n    \"@type\": [\n      \"http://www.w3.org/2002/07/owl#Ontology\"\n    ]\n  }\n]\n```\n\nIf I change it to run compaction over the document with the same context:\n\n``` python\nresult = jsonld.compact(doc, doc['@context']);\nprint(json.dumps(result, indent=2))\n```\n\nI get this:\n\n``` json\n{\n  \"@context\": {\n    \"owl\": \"http://www.w3.org/2002/07/owl#\", \n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\", \n    \"@base\": \"http://myurl.com/astronomy\", \n    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\", \n    \"dbpedia\": \"http://dbpedia.org/ontology/\", \n    \"schema\": \"https://schema.org/\", \n    \"skos\": \"http://www.w3.org/2004/02/skos/core#\", \n    \"defines\": {\n      \"@reverse\": \"rdfs:isDefinedBy\"\n    }\n  }, \n  \"@id\": \"astronomy\", \n  \"@type\": \"owl:Ontology\", \n  \"defines\": {\n    \"@id\": \"http://example.com\"\n  }\n}\n```\n\nWhat code are you running that is dropping the `defines` property? Are you including the context in the input?\n" .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90080282> <http://schema.org/identifier> "90080282"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90080282> <http://schema.org/startDate> "2015-04-06T14:21:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/digitalbazaar/pyld/issues/comments/90080282> <http://schema.org/url> "https://github.com/digitalbazaar/pyld/issues/39#issuecomment-90080282"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/repos/digitalbazaar/pyld/labels/bug> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/labels/bug> <http://schema.org/identifier> "1987079233"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/labels/bug> <http://schema.org/name> "bug" .
<https://api.github.com/repos/digitalbazaar/pyld/labels/docs> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/labels/docs> <http://schema.org/identifier> "1987084548"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/labels/docs> <http://schema.org/name> "docs" .
<https://api.github.com/repos/digitalbazaar/pyld/labels/performance> <http://schema.org/description> "" .
<https://api.github.com/repos/digitalbazaar/pyld/labels/performance> <http://schema.org/identifier> "1987080379"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/digitalbazaar/pyld/labels/performance> <http://schema.org/name> "performance" .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/100> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/101> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/102> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/103> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/104> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/105> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/106> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/107> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/108> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/109> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/10> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/110> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/111> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/112> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/113> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/114> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/115> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/116> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/117> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/118> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/119> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/11> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/120> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/121> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/122> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/123> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/124> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/125> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/126> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/127> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/128> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/129> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/12> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/130> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/131> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/132> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/133> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/134> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/135> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/136> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/137> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/138> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/139> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/13> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/140> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/141> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/142> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/143> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/14> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/15> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/16> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/17> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/18> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/19> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/1> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/20> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/21> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/22> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/23> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/24> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/25> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/26> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/27> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/28> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/29> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/2> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/30> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/31> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/32> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/33> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/34> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/35> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/36> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/37> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/38> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/39> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/3> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/40> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/41> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/42> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/43> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/44> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/45> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/46> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/47> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/48> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/49> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/4> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/50> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/51> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/52> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/53> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/54> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/55> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/56> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/57> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/58> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/59> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/5> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/60> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/61> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/62> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/63> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/64> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/65> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/66> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/67> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/68> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/69> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/6> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/70> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/71> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/72> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/73> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/74> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/75> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/76> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/77> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/78> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/79> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/7> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/80> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/81> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/82> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/83> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/84> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/85> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/86> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/87> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/88> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/89> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/8> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/90> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/91> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/92> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/93> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/94> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/95> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/96> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/97> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/98> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/99> .
<https://api.github.com/repos/digitalbazaar/pyld> <http://example.com/ns#issue> <https://api.github.com/repos/digitalbazaar/pyld/issues/9> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accouuntId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/identifier> "43209"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/Elizafox> <http://schema.org/accouuntId> "Elizafox" .
<https://api.github.com/users/Elizafox> <http://schema.org/identifier> "659425"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/Elizafox> <http://schema.org/url> "https://github.com/Elizafox"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/Fak3> <http://schema.org/accouuntId> "Fak3" .
<https://api.github.com/users/Fak3> <http://schema.org/identifier> "991641"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/Fak3> <http://schema.org/url> "https://github.com/Fak3"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/IllDepence> <http://schema.org/accouuntId> "IllDepence" .
<https://api.github.com/users/IllDepence> <http://schema.org/identifier> "1835279"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/IllDepence> <http://schema.org/url> "https://github.com/IllDepence"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/James-Hudson3010> <http://schema.org/accouuntId> "James-Hudson3010" .
<https://api.github.com/users/James-Hudson3010> <http://schema.org/identifier> "60199558"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/James-Hudson3010> <http://schema.org/url> "https://github.com/James-Hudson3010"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/JoelBender> <http://schema.org/accouuntId> "JoelBender" .
<https://api.github.com/users/JoelBender> <http://schema.org/identifier> "10273490"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/JoelBender> <http://schema.org/url> "https://github.com/JoelBender"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/JulienPalard> <http://schema.org/accouuntId> "JulienPalard" .
<https://api.github.com/users/JulienPalard> <http://schema.org/identifier> "239510"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/JulienPalard> <http://schema.org/url> "https://github.com/JulienPalard"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/Kerrigan29a> <http://schema.org/accouuntId> "Kerrigan29a" .
<https://api.github.com/users/Kerrigan29a> <http://schema.org/identifier> "673337"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/Kerrigan29a> <http://schema.org/url> "https://github.com/Kerrigan29a"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/Mec-iS> <http://schema.org/accouuntId> "Mec-iS" .
<https://api.github.com/users/Mec-iS> <http://schema.org/identifier> "3146196"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/Mec-iS> <http://schema.org/url> "https://github.com/Mec-iS"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/MonkeyChap> <http://schema.org/accouuntId> "MonkeyChap" .
<https://api.github.com/users/MonkeyChap> <http://schema.org/identifier> "956361"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/MonkeyChap> <http://schema.org/url> "https://github.com/MonkeyChap"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/Panaetius> <http://schema.org/accouuntId> "Panaetius" .
<https://api.github.com/users/Panaetius> <http://schema.org/identifier> "664486"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/Panaetius> <http://schema.org/url> "https://github.com/Panaetius"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/ProgVal> <http://schema.org/accouuntId> "ProgVal" .
<https://api.github.com/users/ProgVal> <http://schema.org/identifier> "406946"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/ProgVal> <http://schema.org/url> "https://github.com/ProgVal"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/RDProjekt> <http://schema.org/accouuntId> "RDProjekt" .
<https://api.github.com/users/RDProjekt> <http://schema.org/identifier> "8257240"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/RDProjekt> <http://schema.org/url> "https://github.com/RDProjekt"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/RinkeHoekstra> <http://schema.org/accouuntId> "RinkeHoekstra" .
<https://api.github.com/users/RinkeHoekstra> <http://schema.org/identifier> "715019"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/RinkeHoekstra> <http://schema.org/url> "https://github.com/RinkeHoekstra"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/ViktorHaag> <http://schema.org/accouuntId> "ViktorHaag" .
<https://api.github.com/users/ViktorHaag> <http://schema.org/identifier> "5429477"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/ViktorHaag> <http://schema.org/url> "https://github.com/ViktorHaag"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/alantrick> <http://schema.org/accouuntId> "alantrick" .
<https://api.github.com/users/alantrick> <http://schema.org/identifier> "431603"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/alantrick> <http://schema.org/url> "https://github.com/alantrick"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/alegrm> <http://schema.org/accouuntId> "alegrm" .
<https://api.github.com/users/alegrm> <http://schema.org/identifier> "655140"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/alegrm> <http://schema.org/url> "https://github.com/alegrm"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/alpha-beta-soup> <http://schema.org/accouuntId> "alpha-beta-soup" .
<https://api.github.com/users/alpha-beta-soup> <http://schema.org/identifier> "5925045"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/alpha-beta-soup> <http://schema.org/url> "https://github.com/alpha-beta-soup"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/amarts> <http://schema.org/accouuntId> "amarts" .
<https://api.github.com/users/amarts> <http://schema.org/identifier> "624969"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/amarts> <http://schema.org/url> "https://github.com/amarts"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/anarchivist> <http://schema.org/accouuntId> "anarchivist" .
<https://api.github.com/users/anarchivist> <http://schema.org/identifier> "73732"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/anarchivist> <http://schema.org/url> "https://github.com/anarchivist"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/anatoly-scherbakov> <http://schema.org/accouuntId> "anatoly-scherbakov" .
<https://api.github.com/users/anatoly-scherbakov> <http://schema.org/identifier> "2282888"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/anatoly-scherbakov> <http://schema.org/url> "https://github.com/anatoly-scherbakov"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/apeters> <http://schema.org/accouuntId> "apeters" .
<https://api.github.com/users/apeters> <http://schema.org/identifier> "823773"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/apeters> <http://schema.org/url> "https://github.com/apeters"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/aucampia> <http://schema.org/accouuntId> "aucampia" .
<https://api.github.com/users/aucampia> <http://schema.org/identifier> "4481387"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/aucampia> <http://schema.org/url> "https://github.com/aucampia"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/azaroth42> <http://schema.org/accouuntId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/identifier> "871868"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/bcipolli> <http://schema.org/accouuntId> "bcipolli" .
<https://api.github.com/users/bcipolli> <http://schema.org/identifier> "4072455"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/bcipolli> <http://schema.org/url> "https://github.com/bcipolli"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/bollwyvl> <http://schema.org/accouuntId> "bollwyvl" .
<https://api.github.com/users/bollwyvl> <http://schema.org/identifier> "45380"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/bollwyvl> <http://schema.org/url> "https://github.com/bollwyvl"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/bpow> <http://schema.org/accouuntId> "bpow" .
<https://api.github.com/users/bpow> <http://schema.org/identifier> "377006"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/bpow> <http://schema.org/url> "https://github.com/bpow"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/calummackervoy> <http://schema.org/accouuntId> "calummackervoy" .
<https://api.github.com/users/calummackervoy> <http://schema.org/identifier> "10801930"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/calummackervoy> <http://schema.org/url> "https://github.com/calummackervoy"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/cgils> <http://schema.org/accouuntId> "cgils" .
<https://api.github.com/users/cgils> <http://schema.org/identifier> "4643663"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/cgils> <http://schema.org/url> "https://github.com/cgils"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/coffindragger> <http://schema.org/accouuntId> "coffindragger" .
<https://api.github.com/users/coffindragger> <http://schema.org/identifier> "1036324"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/coffindragger> <http://schema.org/url> "https://github.com/coffindragger"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/datadavev> <http://schema.org/accouuntId> "datadavev" .
<https://api.github.com/users/datadavev> <http://schema.org/identifier> "605409"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/datadavev> <http://schema.org/url> "https://github.com/datadavev"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/davidlehn> <http://schema.org/accouuntId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/identifier> "109587"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/dlongley> <http://schema.org/accouuntId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/identifier> "168137"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/dpjanes> <http://schema.org/accouuntId> "dpjanes" .
<https://api.github.com/users/dpjanes> <http://schema.org/identifier> "2311111"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/dpjanes> <http://schema.org/url> "https://github.com/dpjanes"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/edsu> <http://schema.org/accouuntId> "edsu" .
<https://api.github.com/users/edsu> <http://schema.org/identifier> "33829"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/edsu> <http://schema.org/url> "https://github.com/edsu"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/ericpeden> <http://schema.org/accouuntId> "ericpeden" .
<https://api.github.com/users/ericpeden> <http://schema.org/identifier> "104542"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/ericpeden> <http://schema.org/url> "https://github.com/ericpeden"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/faassen> <http://schema.org/accouuntId> "faassen" .
<https://api.github.com/users/faassen> <http://schema.org/identifier> "327472"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/faassen> <http://schema.org/url> "https://github.com/faassen"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/fconil> <http://schema.org/accouuntId> "fconil" .
<https://api.github.com/users/fconil> <http://schema.org/identifier> "809748"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/fconil> <http://schema.org/url> "https://github.com/fconil"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/frague59> <http://schema.org/accouuntId> "frague59" .
<https://api.github.com/users/frague59> <http://schema.org/identifier> "1118696"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/frague59> <http://schema.org/url> "https://github.com/frague59"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/frewsxcv> <http://schema.org/accouuntId> "frewsxcv" .
<https://api.github.com/users/frewsxcv> <http://schema.org/identifier> "416575"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/frewsxcv> <http://schema.org/url> "https://github.com/frewsxcv"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/gcarothers> <http://schema.org/accouuntId> "gcarothers" .
<https://api.github.com/users/gcarothers> <http://schema.org/identifier> "118299"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/gcarothers> <http://schema.org/url> "https://github.com/gcarothers"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/gkellogg> <http://schema.org/accouuntId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/identifier> "46296"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/greut> <http://schema.org/accouuntId> "greut" .
<https://api.github.com/users/greut> <http://schema.org/identifier> "1388"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/greut> <http://schema.org/url> "https://github.com/greut"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/gustavorps> <http://schema.org/accouuntId> "gustavorps" .
<https://api.github.com/users/gustavorps> <http://schema.org/identifier> "516827"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/gustavorps> <http://schema.org/url> "https://github.com/gustavorps"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/hsolbrig> <http://schema.org/accouuntId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/identifier> "415926"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/iherman> <http://schema.org/accouuntId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/identifier> "520723"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/jakubartory> <http://schema.org/accouuntId> "jakubartory" .
<https://api.github.com/users/jakubartory> <http://schema.org/identifier> "20741761"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/jakubartory> <http://schema.org/url> "https://github.com/jakubartory"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/jevans97utk> <http://schema.org/accouuntId> "jevans97utk" .
<https://api.github.com/users/jevans97utk> <http://schema.org/identifier> "50411411"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/jevans97utk> <http://schema.org/url> "https://github.com/jevans97utk"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/jkreft-usgs> <http://schema.org/accouuntId> "jkreft-usgs" .
<https://api.github.com/users/jkreft-usgs> <http://schema.org/identifier> "8128936"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/jkreft-usgs> <http://schema.org/url> "https://github.com/jkreft-usgs"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/jmandel> <http://schema.org/accouuntId> "jmandel" .
<https://api.github.com/users/jmandel> <http://schema.org/identifier> "313089"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/jmandel> <http://schema.org/url> "https://github.com/jmandel"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/justjulian> <http://schema.org/accouuntId> "justjulian" .
<https://api.github.com/users/justjulian> <http://schema.org/identifier> "788673"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/justjulian> <http://schema.org/url> "https://github.com/justjulian"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/kacarstensen-shift> <http://schema.org/accouuntId> "kacarstensen-shift" .
<https://api.github.com/users/kacarstensen-shift> <http://schema.org/identifier> "6125380"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/kacarstensen-shift> <http://schema.org/url> "https://github.com/kacarstensen-shift"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/kal> <http://schema.org/accouuntId> "kal" .
<https://api.github.com/users/kal> <http://schema.org/identifier> "70985"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/kal> <http://schema.org/url> "https://github.com/kal"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/kasei> <http://schema.org/accouuntId> "kasei" .
<https://api.github.com/users/kasei> <http://schema.org/identifier> "4872"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/kasei> <http://schema.org/url> "https://github.com/kasei"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/kevinxin90> <http://schema.org/accouuntId> "kevinxin90" .
<https://api.github.com/users/kevinxin90> <http://schema.org/identifier> "10997542"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/kevinxin90> <http://schema.org/url> "https://github.com/kevinxin90"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/kimdhamilton> <http://schema.org/accouuntId> "kimdhamilton" .
<https://api.github.com/users/kimdhamilton> <http://schema.org/identifier> "3945683"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/kimdhamilton> <http://schema.org/url> "https://github.com/kimdhamilton"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/lexruee> <http://schema.org/accouuntId> "lexruee" .
<https://api.github.com/users/lexruee> <http://schema.org/identifier> "649340"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/lexruee> <http://schema.org/url> "https://github.com/lexruee"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/mfrigerio17> <http://schema.org/accouuntId> "mfrigerio17" .
<https://api.github.com/users/mfrigerio17> <http://schema.org/identifier> "3646506"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/mfrigerio17> <http://schema.org/url> "https://github.com/mfrigerio17"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/mhalle> <http://schema.org/accouuntId> "mhalle" .
<https://api.github.com/users/mhalle> <http://schema.org/identifier> "649467"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/mhalle> <http://schema.org/url> "https://github.com/mhalle"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/mih> <http://schema.org/accouuntId> "mih" .
<https://api.github.com/users/mih> <http://schema.org/identifier> "136479"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/mih> <http://schema.org/url> "https://github.com/mih"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/mr-stateradio> <http://schema.org/accouuntId> "mr-stateradio" .
<https://api.github.com/users/mr-stateradio> <http://schema.org/identifier> "1614608"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/mr-stateradio> <http://schema.org/url> "https://github.com/mr-stateradio"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/mt-digital> <http://schema.org/accouuntId> "mt-digital" .
<https://api.github.com/users/mt-digital> <http://schema.org/identifier> "2425472"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/mt-digital> <http://schema.org/url> "https://github.com/mt-digital"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/oohlaf> <http://schema.org/accouuntId> "oohlaf" .
<https://api.github.com/users/oohlaf> <http://schema.org/identifier> "3041773"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/oohlaf> <http://schema.org/url> "https://github.com/oohlaf"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/origliante> <http://schema.org/accouuntId> "origliante" .
<https://api.github.com/users/origliante> <http://schema.org/identifier> "6919114"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/origliante> <http://schema.org/url> "https://github.com/origliante"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/pacificleo> <http://schema.org/accouuntId> "pacificleo" .
<https://api.github.com/users/pacificleo> <http://schema.org/identifier> "4576602"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/pacificleo> <http://schema.org/url> "https://github.com/pacificleo"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/pchampin> <http://schema.org/accouuntId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/identifier> "304612"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/pekrau> <http://schema.org/accouuntId> "pekrau" .
<https://api.github.com/users/pekrau> <http://schema.org/identifier> "419036"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/pekrau> <http://schema.org/url> "https://github.com/pekrau"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/accouuntId> "pjohnston-wiley" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/identifier> "11592786"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/url> "https://github.com/pjohnston-wiley"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/rdhyee> <http://schema.org/accouuntId> "rdhyee" .
<https://api.github.com/users/rdhyee> <http://schema.org/identifier> "153266"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/rdhyee> <http://schema.org/url> "https://github.com/rdhyee"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/reece> <http://schema.org/accouuntId> "reece" .
<https://api.github.com/users/reece> <http://schema.org/identifier> "109453"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/reece> <http://schema.org/url> "https://github.com/reece"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/rfm-bot> <http://schema.org/accouuntId> "rfm-bot" .
<https://api.github.com/users/rfm-bot> <http://schema.org/identifier> "64042803"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/rfm-bot> <http://schema.org/url> "https://github.com/rfm-bot"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/rknLA> <http://schema.org/accouuntId> "rknLA" .
<https://api.github.com/users/rknLA> <http://schema.org/identifier> "343090"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/rknLA> <http://schema.org/url> "https://github.com/rknLA"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/rspeer> <http://schema.org/accouuntId> "rspeer" .
<https://api.github.com/users/rspeer> <http://schema.org/identifier> "234227"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/rspeer> <http://schema.org/url> "https://github.com/rspeer"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/sanuann> <http://schema.org/accouuntId> "sanuann" .
<https://api.github.com/users/sanuann> <http://schema.org/identifier> "5114945"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/sanuann> <http://schema.org/url> "https://github.com/sanuann"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/satra> <http://schema.org/accouuntId> "satra" .
<https://api.github.com/users/satra> <http://schema.org/identifier> "184063"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/satra> <http://schema.org/url> "https://github.com/satra"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/sharpaper> <http://schema.org/accouuntId> "sharpaper" .
<https://api.github.com/users/sharpaper> <http://schema.org/identifier> "32109035"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/sharpaper> <http://schema.org/url> "https://github.com/sharpaper"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/sohkai> <http://schema.org/accouuntId> "sohkai" .
<https://api.github.com/users/sohkai> <http://schema.org/identifier> "4166642"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/sohkai> <http://schema.org/url> "https://github.com/sohkai"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/sospedra> <http://schema.org/accouuntId> "sospedra" .
<https://api.github.com/users/sospedra> <http://schema.org/identifier> "3116899"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/sospedra> <http://schema.org/url> "https://github.com/sospedra"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/stuchalk> <http://schema.org/accouuntId> "stuchalk" .
<https://api.github.com/users/stuchalk> <http://schema.org/identifier> "540150"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/stuchalk> <http://schema.org/url> "https://github.com/stuchalk"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/sx5640> <http://schema.org/accouuntId> "sx5640" .
<https://api.github.com/users/sx5640> <http://schema.org/identifier> "5818914"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/sx5640> <http://schema.org/url> "https://github.com/sx5640"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/timClicks> <http://schema.org/accouuntId> "timClicks" .
<https://api.github.com/users/timClicks> <http://schema.org/identifier> "27889"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/timClicks> <http://schema.org/url> "https://github.com/timClicks"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/tirkarthi> <http://schema.org/accouuntId> "tirkarthi" .
<https://api.github.com/users/tirkarthi> <http://schema.org/identifier> "3972343"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/tirkarthi> <http://schema.org/url> "https://github.com/tirkarthi"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/tisdall> <http://schema.org/accouuntId> "tisdall" .
<https://api.github.com/users/tisdall> <http://schema.org/identifier> "4029388"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/tisdall> <http://schema.org/url> "https://github.com/tisdall"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/tony> <http://schema.org/accouuntId> "tony" .
<https://api.github.com/users/tony> <http://schema.org/identifier> "26336"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/tony> <http://schema.org/url> "https://github.com/tony"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/tristan> <http://schema.org/accouuntId> "tristan" .
<https://api.github.com/users/tristan> <http://schema.org/identifier> "1412"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/tristan> <http://schema.org/url> "https://github.com/tristan"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/umang0202> <http://schema.org/accouuntId> "umang0202" .
<https://api.github.com/users/umang0202> <http://schema.org/identifier> "13660241"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/umang0202> <http://schema.org/url> "https://github.com/umang0202"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/westurner> <http://schema.org/accouuntId> "westurner" .
<https://api.github.com/users/westurner> <http://schema.org/identifier> "50891"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/westurner> <http://schema.org/url> "https://github.com/westurner"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/wladston> <http://schema.org/accouuntId> "wladston" .
<https://api.github.com/users/wladston> <http://schema.org/identifier> "356660"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/wladston> <http://schema.org/url> "https://github.com/wladston"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/workergnome> <http://schema.org/accouuntId> "workergnome" .
<https://api.github.com/users/workergnome> <http://schema.org/identifier> "34536"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/workergnome> <http://schema.org/url> "https://github.com/workergnome"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/yarikoptic> <http://schema.org/accouuntId> "yarikoptic" .
<https://api.github.com/users/yarikoptic> <http://schema.org/identifier> "39889"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/yarikoptic> <http://schema.org/url> "https://github.com/yarikoptic"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
<https://api.github.com/users/zwelz3> <http://schema.org/accouuntId> "zwelz3" .
<https://api.github.com/users/zwelz3> <http://schema.org/identifier> "32652349"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/users/zwelz3> <http://schema.org/url> "https://github.com/zwelz3"^^<http://www.w3.org/2001/XMLSchema#anyURL> .
